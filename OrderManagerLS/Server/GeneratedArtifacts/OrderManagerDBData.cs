//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Approval_ApprovalEntityType", "ApprovalEntityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ApprovalEntityType), "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Approval), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Approval_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Approval), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Asset_AssetName", "AssetName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.AssetName), "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Asset), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Asset_BrandName", "BrandName", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.BrandName), "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Asset), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Asset_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Company), "Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Asset), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_AssetName_AssetCategory", "AssetCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.AssetCategory), "AssetName", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.AssetName), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CartonBox_Invoice", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Invoice), "CartonBox", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CartonBox), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CartonBox_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "CartonBox", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CartonBox), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJo_Approval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Approval), "CompactingJo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJo_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "CompactingJo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJo_GRNReciept", "GRNReciept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.GRNReciept), "CompactingJo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJo_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.JobOrder), "CompactingJo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJo_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "CompactingJo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJo_PurchaseOrders", "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.PurchaseOrder), "CompactingJo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJo), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJoItem_CompactingJo", "CompactingJo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.CompactingJo), "CompactingJoItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJoItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_CompactingJoItem_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.JobOrder), "CompactingJoItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.CompactingJoItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Company_CompanyType", "CompanyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.CompanyType), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Company), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJO_Approval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Approval), "DyeingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJO_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "DyeingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJO_GRNReciept", "GRNReciept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.GRNReciept), "DyeingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJO_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.JobOrder), "DyeingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJO_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "DyeingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJO_PurchaseOrders", "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.PurchaseOrder), "DyeingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJoItem_DyeingJO", "DyeingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.DyeingJO), "DyeingJoItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJoItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_DyeingJoItem_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.JobOrder), "DyeingJoItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.DyeingJoItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_GRNReciept_OrderedItem", "OrderedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.OrderedItem), "GRNReciept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.GRNReciept), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_GRNReciept_PurchaseOrders", "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.PurchaseOrder), "GRNReciept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.GRNReciept), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_GRNReciept_ReceiptStatus", "ReceiptStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.ReceiptStatu), "GRNReciept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.GRNReciept), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_History_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "History", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.History), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Invoice_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Invoice), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Invoice_Destination", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Country), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Invoice), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Invoice_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Invoice), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Invoice_Origin", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Country), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Invoice), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Invoice_ShipmentMode", "ShipmentMode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ShipmentMode), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Invoice), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_JobOrder_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.JobOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_JobOrder_GRNReciept", "GRNReciept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.GRNReciept), "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.JobOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_JobOrder_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.JobOrder), "JobOrder1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.JobOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_JobOrder_JobOrderType", "JobOrderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.JobOrderType), "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.JobOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_JobOrderReceipt_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.JobOrder), "JobOrderReceipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.JobOrderReceipt), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderToleranceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.JobOrderToleranceType), "JobOrderTolerance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.JobOrderTolerance), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_JobOrderTolerance_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "JobOrderTolerance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.JobOrderTolerance), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_KnittingJO_Approval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Approval), "KnittingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.KnittingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_KnittingJO_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "KnittingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.KnittingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_KnittingJO_GRNReciept", "GRNReciept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.GRNReciept), "KnittingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.KnittingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_KnittingJO_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.JobOrder), "KnittingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.KnittingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_KnittingJO_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Order), "KnittingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.KnittingJO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_KnittingJoItem_JobOrder", "JobOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.JobOrder), "KnittingJoItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.KnittingJoItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_KnittingJoItem_KnittingJO", "KnittingJO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.KnittingJO), "KnittingJoItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.KnittingJoItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MaterialsFromStock_MaterialStock", "MaterialStock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.MaterialStock), "MaterialsFromStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.MaterialsFromStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MaterialsFromStock_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "MaterialsFromStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.MaterialsFromStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MaterialsFromStock_Order1", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "MaterialsFromStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.MaterialsFromStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MaterialStock_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "MaterialStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.MaterialStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MaterialStock_SubMaterial", "SubMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.SubMaterial), "MaterialStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.MaterialStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_MaterialStock_UnitsOfMeasurement", "UnitsOfMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.UnitsOfMeasurement), "MaterialStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.MaterialStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_CommissionValueType", "CommissionValueType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.CommissionValueType), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_OrderBy", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_OrderStatus", "OrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.OrderStatu), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Order_OrderThrough", "OrderThrough", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.OrderThrough), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Order), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderCurrencyConversion_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Currency), "OrderCurrencyConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderCurrencyConversion), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderCurrencyConversion_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "OrderCurrencyConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderCurrencyConversion), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderedItem_ProductMaterialItem", "ProductMaterialItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductMaterialItem), "OrderedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderedItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderedItem_PurchaseOrders", "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.PurchaseOrder), "OrderedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderedItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderProduct_Approval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Approval), "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderProduct), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderProduct_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Currency), "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderProduct), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderProduct_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderProduct), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderProduct_ProductBreakUp", "ProductBreakUp", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.ProductBreakUp), "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderProduct), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderProduct_ProductName", "ProductName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductName), "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderProduct), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderProduct_UnitsOfMeasurement", "UnitsOfMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.UnitsOfMeasurement), "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderProduct), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderReportCard_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "OrderReportCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderReportCard), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderReportCard_OrderReportCardType", "OrderReportCardType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.OrderReportCardType), "OrderReportCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderReportCard), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_OrderStatus_UserRole", "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.UserRole), "OrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.OrderStatu), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Package_CartonBox", "CartonBox", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.CartonBox), "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Package), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Package_ProductBreakUpSummary", "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Package), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductBreakUp_ShipmentMode", "ShipmentMode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ShipmentMode), "ProductBreakUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductBreakUp), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_Color", "Color", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Color), "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_OrderProduct", "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.OrderProduct), "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_ProductSize", "ProductSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductSize), "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_Color", "Color", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Color), "ProductCountryWiseBreakUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductCountryWiseBreakUp), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Country), "ProductCountryWiseBreakUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductCountryWiseBreakUp), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductBreakUp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductBreakUp), "ProductCountryWiseBreakUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductCountryWiseBreakUp), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_ProductSize", "ProductSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductSize), "ProductCountryWiseBreakUp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductCountryWiseBreakUp), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductCutting_ProductBreakUpSummary", "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), "ProductCutting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductCutting), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductExtraCost_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Currency), "ProductExtraCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductExtraCost), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductExtraCost_OrderProduct", "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.OrderProduct), "ProductExtraCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductExtraCost), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCostType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductExtraCostType), "ProductExtraCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductExtraCost), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Production_ProductBreakUpSummary", "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), "Production", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Production), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterialItem_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Company), "ProductMaterialItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterialItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterialItem_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Currency), "ProductMaterialItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterialItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterialItem_ProductMaterials", "ProductMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductMaterial), "ProductMaterialItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterialItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterialItem_PurchaseOrders", "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.PurchaseOrder), "ProductMaterialItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterialItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterialItem_SubMaterial", "SubMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.SubMaterial), "ProductMaterialItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterialItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterialItem_UnitsOfMeasurement", "UnitsOfMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.UnitsOfMeasurement), "ProductMaterialItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterialItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterials_Approval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Approval), "ProductMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterial), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterials_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Currency), "ProductMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterial), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterials_MaterialName", "MaterialName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.MaterialName), "ProductMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterial), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterials_OrderProduct", "OrderProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.OrderProduct), "ProductMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterial), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductMaterials_UnitsOfMeasurement", "UnitsOfMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.UnitsOfMeasurement), "ProductMaterials", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductMaterial), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductStock_Color", "Color", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Color), "ProductStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductStock_ProductName", "ProductName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductName), "ProductStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ProductStock_ProductSize", "ProductSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductSize), "ProductStock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.ProductStock), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PurchaseOrders_Approval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.Approval), "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PurchaseOrders_Company", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Company), "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PurchaseOrders_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.Order), "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.PurchaseOrderStatu), "PurchaseOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Quality_ProductBreakUpSummary", "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), "Quality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Quality), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Shipment_ProductBreakUpSummary", "ProductBreakUpSummary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.ProductBreakUpSummary), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.Shipment), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_SubMaterial_MaterialName", "MaterialName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.MaterialName), "SubMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.SubMaterial), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_SubMaterial_UnitsOfMeasurement", "UnitsOfMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(OrderManagerDBData.Implementation.UnitsOfMeasurement), "SubMaterial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.SubMaterial), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_User_UserRole", "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OrderManagerDBData.Implementation.UserRole), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OrderManagerDBData.Implementation.User), true)]

#endregion

namespace OrderManagerDBData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OrderManagerDBDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OrderManagerDBDataObjectContext object using the connection string found in the 'OrderManagerDBDataObjectContext' section of the application configuration file.
        /// </summary>
        public OrderManagerDBDataObjectContext() : base("name=OrderManagerDBDataObjectContext", "OrderManagerDBDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OrderManagerDBDataObjectContext object.
        /// </summary>
        public OrderManagerDBDataObjectContext(string connectionString) : base(connectionString, "OrderManagerDBDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OrderManagerDBDataObjectContext object.
        /// </summary>
        public OrderManagerDBDataObjectContext(EntityConnection connection) : base(connection, "OrderManagerDBDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Approval> Approvals
        {
            get
            {
                if ((_Approvals == null))
                {
                    _Approvals = base.CreateObjectSet<Approval>("Approvals");
                }
                return _Approvals;
            }
        }
        private ObjectSet<Approval> _Approvals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApprovalEntityType> ApprovalEntityTypes
        {
            get
            {
                if ((_ApprovalEntityTypes == null))
                {
                    _ApprovalEntityTypes = base.CreateObjectSet<ApprovalEntityType>("ApprovalEntityTypes");
                }
                return _ApprovalEntityTypes;
            }
        }
        private ObjectSet<ApprovalEntityType> _ApprovalEntityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Asset> Assets
        {
            get
            {
                if ((_Assets == null))
                {
                    _Assets = base.CreateObjectSet<Asset>("Assets");
                }
                return _Assets;
            }
        }
        private ObjectSet<Asset> _Assets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetCategory> AssetCategories
        {
            get
            {
                if ((_AssetCategories == null))
                {
                    _AssetCategories = base.CreateObjectSet<AssetCategory>("AssetCategories");
                }
                return _AssetCategories;
            }
        }
        private ObjectSet<AssetCategory> _AssetCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetName> AssetNames
        {
            get
            {
                if ((_AssetNames == null))
                {
                    _AssetNames = base.CreateObjectSet<AssetName>("AssetNames");
                }
                return _AssetNames;
            }
        }
        private ObjectSet<AssetName> _AssetNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BrandName> BrandNames
        {
            get
            {
                if ((_BrandNames == null))
                {
                    _BrandNames = base.CreateObjectSet<BrandName>("BrandNames");
                }
                return _BrandNames;
            }
        }
        private ObjectSet<BrandName> _BrandNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CartonBox> CartonBoxes
        {
            get
            {
                if ((_CartonBoxes == null))
                {
                    _CartonBoxes = base.CreateObjectSet<CartonBox>("CartonBoxes");
                }
                return _CartonBoxes;
            }
        }
        private ObjectSet<CartonBox> _CartonBoxes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Color> Colors
        {
            get
            {
                if ((_Colors == null))
                {
                    _Colors = base.CreateObjectSet<Color>("Colors");
                }
                return _Colors;
            }
        }
        private ObjectSet<Color> _Colors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommissionValueType> CommissionValueTypes
        {
            get
            {
                if ((_CommissionValueTypes == null))
                {
                    _CommissionValueTypes = base.CreateObjectSet<CommissionValueType>("CommissionValueTypes");
                }
                return _CommissionValueTypes;
            }
        }
        private ObjectSet<CommissionValueType> _CommissionValueTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompactingJo> CompactingJoes
        {
            get
            {
                if ((_CompactingJoes == null))
                {
                    _CompactingJoes = base.CreateObjectSet<CompactingJo>("CompactingJoes");
                }
                return _CompactingJoes;
            }
        }
        private ObjectSet<CompactingJo> _CompactingJoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompactingJoItem> CompactingJoItems
        {
            get
            {
                if ((_CompactingJoItems == null))
                {
                    _CompactingJoItems = base.CreateObjectSet<CompactingJoItem>("CompactingJoItems");
                }
                return _CompactingJoItems;
            }
        }
        private ObjectSet<CompactingJoItem> _CompactingJoItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyType> CompanyTypes
        {
            get
            {
                if ((_CompanyTypes == null))
                {
                    _CompanyTypes = base.CreateObjectSet<CompanyType>("CompanyTypes");
                }
                return _CompanyTypes;
            }
        }
        private ObjectSet<CompanyType> _CompanyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DyeingJO> DyeingJOes
        {
            get
            {
                if ((_DyeingJOes == null))
                {
                    _DyeingJOes = base.CreateObjectSet<DyeingJO>("DyeingJOes");
                }
                return _DyeingJOes;
            }
        }
        private ObjectSet<DyeingJO> _DyeingJOes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DyeingJoItem> DyeingJoItems
        {
            get
            {
                if ((_DyeingJoItems == null))
                {
                    _DyeingJoItems = base.CreateObjectSet<DyeingJoItem>("DyeingJoItems");
                }
                return _DyeingJoItems;
            }
        }
        private ObjectSet<DyeingJoItem> _DyeingJoItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GRNReciept> GRNReciepts
        {
            get
            {
                if ((_GRNReciepts == null))
                {
                    _GRNReciepts = base.CreateObjectSet<GRNReciept>("GRNReciepts");
                }
                return _GRNReciepts;
            }
        }
        private ObjectSet<GRNReciept> _GRNReciepts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<History> Histories
        {
            get
            {
                if ((_Histories == null))
                {
                    _Histories = base.CreateObjectSet<History>("Histories");
                }
                return _Histories;
            }
        }
        private ObjectSet<History> _Histories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobOrder> JobOrders
        {
            get
            {
                if ((_JobOrders == null))
                {
                    _JobOrders = base.CreateObjectSet<JobOrder>("JobOrders");
                }
                return _JobOrders;
            }
        }
        private ObjectSet<JobOrder> _JobOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobOrderReceipt> JobOrderReceipts
        {
            get
            {
                if ((_JobOrderReceipts == null))
                {
                    _JobOrderReceipts = base.CreateObjectSet<JobOrderReceipt>("JobOrderReceipts");
                }
                return _JobOrderReceipts;
            }
        }
        private ObjectSet<JobOrderReceipt> _JobOrderReceipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobOrderTolerance> JobOrderTolerances
        {
            get
            {
                if ((_JobOrderTolerances == null))
                {
                    _JobOrderTolerances = base.CreateObjectSet<JobOrderTolerance>("JobOrderTolerances");
                }
                return _JobOrderTolerances;
            }
        }
        private ObjectSet<JobOrderTolerance> _JobOrderTolerances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobOrderToleranceType> JobOrderToleranceTypes
        {
            get
            {
                if ((_JobOrderToleranceTypes == null))
                {
                    _JobOrderToleranceTypes = base.CreateObjectSet<JobOrderToleranceType>("JobOrderToleranceTypes");
                }
                return _JobOrderToleranceTypes;
            }
        }
        private ObjectSet<JobOrderToleranceType> _JobOrderToleranceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobOrderType> JobOrderTypes
        {
            get
            {
                if ((_JobOrderTypes == null))
                {
                    _JobOrderTypes = base.CreateObjectSet<JobOrderType>("JobOrderTypes");
                }
                return _JobOrderTypes;
            }
        }
        private ObjectSet<JobOrderType> _JobOrderTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KnittingJO> KnittingJOes
        {
            get
            {
                if ((_KnittingJOes == null))
                {
                    _KnittingJOes = base.CreateObjectSet<KnittingJO>("KnittingJOes");
                }
                return _KnittingJOes;
            }
        }
        private ObjectSet<KnittingJO> _KnittingJOes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KnittingJoItem> KnittingJoItems
        {
            get
            {
                if ((_KnittingJoItems == null))
                {
                    _KnittingJoItems = base.CreateObjectSet<KnittingJoItem>("KnittingJoItems");
                }
                return _KnittingJoItems;
            }
        }
        private ObjectSet<KnittingJoItem> _KnittingJoItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialName> MaterialNames
        {
            get
            {
                if ((_MaterialNames == null))
                {
                    _MaterialNames = base.CreateObjectSet<MaterialName>("MaterialNames");
                }
                return _MaterialNames;
            }
        }
        private ObjectSet<MaterialName> _MaterialNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialsFromStock> MaterialsFromStocks
        {
            get
            {
                if ((_MaterialsFromStocks == null))
                {
                    _MaterialsFromStocks = base.CreateObjectSet<MaterialsFromStock>("MaterialsFromStocks");
                }
                return _MaterialsFromStocks;
            }
        }
        private ObjectSet<MaterialsFromStock> _MaterialsFromStocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialStock> MaterialStocks
        {
            get
            {
                if ((_MaterialStocks == null))
                {
                    _MaterialStocks = base.CreateObjectSet<MaterialStock>("MaterialStocks");
                }
                return _MaterialStocks;
            }
        }
        private ObjectSet<MaterialStock> _MaterialStocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderCurrencyConversion> OrderCurrencyConversions
        {
            get
            {
                if ((_OrderCurrencyConversions == null))
                {
                    _OrderCurrencyConversions = base.CreateObjectSet<OrderCurrencyConversion>("OrderCurrencyConversions");
                }
                return _OrderCurrencyConversions;
            }
        }
        private ObjectSet<OrderCurrencyConversion> _OrderCurrencyConversions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderedItem> OrderedItems
        {
            get
            {
                if ((_OrderedItems == null))
                {
                    _OrderedItems = base.CreateObjectSet<OrderedItem>("OrderedItems");
                }
                return _OrderedItems;
            }
        }
        private ObjectSet<OrderedItem> _OrderedItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderProduct> OrderProducts
        {
            get
            {
                if ((_OrderProducts == null))
                {
                    _OrderProducts = base.CreateObjectSet<OrderProduct>("OrderProducts");
                }
                return _OrderProducts;
            }
        }
        private ObjectSet<OrderProduct> _OrderProducts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderReportCard> OrderReportCards
        {
            get
            {
                if ((_OrderReportCards == null))
                {
                    _OrderReportCards = base.CreateObjectSet<OrderReportCard>("OrderReportCards");
                }
                return _OrderReportCards;
            }
        }
        private ObjectSet<OrderReportCard> _OrderReportCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderReportCardType> OrderReportCardTypes
        {
            get
            {
                if ((_OrderReportCardTypes == null))
                {
                    _OrderReportCardTypes = base.CreateObjectSet<OrderReportCardType>("OrderReportCardTypes");
                }
                return _OrderReportCardTypes;
            }
        }
        private ObjectSet<OrderReportCardType> _OrderReportCardTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderStatu> OrderStatus
        {
            get
            {
                if ((_OrderStatus == null))
                {
                    _OrderStatus = base.CreateObjectSet<OrderStatu>("OrderStatus");
                }
                return _OrderStatus;
            }
        }
        private ObjectSet<OrderStatu> _OrderStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderThrough> OrderThroughs
        {
            get
            {
                if ((_OrderThroughs == null))
                {
                    _OrderThroughs = base.CreateObjectSet<OrderThrough>("OrderThroughs");
                }
                return _OrderThroughs;
            }
        }
        private ObjectSet<OrderThrough> _OrderThroughs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Package> Packages
        {
            get
            {
                if ((_Packages == null))
                {
                    _Packages = base.CreateObjectSet<Package>("Packages");
                }
                return _Packages;
            }
        }
        private ObjectSet<Package> _Packages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductBreakUp> ProductBreakUps
        {
            get
            {
                if ((_ProductBreakUps == null))
                {
                    _ProductBreakUps = base.CreateObjectSet<ProductBreakUp>("ProductBreakUps");
                }
                return _ProductBreakUps;
            }
        }
        private ObjectSet<ProductBreakUp> _ProductBreakUps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductBreakUpSummary> ProductBreakUpSummaries
        {
            get
            {
                if ((_ProductBreakUpSummaries == null))
                {
                    _ProductBreakUpSummaries = base.CreateObjectSet<ProductBreakUpSummary>("ProductBreakUpSummaries");
                }
                return _ProductBreakUpSummaries;
            }
        }
        private ObjectSet<ProductBreakUpSummary> _ProductBreakUpSummaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCountryWiseBreakUp> ProductCountryWiseBreakUps
        {
            get
            {
                if ((_ProductCountryWiseBreakUps == null))
                {
                    _ProductCountryWiseBreakUps = base.CreateObjectSet<ProductCountryWiseBreakUp>("ProductCountryWiseBreakUps");
                }
                return _ProductCountryWiseBreakUps;
            }
        }
        private ObjectSet<ProductCountryWiseBreakUp> _ProductCountryWiseBreakUps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCutting> ProductCuttings
        {
            get
            {
                if ((_ProductCuttings == null))
                {
                    _ProductCuttings = base.CreateObjectSet<ProductCutting>("ProductCuttings");
                }
                return _ProductCuttings;
            }
        }
        private ObjectSet<ProductCutting> _ProductCuttings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductExtraCost> ProductExtraCosts
        {
            get
            {
                if ((_ProductExtraCosts == null))
                {
                    _ProductExtraCosts = base.CreateObjectSet<ProductExtraCost>("ProductExtraCosts");
                }
                return _ProductExtraCosts;
            }
        }
        private ObjectSet<ProductExtraCost> _ProductExtraCosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductExtraCostType> ProductExtraCostTypes
        {
            get
            {
                if ((_ProductExtraCostTypes == null))
                {
                    _ProductExtraCostTypes = base.CreateObjectSet<ProductExtraCostType>("ProductExtraCostTypes");
                }
                return _ProductExtraCostTypes;
            }
        }
        private ObjectSet<ProductExtraCostType> _ProductExtraCostTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Production> Productions
        {
            get
            {
                if ((_Productions == null))
                {
                    _Productions = base.CreateObjectSet<Production>("Productions");
                }
                return _Productions;
            }
        }
        private ObjectSet<Production> _Productions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                if ((_ProductMaterialItems == null))
                {
                    _ProductMaterialItems = base.CreateObjectSet<ProductMaterialItem>("ProductMaterialItems");
                }
                return _ProductMaterialItems;
            }
        }
        private ObjectSet<ProductMaterialItem> _ProductMaterialItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductMaterial> ProductMaterials
        {
            get
            {
                if ((_ProductMaterials == null))
                {
                    _ProductMaterials = base.CreateObjectSet<ProductMaterial>("ProductMaterials");
                }
                return _ProductMaterials;
            }
        }
        private ObjectSet<ProductMaterial> _ProductMaterials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductName> ProductNames
        {
            get
            {
                if ((_ProductNames == null))
                {
                    _ProductNames = base.CreateObjectSet<ProductName>("ProductNames");
                }
                return _ProductNames;
            }
        }
        private ObjectSet<ProductName> _ProductNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductSize> ProductSizes
        {
            get
            {
                if ((_ProductSizes == null))
                {
                    _ProductSizes = base.CreateObjectSet<ProductSize>("ProductSizes");
                }
                return _ProductSizes;
            }
        }
        private ObjectSet<ProductSize> _ProductSizes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductStock> ProductStocks
        {
            get
            {
                if ((_ProductStocks == null))
                {
                    _ProductStocks = base.CreateObjectSet<ProductStock>("ProductStocks");
                }
                return _ProductStocks;
            }
        }
        private ObjectSet<ProductStock> _ProductStocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrders
        {
            get
            {
                if ((_PurchaseOrders == null))
                {
                    _PurchaseOrders = base.CreateObjectSet<PurchaseOrder>("PurchaseOrders");
                }
                return _PurchaseOrders;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrderStatu> PurchaseOrderStatus
        {
            get
            {
                if ((_PurchaseOrderStatus == null))
                {
                    _PurchaseOrderStatus = base.CreateObjectSet<PurchaseOrderStatu>("PurchaseOrderStatus");
                }
                return _PurchaseOrderStatus;
            }
        }
        private ObjectSet<PurchaseOrderStatu> _PurchaseOrderStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quality> Qualities
        {
            get
            {
                if ((_Qualities == null))
                {
                    _Qualities = base.CreateObjectSet<Quality>("Qualities");
                }
                return _Qualities;
            }
        }
        private ObjectSet<Quality> _Qualities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiptStatu> ReceiptStatus
        {
            get
            {
                if ((_ReceiptStatus == null))
                {
                    _ReceiptStatus = base.CreateObjectSet<ReceiptStatu>("ReceiptStatus");
                }
                return _ReceiptStatus;
            }
        }
        private ObjectSet<ReceiptStatu> _ReceiptStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shipment> Shipments
        {
            get
            {
                if ((_Shipments == null))
                {
                    _Shipments = base.CreateObjectSet<Shipment>("Shipments");
                }
                return _Shipments;
            }
        }
        private ObjectSet<Shipment> _Shipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShipmentMode> ShipmentModes
        {
            get
            {
                if ((_ShipmentModes == null))
                {
                    _ShipmentModes = base.CreateObjectSet<ShipmentMode>("ShipmentModes");
                }
                return _ShipmentModes;
            }
        }
        private ObjectSet<ShipmentMode> _ShipmentModes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubMaterial> SubMaterials
        {
            get
            {
                if ((_SubMaterials == null))
                {
                    _SubMaterials = base.CreateObjectSet<SubMaterial>("SubMaterials");
                }
                return _SubMaterials;
            }
        }
        private ObjectSet<SubMaterial> _SubMaterials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Temp> Temps
        {
            get
            {
                if ((_Temps == null))
                {
                    _Temps = base.CreateObjectSet<Temp>("Temps");
                }
                return _Temps;
            }
        }
        private ObjectSet<Temp> _Temps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitsOfMeasurement> UnitsOfMeasurements
        {
            get
            {
                if ((_UnitsOfMeasurements == null))
                {
                    _UnitsOfMeasurements = base.CreateObjectSet<UnitsOfMeasurement>("UnitsOfMeasurements");
                }
                return _UnitsOfMeasurements;
            }
        }
        private ObjectSet<UnitsOfMeasurement> _UnitsOfMeasurements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Approvals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApprovals(Approval approval)
        {
            base.AddObject("Approvals", approval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApprovalEntityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApprovalEntityTypes(ApprovalEntityType approvalEntityType)
        {
            base.AddObject("ApprovalEntityTypes", approvalEntityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssets(Asset asset)
        {
            base.AddObject("Assets", asset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetCategories(AssetCategory assetCategory)
        {
            base.AddObject("AssetCategories", assetCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetNames(AssetName assetName)
        {
            base.AddObject("AssetNames", assetName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BrandNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBrandNames(BrandName brandName)
        {
            base.AddObject("BrandNames", brandName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CartonBoxes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCartonBoxes(CartonBox cartonBox)
        {
            base.AddObject("CartonBoxes", cartonBox);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColors(Color color)
        {
            base.AddObject("Colors", color);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommissionValueTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommissionValueTypes(CommissionValueType commissionValueType)
        {
            base.AddObject("CommissionValueTypes", commissionValueType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompactingJoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompactingJoes(CompactingJo compactingJo)
        {
            base.AddObject("CompactingJoes", compactingJo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompactingJoItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompactingJoItems(CompactingJoItem compactingJoItem)
        {
            base.AddObject("CompactingJoItems", compactingJoItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyTypes(CompanyType companyType)
        {
            base.AddObject("CompanyTypes", companyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DyeingJOes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDyeingJOes(DyeingJO dyeingJO)
        {
            base.AddObject("DyeingJOes", dyeingJO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DyeingJoItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDyeingJoItems(DyeingJoItem dyeingJoItem)
        {
            base.AddObject("DyeingJoItems", dyeingJoItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GRNReciepts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGRNReciepts(GRNReciept gRNReciept)
        {
            base.AddObject("GRNReciepts", gRNReciept);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Histories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistories(History history)
        {
            base.AddObject("Histories", history);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobOrders(JobOrder jobOrder)
        {
            base.AddObject("JobOrders", jobOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobOrderReceipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobOrderReceipts(JobOrderReceipt jobOrderReceipt)
        {
            base.AddObject("JobOrderReceipts", jobOrderReceipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobOrderTolerances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobOrderTolerances(JobOrderTolerance jobOrderTolerance)
        {
            base.AddObject("JobOrderTolerances", jobOrderTolerance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobOrderToleranceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobOrderToleranceTypes(JobOrderToleranceType jobOrderToleranceType)
        {
            base.AddObject("JobOrderToleranceTypes", jobOrderToleranceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobOrderTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobOrderTypes(JobOrderType jobOrderType)
        {
            base.AddObject("JobOrderTypes", jobOrderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KnittingJOes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKnittingJOes(KnittingJO knittingJO)
        {
            base.AddObject("KnittingJOes", knittingJO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KnittingJoItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKnittingJoItems(KnittingJoItem knittingJoItem)
        {
            base.AddObject("KnittingJoItems", knittingJoItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialNames(MaterialName materialName)
        {
            base.AddObject("MaterialNames", materialName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialsFromStocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialsFromStocks(MaterialsFromStock materialsFromStock)
        {
            base.AddObject("MaterialsFromStocks", materialsFromStock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MaterialStocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterialStocks(MaterialStock materialStock)
        {
            base.AddObject("MaterialStocks", materialStock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderCurrencyConversions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderCurrencyConversions(OrderCurrencyConversion orderCurrencyConversion)
        {
            base.AddObject("OrderCurrencyConversions", orderCurrencyConversion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderedItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderedItems(OrderedItem orderedItem)
        {
            base.AddObject("OrderedItems", orderedItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderProducts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderProducts(OrderProduct orderProduct)
        {
            base.AddObject("OrderProducts", orderProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderReportCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderReportCards(OrderReportCard orderReportCard)
        {
            base.AddObject("OrderReportCards", orderReportCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderReportCardTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderReportCardTypes(OrderReportCardType orderReportCardType)
        {
            base.AddObject("OrderReportCardTypes", orderReportCardType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderStatus(OrderStatu orderStatu)
        {
            base.AddObject("OrderStatus", orderStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderThroughs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderThroughs(OrderThrough orderThrough)
        {
            base.AddObject("OrderThroughs", orderThrough);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Packages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackages(Package package)
        {
            base.AddObject("Packages", package);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductBreakUps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductBreakUps(ProductBreakUp productBreakUp)
        {
            base.AddObject("ProductBreakUps", productBreakUp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductBreakUpSummaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductBreakUpSummaries(ProductBreakUpSummary productBreakUpSummary)
        {
            base.AddObject("ProductBreakUpSummaries", productBreakUpSummary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCountryWiseBreakUps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCountryWiseBreakUps(ProductCountryWiseBreakUp productCountryWiseBreakUp)
        {
            base.AddObject("ProductCountryWiseBreakUps", productCountryWiseBreakUp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCuttings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCuttings(ProductCutting productCutting)
        {
            base.AddObject("ProductCuttings", productCutting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductExtraCosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductExtraCosts(ProductExtraCost productExtraCost)
        {
            base.AddObject("ProductExtraCosts", productExtraCost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductExtraCostTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductExtraCostTypes(ProductExtraCostType productExtraCostType)
        {
            base.AddObject("ProductExtraCostTypes", productExtraCostType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Productions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductions(Production production)
        {
            base.AddObject("Productions", production);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductMaterialItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductMaterialItems(ProductMaterialItem productMaterialItem)
        {
            base.AddObject("ProductMaterialItems", productMaterialItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductMaterials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductMaterials(ProductMaterial productMaterial)
        {
            base.AddObject("ProductMaterials", productMaterial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductNames(ProductName productName)
        {
            base.AddObject("ProductNames", productName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductSizes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductSizes(ProductSize productSize)
        {
            base.AddObject("ProductSizes", productSize);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductStocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductStocks(ProductStock productStock)
        {
            base.AddObject("ProductStocks", productStock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrders(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrders", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrderStatus(PurchaseOrderStatu purchaseOrderStatu)
        {
            base.AddObject("PurchaseOrderStatus", purchaseOrderStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Qualities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQualities(Quality quality)
        {
            base.AddObject("Qualities", quality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiptStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceiptStatus(ReceiptStatu receiptStatu)
        {
            base.AddObject("ReceiptStatus", receiptStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShipments(Shipment shipment)
        {
            base.AddObject("Shipments", shipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShipmentModes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShipmentModes(ShipmentMode shipmentMode)
        {
            base.AddObject("ShipmentModes", shipmentMode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubMaterials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubMaterials(SubMaterial subMaterial)
        {
            base.AddObject("SubMaterials", subMaterial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Temps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemps(Temp temp)
        {
            base.AddObject("Temps", temp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitsOfMeasurements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitsOfMeasurements(UnitsOfMeasurement unitsOfMeasurement)
        {
            base.AddObject("UnitsOfMeasurements", unitsOfMeasurement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Approval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Approval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Approval object.
        /// </summary>
        /// <param name="approvalID">Initial value of the ApprovalID property.</param>
        /// <param name="comments">Initial value of the Comments property.</param>
        /// <param name="approvalEntityTypeID">Initial value of the ApprovalEntityTypeID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static Approval CreateApproval(global::System.Int64 approvalID, global::System.String comments, global::System.Byte approvalEntityTypeID, global::System.Int64 orderID)
        {
            Approval approval = new Approval();
            approval.ApprovalID = approvalID;
            approval.Comments = comments;
            approval.ApprovalEntityTypeID = approvalEntityTypeID;
            approval.OrderID = orderID;
            return approval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ApprovalID
        {
            get
            {
                return _ApprovalID;
            }
            set
            {
                if (_ApprovalID != value)
                {
                    OnApprovalIDChanging(value);
                    ReportPropertyChanging("ApprovalID");
                    _ApprovalID = value;
                    ReportPropertyChanged("ApprovalID");
                    OnApprovalIDChanged();
                }
            }
        }
        private global::System.Int64 _ApprovalID;
        partial void OnApprovalIDChanging(global::System.Int64 value);
        partial void OnApprovalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = value;
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = value;
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ApprovalEntityTypeID
        {
            get
            {
                return _ApprovalEntityTypeID;
            }
            set
            {
                OnApprovalEntityTypeIDChanging(value);
                ReportPropertyChanging("ApprovalEntityTypeID");
                _ApprovalEntityTypeID = value;
                ReportPropertyChanged("ApprovalEntityTypeID");
                OnApprovalEntityTypeIDChanged();
            }
        }
        private global::System.Byte _ApprovalEntityTypeID;
        partial void OnApprovalEntityTypeIDChanging(global::System.Byte value);
        partial void OnApprovalEntityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Approval_ApprovalEntityType", "ApprovalEntityType")]
        public ApprovalEntityType ApprovalEntityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApprovalEntityType>("LightSwitchApplication.FK_Approval_ApprovalEntityType", "ApprovalEntityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApprovalEntityType>("LightSwitchApplication.FK_Approval_ApprovalEntityType", "ApprovalEntityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApprovalEntityType> ApprovalEntityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApprovalEntityType>("LightSwitchApplication.FK_Approval_ApprovalEntityType", "ApprovalEntityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApprovalEntityType>("LightSwitchApplication.FK_Approval_ApprovalEntityType", "ApprovalEntityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Approval_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_Approval_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_Approval_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_Approval_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_Approval_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_Approval", "CompactingJo")]
        public EntityCollection<CompactingJo> CompactingJoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_Approval", "CompactingJo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_Approval", "CompactingJo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_Approval", "DyeingJO")]
        public EntityCollection<DyeingJO> DyeingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_Approval", "DyeingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_Approval", "DyeingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_Approval", "KnittingJO")]
        public EntityCollection<KnittingJO> KnittingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_Approval", "KnittingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_Approval", "KnittingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_Approval", "OrderProduct")]
        public EntityCollection<OrderProduct> OrderProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_Approval", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_Approval", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_Approval", "ProductMaterials")]
        public EntityCollection<ProductMaterial> ProductMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_Approval", "ProductMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_Approval", "ProductMaterials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_Approval", "PurchaseOrders")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_Approval", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_Approval", "PurchaseOrders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ApprovalEntityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApprovalEntityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApprovalEntityType object.
        /// </summary>
        /// <param name="approvalEntityTypeID">Initial value of the ApprovalEntityTypeID property.</param>
        public static ApprovalEntityType CreateApprovalEntityType(global::System.Byte approvalEntityTypeID)
        {
            ApprovalEntityType approvalEntityType = new ApprovalEntityType();
            approvalEntityType.ApprovalEntityTypeID = approvalEntityTypeID;
            return approvalEntityType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ApprovalEntityTypeID
        {
            get
            {
                return _ApprovalEntityTypeID;
            }
            set
            {
                if (_ApprovalEntityTypeID != value)
                {
                    OnApprovalEntityTypeIDChanging(value);
                    ReportPropertyChanging("ApprovalEntityTypeID");
                    _ApprovalEntityTypeID = value;
                    ReportPropertyChanged("ApprovalEntityTypeID");
                    OnApprovalEntityTypeIDChanged();
                }
            }
        }
        private global::System.Byte _ApprovalEntityTypeID;
        partial void OnApprovalEntityTypeIDChanging(global::System.Byte value);
        partial void OnApprovalEntityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = value;
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Approval_ApprovalEntityType", "Approval")]
        public EntityCollection<Approval> Approvals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Approval>("LightSwitchApplication.FK_Approval_ApprovalEntityType", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Approval>("LightSwitchApplication.FK_Approval_ApprovalEntityType", "Approval", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Asset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Asset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Asset object.
        /// </summary>
        /// <param name="assetID">Initial value of the AssetID property.</param>
        /// <param name="valueInINR">Initial value of the ValueInINR property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="assetNameID">Initial value of the AssetNameID property.</param>
        public static Asset CreateAsset(global::System.Int64 assetID, global::System.Decimal valueInINR, global::System.Decimal quantity, global::System.Int64 assetNameID)
        {
            Asset asset = new Asset();
            asset.AssetID = assetID;
            asset.ValueInINR = valueInINR;
            asset.Quantity = quantity;
            asset.AssetNameID = assetNameID;
            return asset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AssetID
        {
            get
            {
                return _AssetID;
            }
            set
            {
                if (_AssetID != value)
                {
                    OnAssetIDChanging(value);
                    ReportPropertyChanging("AssetID");
                    _AssetID = value;
                    ReportPropertyChanged("AssetID");
                    OnAssetIDChanged();
                }
            }
        }
        private global::System.Int64 _AssetID;
        partial void OnAssetIDChanging(global::System.Int64 value);
        partial void OnAssetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = value;
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = value;
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.String _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.String value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ValueInINR
        {
            get
            {
                return _ValueInINR;
            }
            set
            {
                OnValueInINRChanging(value);
                ReportPropertyChanging("ValueInINR");
                _ValueInINR = value;
                ReportPropertyChanged("ValueInINR");
                OnValueInINRChanged();
            }
        }
        private global::System.Decimal _ValueInINR;
        partial void OnValueInINRChanging(global::System.Decimal value);
        partial void OnValueInINRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AssetNameID
        {
            get
            {
                return _AssetNameID;
            }
            set
            {
                OnAssetNameIDChanging(value);
                ReportPropertyChanging("AssetNameID");
                _AssetNameID = value;
                ReportPropertyChanged("AssetNameID");
                OnAssetNameIDChanged();
            }
        }
        private global::System.Int64 _AssetNameID;
        partial void OnAssetNameIDChanging(global::System.Int64 value);
        partial void OnAssetNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BrandNameID
        {
            get
            {
                return _BrandNameID;
            }
            set
            {
                OnBrandNameIDChanging(value);
                ReportPropertyChanging("BrandNameID");
                _BrandNameID = value;
                ReportPropertyChanged("BrandNameID");
                OnBrandNameIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BrandNameID;
        partial void OnBrandNameIDChanging(Nullable<global::System.Int32> value);
        partial void OnBrandNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Asset_AssetName", "AssetName")]
        public AssetName AssetName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetName>("LightSwitchApplication.FK_Asset_AssetName", "AssetName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetName>("LightSwitchApplication.FK_Asset_AssetName", "AssetName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetName> AssetNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetName>("LightSwitchApplication.FK_Asset_AssetName", "AssetName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetName>("LightSwitchApplication.FK_Asset_AssetName", "AssetName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Asset_BrandName", "BrandName")]
        public BrandName BrandName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandName>("LightSwitchApplication.FK_Asset_BrandName", "BrandName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandName>("LightSwitchApplication.FK_Asset_BrandName", "BrandName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BrandName> BrandNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BrandName>("LightSwitchApplication.FK_Asset_BrandName", "BrandName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BrandName>("LightSwitchApplication.FK_Asset_BrandName", "BrandName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Asset_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Asset_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Asset_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Asset_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_Asset_Company", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="AssetCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetCategory object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AssetCategory CreateAssetCategory(global::System.Int32 categoryID, global::System.String name)
        {
            AssetCategory assetCategory = new AssetCategory();
            assetCategory.CategoryID = categoryID;
            assetCategory.Name = name;
            return assetCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = value;
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_AssetName_AssetCategory", "AssetName")]
        public EntityCollection<AssetName> AssetNames
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssetName>("LightSwitchApplication.FK_AssetName_AssetCategory", "AssetName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssetName>("LightSwitchApplication.FK_AssetName_AssetCategory", "AssetName", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="AssetName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetName object.
        /// </summary>
        /// <param name="assetNameID">Initial value of the AssetNameID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AssetName CreateAssetName(global::System.Int64 assetNameID, global::System.String name)
        {
            AssetName assetName = new AssetName();
            assetName.AssetNameID = assetNameID;
            assetName.Name = name;
            return assetName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AssetNameID
        {
            get
            {
                return _AssetNameID;
            }
            set
            {
                if (_AssetNameID != value)
                {
                    OnAssetNameIDChanging(value);
                    ReportPropertyChanging("AssetNameID");
                    _AssetNameID = value;
                    ReportPropertyChanged("AssetNameID");
                    OnAssetNameIDChanged();
                }
            }
        }
        private global::System.Int64 _AssetNameID;
        partial void OnAssetNameIDChanging(global::System.Int64 value);
        partial void OnAssetNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descritpion
        {
            get
            {
                return _Descritpion;
            }
            set
            {
                OnDescritpionChanging(value);
                ReportPropertyChanging("Descritpion");
                _Descritpion = value;
                ReportPropertyChanged("Descritpion");
                OnDescritpionChanged();
            }
        }
        private global::System.String _Descritpion;
        partial void OnDescritpionChanging(global::System.String value);
        partial void OnDescritpionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = value;
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Asset_AssetName", "Asset")]
        public EntityCollection<Asset> Assets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("LightSwitchApplication.FK_Asset_AssetName", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("LightSwitchApplication.FK_Asset_AssetName", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_AssetName_AssetCategory", "AssetCategory")]
        public AssetCategory AssetCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("LightSwitchApplication.FK_AssetName_AssetCategory", "AssetCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("LightSwitchApplication.FK_AssetName_AssetCategory", "AssetCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetCategory> AssetCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetCategory>("LightSwitchApplication.FK_AssetName_AssetCategory", "AssetCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetCategory>("LightSwitchApplication.FK_AssetName_AssetCategory", "AssetCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="BrandName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BrandName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BrandName object.
        /// </summary>
        /// <param name="brandNameID">Initial value of the BrandNameID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BrandName CreateBrandName(global::System.Int32 brandNameID, global::System.String name)
        {
            BrandName brandName = new BrandName();
            brandName.BrandNameID = brandNameID;
            brandName.Name = name;
            return brandName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BrandNameID
        {
            get
            {
                return _BrandNameID;
            }
            set
            {
                if (_BrandNameID != value)
                {
                    OnBrandNameIDChanging(value);
                    ReportPropertyChanging("BrandNameID");
                    _BrandNameID = value;
                    ReportPropertyChanged("BrandNameID");
                    OnBrandNameIDChanged();
                }
            }
        }
        private global::System.Int32 _BrandNameID;
        partial void OnBrandNameIDChanging(global::System.Int32 value);
        partial void OnBrandNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Asset_BrandName", "Asset")]
        public EntityCollection<Asset> Assets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("LightSwitchApplication.FK_Asset_BrandName", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("LightSwitchApplication.FK_Asset_BrandName", "Asset", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CartonBox")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CartonBox : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CartonBox object.
        /// </summary>
        /// <param name="cartonBoxID">Initial value of the CartonBoxID property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="invoiceGenerated">Initial value of the InvoiceGenerated property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static CartonBox CreateCartonBox(global::System.Int64 cartonBoxID, global::System.String number, global::System.Boolean invoiceGenerated, global::System.Int64 orderID)
        {
            CartonBox cartonBox = new CartonBox();
            cartonBox.CartonBoxID = cartonBoxID;
            cartonBox.Number = number;
            cartonBox.InvoiceGenerated = invoiceGenerated;
            cartonBox.OrderID = orderID;
            return cartonBox;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CartonBoxID
        {
            get
            {
                return _CartonBoxID;
            }
            set
            {
                if (_CartonBoxID != value)
                {
                    OnCartonBoxIDChanging(value);
                    ReportPropertyChanging("CartonBoxID");
                    _CartonBoxID = value;
                    ReportPropertyChanged("CartonBoxID");
                    OnCartonBoxIDChanged();
                }
            }
        }
        private global::System.Int64 _CartonBoxID;
        partial void OnCartonBoxIDChanging(global::System.Int64 value);
        partial void OnCartonBoxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = value;
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InvoiceGenerated
        {
            get
            {
                return _InvoiceGenerated;
            }
            set
            {
                OnInvoiceGeneratedChanging(value);
                ReportPropertyChanging("InvoiceGenerated");
                _InvoiceGenerated = value;
                ReportPropertyChanged("InvoiceGenerated");
                OnInvoiceGeneratedChanged();
            }
        }
        private global::System.Boolean _InvoiceGenerated;
        partial void OnInvoiceGeneratedChanging(global::System.Boolean value);
        partial void OnInvoiceGeneratedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                OnInvoiceIDChanging(value);
                ReportPropertyChanging("InvoiceID");
                _InvoiceID = value;
                ReportPropertyChanged("InvoiceID");
                OnInvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InvoiceID;
        partial void OnInvoiceIDChanging(Nullable<global::System.Int64> value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CartonBox_Invoice", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("LightSwitchApplication.FK_CartonBox_Invoice", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("LightSwitchApplication.FK_CartonBox_Invoice", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("LightSwitchApplication.FK_CartonBox_Invoice", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("LightSwitchApplication.FK_CartonBox_Invoice", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CartonBox_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_CartonBox_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_CartonBox_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_CartonBox_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_CartonBox_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Package_CartonBox", "Package")]
        public EntityCollection<Package> Packages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Package>("LightSwitchApplication.FK_Package_CartonBox", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Package>("LightSwitchApplication.FK_Package_CartonBox", "Package", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Color")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Color : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Color object.
        /// </summary>
        /// <param name="colorID">Initial value of the ColorID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Color CreateColor(global::System.Int32 colorID, global::System.String name)
        {
            Color color = new Color();
            color.ColorID = colorID;
            color.Name = name;
            return color;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                if (_ColorID != value)
                {
                    OnColorIDChanging(value);
                    ReportPropertyChanging("ColorID");
                    _ColorID = value;
                    ReportPropertyChanged("ColorID");
                    OnColorIDChanged();
                }
            }
        }
        private global::System.Int32 _ColorID;
        partial void OnColorIDChanging(global::System.Int32 value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_Color", "ProductBreakUpSummary")]
        public EntityCollection<ProductBreakUpSummary> ProductBreakUpSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductBreakUpSummary_Color", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductBreakUpSummary_Color", "ProductBreakUpSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_Color", "ProductCountryWiseBreakUp")]
        public EntityCollection<ProductCountryWiseBreakUp> ProductCountryWiseBreakUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Color", "ProductCountryWiseBreakUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Color", "ProductCountryWiseBreakUp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductStock_Color", "ProductStock")]
        public EntityCollection<ProductStock> ProductStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductStock>("LightSwitchApplication.FK_ProductStock_Color", "ProductStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductStock>("LightSwitchApplication.FK_ProductStock_Color", "ProductStock", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CommissionValueType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommissionValueType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommissionValueType object.
        /// </summary>
        /// <param name="commissionValueTypeID">Initial value of the CommissionValueTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static CommissionValueType CreateCommissionValueType(global::System.Byte commissionValueTypeID, global::System.String type)
        {
            CommissionValueType commissionValueType = new CommissionValueType();
            commissionValueType.CommissionValueTypeID = commissionValueTypeID;
            commissionValueType.Type = type;
            return commissionValueType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CommissionValueTypeID
        {
            get
            {
                return _CommissionValueTypeID;
            }
            set
            {
                if (_CommissionValueTypeID != value)
                {
                    OnCommissionValueTypeIDChanging(value);
                    ReportPropertyChanging("CommissionValueTypeID");
                    _CommissionValueTypeID = value;
                    ReportPropertyChanged("CommissionValueTypeID");
                    OnCommissionValueTypeIDChanged();
                }
            }
        }
        private global::System.Byte _CommissionValueTypeID;
        partial void OnCommissionValueTypeIDChanging(global::System.Byte value);
        partial void OnCommissionValueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = value;
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_CommissionValueType", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Order_CommissionValueType", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Order_CommissionValueType", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CompactingJo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompactingJo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompactingJo object.
        /// </summary>
        /// <param name="compactingJoId">Initial value of the CompactingJoId property.</param>
        /// <param name="jODate">Initial value of the JODate property.</param>
        /// <param name="quoteNo">Initial value of the QuoteNo property.</param>
        /// <param name="quoteDate">Initial value of the QuoteDate property.</param>
        /// <param name="gRNRefNo">Initial value of the GRNRefNo property.</param>
        /// <param name="orderRef">Initial value of the OrderRef property.</param>
        /// <param name="process">Initial value of the Process property.</param>
        /// <param name="termsAndConditions">Initial value of the TermsAndConditions property.</param>
        /// <param name="totalValue">Initial value of the TotalValue property.</param>
        /// <param name="approvalID">Initial value of the ApprovalID property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
        public static CompactingJo CreateCompactingJo(global::System.Int64 compactingJoId, global::System.DateTime jODate, global::System.String quoteNo, global::System.DateTime quoteDate, global::System.String gRNRefNo, global::System.String orderRef, global::System.String process, global::System.String termsAndConditions, global::System.Decimal totalValue, global::System.Int64 approvalID, global::System.Int32 supplierID, global::System.Int64 orderID, global::System.Int64 purchaseOrderID)
        {
            CompactingJo compactingJo = new CompactingJo();
            compactingJo.CompactingJoId = compactingJoId;
            compactingJo.JODate = jODate;
            compactingJo.QuoteNo = quoteNo;
            compactingJo.QuoteDate = quoteDate;
            compactingJo.GRNRefNo = gRNRefNo;
            compactingJo.OrderRef = orderRef;
            compactingJo.Process = process;
            compactingJo.TermsAndConditions = termsAndConditions;
            compactingJo.TotalValue = totalValue;
            compactingJo.ApprovalID = approvalID;
            compactingJo.SupplierID = supplierID;
            compactingJo.OrderID = orderID;
            compactingJo.PurchaseOrderID = purchaseOrderID;
            return compactingJo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CompactingJoId
        {
            get
            {
                return _CompactingJoId;
            }
            set
            {
                if (_CompactingJoId != value)
                {
                    OnCompactingJoIdChanging(value);
                    ReportPropertyChanging("CompactingJoId");
                    _CompactingJoId = value;
                    ReportPropertyChanged("CompactingJoId");
                    OnCompactingJoIdChanged();
                }
            }
        }
        private global::System.Int64 _CompactingJoId;
        partial void OnCompactingJoIdChanging(global::System.Int64 value);
        partial void OnCompactingJoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JODate
        {
            get
            {
                return _JODate;
            }
            set
            {
                OnJODateChanging(value);
                ReportPropertyChanging("JODate");
                _JODate = value;
                ReportPropertyChanged("JODate");
                OnJODateChanged();
            }
        }
        private global::System.DateTime _JODate;
        partial void OnJODateChanging(global::System.DateTime value);
        partial void OnJODateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuoteNo
        {
            get
            {
                return _QuoteNo;
            }
            set
            {
                OnQuoteNoChanging(value);
                ReportPropertyChanging("QuoteNo");
                _QuoteNo = value;
                ReportPropertyChanged("QuoteNo");
                OnQuoteNoChanged();
            }
        }
        private global::System.String _QuoteNo;
        partial void OnQuoteNoChanging(global::System.String value);
        partial void OnQuoteNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime QuoteDate
        {
            get
            {
                return _QuoteDate;
            }
            set
            {
                OnQuoteDateChanging(value);
                ReportPropertyChanging("QuoteDate");
                _QuoteDate = value;
                ReportPropertyChanged("QuoteDate");
                OnQuoteDateChanged();
            }
        }
        private global::System.DateTime _QuoteDate;
        partial void OnQuoteDateChanging(global::System.DateTime value);
        partial void OnQuoteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GRNRefNo
        {
            get
            {
                return _GRNRefNo;
            }
            set
            {
                OnGRNRefNoChanging(value);
                ReportPropertyChanging("GRNRefNo");
                _GRNRefNo = value;
                ReportPropertyChanged("GRNRefNo");
                OnGRNRefNoChanged();
            }
        }
        private global::System.String _GRNRefNo;
        partial void OnGRNRefNoChanging(global::System.String value);
        partial void OnGRNRefNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderRef
        {
            get
            {
                return _OrderRef;
            }
            set
            {
                OnOrderRefChanging(value);
                ReportPropertyChanging("OrderRef");
                _OrderRef = value;
                ReportPropertyChanged("OrderRef");
                OnOrderRefChanged();
            }
        }
        private global::System.String _OrderRef;
        partial void OnOrderRefChanging(global::System.String value);
        partial void OnOrderRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Process
        {
            get
            {
                return _Process;
            }
            set
            {
                OnProcessChanging(value);
                ReportPropertyChanging("Process");
                _Process = value;
                ReportPropertyChanged("Process");
                OnProcessChanged();
            }
        }
        private global::System.String _Process;
        partial void OnProcessChanging(global::System.String value);
        partial void OnProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TermsAndConditions
        {
            get
            {
                return _TermsAndConditions;
            }
            set
            {
                OnTermsAndConditionsChanging(value);
                ReportPropertyChanging("TermsAndConditions");
                _TermsAndConditions = value;
                ReportPropertyChanged("TermsAndConditions");
                OnTermsAndConditionsChanged();
            }
        }
        private global::System.String _TermsAndConditions;
        partial void OnTermsAndConditionsChanging(global::System.String value);
        partial void OnTermsAndConditionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalValue
        {
            get
            {
                return _TotalValue;
            }
            set
            {
                OnTotalValueChanging(value);
                ReportPropertyChanging("TotalValue");
                _TotalValue = value;
                ReportPropertyChanged("TotalValue");
                OnTotalValueChanged();
            }
        }
        private global::System.Decimal _TotalValue;
        partial void OnTotalValueChanging(global::System.Decimal value);
        partial void OnTotalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JoNo
        {
            get
            {
                return _JoNo;
            }
            set
            {
                OnJoNoChanging(value);
                ReportPropertyChanging("JoNo");
                _JoNo = value;
                ReportPropertyChanged("JoNo");
                OnJoNoChanged();
            }
        }
        private global::System.String _JoNo;
        partial void OnJoNoChanging(global::System.String value);
        partial void OnJoNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ApprovalID
        {
            get
            {
                return _ApprovalID;
            }
            set
            {
                OnApprovalIDChanging(value);
                ReportPropertyChanging("ApprovalID");
                _ApprovalID = value;
                ReportPropertyChanged("ApprovalID");
                OnApprovalIDChanged();
            }
        }
        private global::System.Int64 _ApprovalID;
        partial void OnApprovalIDChanging(global::System.Int64 value);
        partial void OnApprovalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GRNRecieptID
        {
            get
            {
                return _GRNRecieptID;
            }
            set
            {
                OnGRNRecieptIDChanging(value);
                ReportPropertyChanging("GRNRecieptID");
                _GRNRecieptID = value;
                ReportPropertyChanged("GRNRecieptID");
                OnGRNRecieptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _GRNRecieptID;
        partial void OnGRNRecieptIDChanging(Nullable<global::System.Int64> value);
        partial void OnGRNRecieptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                OnJobOrderIDChanging(value);
                ReportPropertyChanging("JobOrderID");
                _JobOrderID = value;
                ReportPropertyChanged("JobOrderID");
                OnJobOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JobOrderID;
        partial void OnJobOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnJobOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                OnPurchaseOrderIDChanging(value);
                ReportPropertyChanging("PurchaseOrderID");
                _PurchaseOrderID = value;
                ReportPropertyChanged("PurchaseOrderID");
                OnPurchaseOrderIDChanged();
            }
        }
        private global::System.Int64 _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(global::System.Int64 value);
        partial void OnPurchaseOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_Approval", "Approval")]
        public Approval Approval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_CompactingJo_Approval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_CompactingJo_Approval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> ApprovalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_CompactingJo_Approval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("LightSwitchApplication.FK_CompactingJo_Approval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_CompactingJo_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_CompactingJo_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_CompactingJo_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_CompactingJo_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_GRNReciept", "GRNReciept")]
        public GRNReciept GRNReciept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_CompactingJo_GRNReciept", "GRNReciept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_CompactingJo_GRNReciept", "GRNReciept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GRNReciept> GRNRecieptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_CompactingJo_GRNReciept", "GRNReciept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GRNReciept>("LightSwitchApplication.FK_CompactingJo_GRNReciept", "GRNReciept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_JobOrder", "JobOrder")]
        public JobOrder JobOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJo_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJo_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJo_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJo_JobOrder", "JobOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_CompactingJo_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_CompactingJo_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_CompactingJo_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_CompactingJo_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_PurchaseOrders", "PurchaseOrders")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_CompactingJo_PurchaseOrders", "PurchaseOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_CompactingJo_PurchaseOrders", "PurchaseOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_CompactingJo_PurchaseOrders", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_CompactingJo_PurchaseOrders", "PurchaseOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJoItem_CompactingJo", "CompactingJoItem")]
        public EntityCollection<CompactingJoItem> CompactingJoItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJoItem>("LightSwitchApplication.FK_CompactingJoItem_CompactingJo", "CompactingJoItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJoItem>("LightSwitchApplication.FK_CompactingJoItem_CompactingJo", "CompactingJoItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CompactingJoItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompactingJoItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompactingJoItem object.
        /// </summary>
        /// <param name="compactingJoItemID">Initial value of the CompactingJoItemID property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="qualityDescription">Initial value of the QualityDescription property.</param>
        /// <param name="reqGSM">Initial value of the ReqGSM property.</param>
        /// <param name="reqWidth">Initial value of the ReqWidth property.</param>
        /// <param name="netQty">Initial value of the NetQty property.</param>
        /// <param name="ratePerKg">Initial value of the RatePerKg property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="compactingJoId">Initial value of the CompactingJoId property.</param>
        public static CompactingJoItem CreateCompactingJoItem(global::System.Int64 compactingJoItemID, global::System.String color, global::System.String qualityDescription, global::System.String reqGSM, global::System.String reqWidth, global::System.Decimal netQty, global::System.Decimal ratePerKg, global::System.Decimal totalAmount, global::System.Int64 compactingJoId)
        {
            CompactingJoItem compactingJoItem = new CompactingJoItem();
            compactingJoItem.CompactingJoItemID = compactingJoItemID;
            compactingJoItem.Color = color;
            compactingJoItem.QualityDescription = qualityDescription;
            compactingJoItem.ReqGSM = reqGSM;
            compactingJoItem.ReqWidth = reqWidth;
            compactingJoItem.NetQty = netQty;
            compactingJoItem.RatePerKg = ratePerKg;
            compactingJoItem.TotalAmount = totalAmount;
            compactingJoItem.CompactingJoId = compactingJoId;
            return compactingJoItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CompactingJoItemID
        {
            get
            {
                return _CompactingJoItemID;
            }
            set
            {
                if (_CompactingJoItemID != value)
                {
                    OnCompactingJoItemIDChanging(value);
                    ReportPropertyChanging("CompactingJoItemID");
                    _CompactingJoItemID = value;
                    ReportPropertyChanged("CompactingJoItemID");
                    OnCompactingJoItemIDChanged();
                }
            }
        }
        private global::System.Int64 _CompactingJoItemID;
        partial void OnCompactingJoItemIDChanging(global::System.Int64 value);
        partial void OnCompactingJoItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = value;
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QualityDescription
        {
            get
            {
                return _QualityDescription;
            }
            set
            {
                OnQualityDescriptionChanging(value);
                ReportPropertyChanging("QualityDescription");
                _QualityDescription = value;
                ReportPropertyChanged("QualityDescription");
                OnQualityDescriptionChanged();
            }
        }
        private global::System.String _QualityDescription;
        partial void OnQualityDescriptionChanging(global::System.String value);
        partial void OnQualityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReqGSM
        {
            get
            {
                return _ReqGSM;
            }
            set
            {
                OnReqGSMChanging(value);
                ReportPropertyChanging("ReqGSM");
                _ReqGSM = value;
                ReportPropertyChanged("ReqGSM");
                OnReqGSMChanged();
            }
        }
        private global::System.String _ReqGSM;
        partial void OnReqGSMChanging(global::System.String value);
        partial void OnReqGSMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReqWidth
        {
            get
            {
                return _ReqWidth;
            }
            set
            {
                OnReqWidthChanging(value);
                ReportPropertyChanging("ReqWidth");
                _ReqWidth = value;
                ReportPropertyChanged("ReqWidth");
                OnReqWidthChanged();
            }
        }
        private global::System.String _ReqWidth;
        partial void OnReqWidthChanging(global::System.String value);
        partial void OnReqWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NetQty
        {
            get
            {
                return _NetQty;
            }
            set
            {
                OnNetQtyChanging(value);
                ReportPropertyChanging("NetQty");
                _NetQty = value;
                ReportPropertyChanged("NetQty");
                OnNetQtyChanged();
            }
        }
        private global::System.Decimal _NetQty;
        partial void OnNetQtyChanging(global::System.Decimal value);
        partial void OnNetQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RatePerKg
        {
            get
            {
                return _RatePerKg;
            }
            set
            {
                OnRatePerKgChanging(value);
                ReportPropertyChanging("RatePerKg");
                _RatePerKg = value;
                ReportPropertyChanged("RatePerKg");
                OnRatePerKgChanged();
            }
        }
        private global::System.Decimal _RatePerKg;
        partial void OnRatePerKgChanging(global::System.Decimal value);
        partial void OnRatePerKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = value;
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Decimal _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Decimal value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CompactingJoId
        {
            get
            {
                return _CompactingJoId;
            }
            set
            {
                OnCompactingJoIdChanging(value);
                ReportPropertyChanging("CompactingJoId");
                _CompactingJoId = value;
                ReportPropertyChanged("CompactingJoId");
                OnCompactingJoIdChanged();
            }
        }
        private global::System.Int64 _CompactingJoId;
        partial void OnCompactingJoIdChanging(global::System.Int64 value);
        partial void OnCompactingJoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                OnJobOrderIDChanging(value);
                ReportPropertyChanging("JobOrderID");
                _JobOrderID = value;
                ReportPropertyChanged("JobOrderID");
                OnJobOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JobOrderID;
        partial void OnJobOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnJobOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJoItem_CompactingJo", "CompactingJo")]
        public CompactingJo CompactingJo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompactingJo>("LightSwitchApplication.FK_CompactingJoItem_CompactingJo", "CompactingJo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompactingJo>("LightSwitchApplication.FK_CompactingJoItem_CompactingJo", "CompactingJo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompactingJo> CompactingJoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompactingJo>("LightSwitchApplication.FK_CompactingJoItem_CompactingJo", "CompactingJo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompactingJo>("LightSwitchApplication.FK_CompactingJoItem_CompactingJo", "CompactingJo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJoItem_JobOrder", "JobOrder")]
        public JobOrder JobOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJoItem_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJoItem_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJoItem_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_CompactingJoItem_JobOrder", "JobOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="companyTypeID">Initial value of the CompanyTypeID property.</param>
        public static Company CreateCompany(global::System.Int32 companyID, global::System.String name, global::System.Int16 companyTypeID)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.Name = name;
            company.CompanyTypeID = companyTypeID;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = value;
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String c_Alias
        {
            get
            {
                return _c_Alias;
            }
            set
            {
                Onc_AliasChanging(value);
                ReportPropertyChanging("c_Alias");
                _c_Alias = value;
                ReportPropertyChanged("c_Alias");
                Onc_AliasChanged();
            }
        }
        private global::System.String _c_Alias;
        partial void Onc_AliasChanging(global::System.String value);
        partial void Onc_AliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = value;
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = value;
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = value;
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = value;
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = value;
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = value;
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = value;
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = value;
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = value;
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmaiID
        {
            get
            {
                return _EmaiID;
            }
            set
            {
                OnEmaiIDChanging(value);
                ReportPropertyChanging("EmaiID");
                _EmaiID = value;
                ReportPropertyChanged("EmaiID");
                OnEmaiIDChanged();
            }
        }
        private global::System.String _EmaiID;
        partial void OnEmaiIDChanging(global::System.String value);
        partial void OnEmaiIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TIN
        {
            get
            {
                return _TIN;
            }
            set
            {
                OnTINChanging(value);
                ReportPropertyChanging("TIN");
                _TIN = value;
                ReportPropertyChanged("TIN");
                OnTINChanged();
            }
        }
        private global::System.String _TIN;
        partial void OnTINChanging(global::System.String value);
        partial void OnTINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CST
        {
            get
            {
                return _CST;
            }
            set
            {
                OnCSTChanging(value);
                ReportPropertyChanging("CST");
                _CST = value;
                ReportPropertyChanged("CST");
                OnCSTChanged();
            }
        }
        private global::System.String _CST;
        partial void OnCSTChanging(global::System.String value);
        partial void OnCSTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CompanyTypeID
        {
            get
            {
                return _CompanyTypeID;
            }
            set
            {
                OnCompanyTypeIDChanging(value);
                ReportPropertyChanging("CompanyTypeID");
                _CompanyTypeID = value;
                ReportPropertyChanged("CompanyTypeID");
                OnCompanyTypeIDChanged();
            }
        }
        private global::System.Int16 _CompanyTypeID;
        partial void OnCompanyTypeIDChanging(global::System.Int16 value);
        partial void OnCompanyTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Asset_Company", "Asset")]
        public EntityCollection<Asset> Assets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("LightSwitchApplication.FK_Asset_Company", "Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("LightSwitchApplication.FK_Asset_Company", "Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_Company", "CompactingJo")]
        public EntityCollection<CompactingJo> CompactingJoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_Company", "CompactingJo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_Company", "CompactingJo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Company_CompanyType", "CompanyType")]
        public CompanyType CompanyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("LightSwitchApplication.FK_Company_CompanyType", "CompanyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("LightSwitchApplication.FK_Company_CompanyType", "CompanyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyType> CompanyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyType>("LightSwitchApplication.FK_Company_CompanyType", "CompanyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyType>("LightSwitchApplication.FK_Company_CompanyType", "CompanyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_Company", "DyeingJO")]
        public EntityCollection<DyeingJO> DyeingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_Company", "DyeingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_Company", "DyeingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Company", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Company", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Company", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_Company", "JobOrder")]
        public EntityCollection<JobOrder> JobOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_Company", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_Company", "JobOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_Company", "KnittingJO")]
        public EntityCollection<KnittingJO> KnittingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_Company", "KnittingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_Company", "KnittingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_Company", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Order_Company", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Order_Company", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_OrderBy", "Order")]
        public EntityCollection<Order> Orders1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Order_OrderBy", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Order_OrderBy", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_Company", "ProductMaterialItem")]
        public EntityCollection<ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_Company", "ProductMaterialItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_Company", "ProductMaterialItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_Company", "PurchaseOrders")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_Company", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_Company", "PurchaseOrders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="CompanyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyType object.
        /// </summary>
        /// <param name="companyTypeID">Initial value of the CompanyTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static CompanyType CreateCompanyType(global::System.Int16 companyTypeID, global::System.String type)
        {
            CompanyType companyType = new CompanyType();
            companyType.CompanyTypeID = companyTypeID;
            companyType.Type = type;
            return companyType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CompanyTypeID
        {
            get
            {
                return _CompanyTypeID;
            }
            set
            {
                if (_CompanyTypeID != value)
                {
                    OnCompanyTypeIDChanging(value);
                    ReportPropertyChanging("CompanyTypeID");
                    _CompanyTypeID = value;
                    ReportPropertyChanged("CompanyTypeID");
                    OnCompanyTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _CompanyTypeID;
        partial void OnCompanyTypeIDChanging(global::System.Int16 value);
        partial void OnCompanyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = value;
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Company_CompanyType", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("LightSwitchApplication.FK_Company_CompanyType", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("LightSwitchApplication.FK_Company_CompanyType", "Company", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String name)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.Name = name;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = value;
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Destination", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Destination", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Destination", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Origin", "Invoice")]
        public EntityCollection<Invoice> Invoices1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Origin", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Origin", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_Country", "ProductCountryWiseBreakUp")]
        public EntityCollection<ProductCountryWiseBreakUp> ProductCountryWiseBreakUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Country", "ProductCountryWiseBreakUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Country", "ProductCountryWiseBreakUp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static Currency CreateCurrency(global::System.Int16 currencyID, global::System.String symbol)
        {
            Currency currency = new Currency();
            currency.CurrencyID = currencyID;
            currency.Symbol = symbol;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                if (_CurrencyID != value)
                {
                    OnCurrencyIDChanging(value);
                    ReportPropertyChanging("CurrencyID");
                    _CurrencyID = value;
                    ReportPropertyChanged("CurrencyID");
                    OnCurrencyIDChanged();
                }
            }
        }
        private global::System.Int16 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int16 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = value;
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = value;
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DefaultValueInINR
        {
            get
            {
                return _DefaultValueInINR;
            }
            set
            {
                OnDefaultValueInINRChanging(value);
                ReportPropertyChanging("DefaultValueInINR");
                _DefaultValueInINR = value;
                ReportPropertyChanged("DefaultValueInINR");
                OnDefaultValueInINRChanged();
            }
        }
        private Nullable<global::System.Decimal> _DefaultValueInINR;
        partial void OnDefaultValueInINRChanging(Nullable<global::System.Decimal> value);
        partial void OnDefaultValueInINRChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderCurrencyConversion_Currency", "OrderCurrencyConversion")]
        public EntityCollection<OrderCurrencyConversion> OrderCurrencyConversions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderCurrencyConversion>("LightSwitchApplication.FK_OrderCurrencyConversion_Currency", "OrderCurrencyConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderCurrencyConversion>("LightSwitchApplication.FK_OrderCurrencyConversion_Currency", "OrderCurrencyConversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_Currency", "OrderProduct")]
        public EntityCollection<OrderProduct> OrderProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_Currency", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_Currency", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductExtraCost_Currency", "ProductExtraCost")]
        public EntityCollection<ProductExtraCost> ProductExtraCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductExtraCost>("LightSwitchApplication.FK_ProductExtraCost_Currency", "ProductExtraCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductExtraCost>("LightSwitchApplication.FK_ProductExtraCost_Currency", "ProductExtraCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_Currency", "ProductMaterialItem")]
        public EntityCollection<ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_Currency", "ProductMaterialItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_Currency", "ProductMaterialItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_Currency", "ProductMaterials")]
        public EntityCollection<ProductMaterial> ProductMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_Currency", "ProductMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_Currency", "ProductMaterials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="DyeingJO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DyeingJO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DyeingJO object.
        /// </summary>
        /// <param name="dyeingJOId">Initial value of the DyeingJOId property.</param>
        /// <param name="jODate">Initial value of the JODate property.</param>
        /// <param name="quoteNo">Initial value of the QuoteNo property.</param>
        /// <param name="quoteDate">Initial value of the QuoteDate property.</param>
        /// <param name="gRNRefNo">Initial value of the GRNRefNo property.</param>
        /// <param name="orderRef">Initial value of the OrderRef property.</param>
        /// <param name="process">Initial value of the Process property.</param>
        /// <param name="termsAndConditions">Initial value of the TermsAndConditions property.</param>
        /// <param name="totalValue">Initial value of the TotalValue property.</param>
        /// <param name="approvalID">Initial value of the ApprovalID property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
        public static DyeingJO CreateDyeingJO(global::System.Int64 dyeingJOId, global::System.DateTime jODate, global::System.String quoteNo, global::System.DateTime quoteDate, global::System.String gRNRefNo, global::System.String orderRef, global::System.String process, global::System.String termsAndConditions, global::System.Decimal totalValue, global::System.Int64 approvalID, global::System.Int32 supplierID, global::System.Int64 orderID, global::System.Int64 purchaseOrderID)
        {
            DyeingJO dyeingJO = new DyeingJO();
            dyeingJO.DyeingJOId = dyeingJOId;
            dyeingJO.JODate = jODate;
            dyeingJO.QuoteNo = quoteNo;
            dyeingJO.QuoteDate = quoteDate;
            dyeingJO.GRNRefNo = gRNRefNo;
            dyeingJO.OrderRef = orderRef;
            dyeingJO.Process = process;
            dyeingJO.TermsAndConditions = termsAndConditions;
            dyeingJO.TotalValue = totalValue;
            dyeingJO.ApprovalID = approvalID;
            dyeingJO.SupplierID = supplierID;
            dyeingJO.OrderID = orderID;
            dyeingJO.PurchaseOrderID = purchaseOrderID;
            return dyeingJO;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DyeingJOId
        {
            get
            {
                return _DyeingJOId;
            }
            set
            {
                if (_DyeingJOId != value)
                {
                    OnDyeingJOIdChanging(value);
                    ReportPropertyChanging("DyeingJOId");
                    _DyeingJOId = value;
                    ReportPropertyChanged("DyeingJOId");
                    OnDyeingJOIdChanged();
                }
            }
        }
        private global::System.Int64 _DyeingJOId;
        partial void OnDyeingJOIdChanging(global::System.Int64 value);
        partial void OnDyeingJOIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JODate
        {
            get
            {
                return _JODate;
            }
            set
            {
                OnJODateChanging(value);
                ReportPropertyChanging("JODate");
                _JODate = value;
                ReportPropertyChanged("JODate");
                OnJODateChanged();
            }
        }
        private global::System.DateTime _JODate;
        partial void OnJODateChanging(global::System.DateTime value);
        partial void OnJODateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuoteNo
        {
            get
            {
                return _QuoteNo;
            }
            set
            {
                OnQuoteNoChanging(value);
                ReportPropertyChanging("QuoteNo");
                _QuoteNo = value;
                ReportPropertyChanged("QuoteNo");
                OnQuoteNoChanged();
            }
        }
        private global::System.String _QuoteNo;
        partial void OnQuoteNoChanging(global::System.String value);
        partial void OnQuoteNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime QuoteDate
        {
            get
            {
                return _QuoteDate;
            }
            set
            {
                OnQuoteDateChanging(value);
                ReportPropertyChanging("QuoteDate");
                _QuoteDate = value;
                ReportPropertyChanged("QuoteDate");
                OnQuoteDateChanged();
            }
        }
        private global::System.DateTime _QuoteDate;
        partial void OnQuoteDateChanging(global::System.DateTime value);
        partial void OnQuoteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GRNRefNo
        {
            get
            {
                return _GRNRefNo;
            }
            set
            {
                OnGRNRefNoChanging(value);
                ReportPropertyChanging("GRNRefNo");
                _GRNRefNo = value;
                ReportPropertyChanged("GRNRefNo");
                OnGRNRefNoChanged();
            }
        }
        private global::System.String _GRNRefNo;
        partial void OnGRNRefNoChanging(global::System.String value);
        partial void OnGRNRefNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderRef
        {
            get
            {
                return _OrderRef;
            }
            set
            {
                OnOrderRefChanging(value);
                ReportPropertyChanging("OrderRef");
                _OrderRef = value;
                ReportPropertyChanged("OrderRef");
                OnOrderRefChanged();
            }
        }
        private global::System.String _OrderRef;
        partial void OnOrderRefChanging(global::System.String value);
        partial void OnOrderRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Process
        {
            get
            {
                return _Process;
            }
            set
            {
                OnProcessChanging(value);
                ReportPropertyChanging("Process");
                _Process = value;
                ReportPropertyChanged("Process");
                OnProcessChanged();
            }
        }
        private global::System.String _Process;
        partial void OnProcessChanging(global::System.String value);
        partial void OnProcessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TermsAndConditions
        {
            get
            {
                return _TermsAndConditions;
            }
            set
            {
                OnTermsAndConditionsChanging(value);
                ReportPropertyChanging("TermsAndConditions");
                _TermsAndConditions = value;
                ReportPropertyChanged("TermsAndConditions");
                OnTermsAndConditionsChanged();
            }
        }
        private global::System.String _TermsAndConditions;
        partial void OnTermsAndConditionsChanging(global::System.String value);
        partial void OnTermsAndConditionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalValue
        {
            get
            {
                return _TotalValue;
            }
            set
            {
                OnTotalValueChanging(value);
                ReportPropertyChanging("TotalValue");
                _TotalValue = value;
                ReportPropertyChanged("TotalValue");
                OnTotalValueChanged();
            }
        }
        private global::System.Decimal _TotalValue;
        partial void OnTotalValueChanging(global::System.Decimal value);
        partial void OnTotalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JoNo
        {
            get
            {
                return _JoNo;
            }
            set
            {
                OnJoNoChanging(value);
                ReportPropertyChanging("JoNo");
                _JoNo = value;
                ReportPropertyChanged("JoNo");
                OnJoNoChanged();
            }
        }
        private global::System.String _JoNo;
        partial void OnJoNoChanging(global::System.String value);
        partial void OnJoNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ApprovalID
        {
            get
            {
                return _ApprovalID;
            }
            set
            {
                OnApprovalIDChanging(value);
                ReportPropertyChanging("ApprovalID");
                _ApprovalID = value;
                ReportPropertyChanged("ApprovalID");
                OnApprovalIDChanged();
            }
        }
        private global::System.Int64 _ApprovalID;
        partial void OnApprovalIDChanging(global::System.Int64 value);
        partial void OnApprovalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GRNRecieptID
        {
            get
            {
                return _GRNRecieptID;
            }
            set
            {
                OnGRNRecieptIDChanging(value);
                ReportPropertyChanging("GRNRecieptID");
                _GRNRecieptID = value;
                ReportPropertyChanged("GRNRecieptID");
                OnGRNRecieptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _GRNRecieptID;
        partial void OnGRNRecieptIDChanging(Nullable<global::System.Int64> value);
        partial void OnGRNRecieptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                OnJobOrderIDChanging(value);
                ReportPropertyChanging("JobOrderID");
                _JobOrderID = value;
                ReportPropertyChanged("JobOrderID");
                OnJobOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JobOrderID;
        partial void OnJobOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnJobOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                OnPurchaseOrderIDChanging(value);
                ReportPropertyChanging("PurchaseOrderID");
                _PurchaseOrderID = value;
                ReportPropertyChanged("PurchaseOrderID");
                OnPurchaseOrderIDChanged();
            }
        }
        private global::System.Int64 _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(global::System.Int64 value);
        partial void OnPurchaseOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_Approval", "Approval")]
        public Approval Approval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_DyeingJO_Approval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_DyeingJO_Approval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> ApprovalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_DyeingJO_Approval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("LightSwitchApplication.FK_DyeingJO_Approval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_DyeingJO_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_DyeingJO_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_DyeingJO_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_DyeingJO_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_GRNReciept", "GRNReciept")]
        public GRNReciept GRNReciept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_DyeingJO_GRNReciept", "GRNReciept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_DyeingJO_GRNReciept", "GRNReciept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GRNReciept> GRNRecieptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_DyeingJO_GRNReciept", "GRNReciept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GRNReciept>("LightSwitchApplication.FK_DyeingJO_GRNReciept", "GRNReciept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_JobOrder", "JobOrder")]
        public JobOrder JobOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJO_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJO_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJO_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJO_JobOrder", "JobOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_DyeingJO_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_DyeingJO_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_DyeingJO_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_DyeingJO_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_PurchaseOrders", "PurchaseOrders")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_DyeingJO_PurchaseOrders", "PurchaseOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_DyeingJO_PurchaseOrders", "PurchaseOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_DyeingJO_PurchaseOrders", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_DyeingJO_PurchaseOrders", "PurchaseOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJoItem_DyeingJO", "DyeingJoItem")]
        public EntityCollection<DyeingJoItem> DyeingJoItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJoItem>("LightSwitchApplication.FK_DyeingJoItem_DyeingJO", "DyeingJoItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJoItem>("LightSwitchApplication.FK_DyeingJoItem_DyeingJO", "DyeingJoItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="DyeingJoItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DyeingJoItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DyeingJoItem object.
        /// </summary>
        /// <param name="dyeingJoItemsID">Initial value of the DyeingJoItemsID property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="qualityDescription">Initial value of the QualityDescription property.</param>
        /// <param name="reqGSM">Initial value of the ReqGSM property.</param>
        /// <param name="reqWidth">Initial value of the ReqWidth property.</param>
        /// <param name="netQty">Initial value of the NetQty property.</param>
        /// <param name="ratePerKg">Initial value of the RatePerKg property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="dyeingJOId">Initial value of the DyeingJOId property.</param>
        public static DyeingJoItem CreateDyeingJoItem(global::System.Int64 dyeingJoItemsID, global::System.String color, global::System.String qualityDescription, global::System.String reqGSM, global::System.String reqWidth, global::System.Decimal netQty, global::System.Decimal ratePerKg, global::System.Decimal totalAmount, global::System.Int64 dyeingJOId)
        {
            DyeingJoItem dyeingJoItem = new DyeingJoItem();
            dyeingJoItem.DyeingJoItemsID = dyeingJoItemsID;
            dyeingJoItem.Color = color;
            dyeingJoItem.QualityDescription = qualityDescription;
            dyeingJoItem.ReqGSM = reqGSM;
            dyeingJoItem.ReqWidth = reqWidth;
            dyeingJoItem.NetQty = netQty;
            dyeingJoItem.RatePerKg = ratePerKg;
            dyeingJoItem.TotalAmount = totalAmount;
            dyeingJoItem.DyeingJOId = dyeingJOId;
            return dyeingJoItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DyeingJoItemsID
        {
            get
            {
                return _DyeingJoItemsID;
            }
            set
            {
                if (_DyeingJoItemsID != value)
                {
                    OnDyeingJoItemsIDChanging(value);
                    ReportPropertyChanging("DyeingJoItemsID");
                    _DyeingJoItemsID = value;
                    ReportPropertyChanged("DyeingJoItemsID");
                    OnDyeingJoItemsIDChanged();
                }
            }
        }
        private global::System.Int64 _DyeingJoItemsID;
        partial void OnDyeingJoItemsIDChanging(global::System.Int64 value);
        partial void OnDyeingJoItemsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = value;
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QualityDescription
        {
            get
            {
                return _QualityDescription;
            }
            set
            {
                OnQualityDescriptionChanging(value);
                ReportPropertyChanging("QualityDescription");
                _QualityDescription = value;
                ReportPropertyChanged("QualityDescription");
                OnQualityDescriptionChanged();
            }
        }
        private global::System.String _QualityDescription;
        partial void OnQualityDescriptionChanging(global::System.String value);
        partial void OnQualityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReqGSM
        {
            get
            {
                return _ReqGSM;
            }
            set
            {
                OnReqGSMChanging(value);
                ReportPropertyChanging("ReqGSM");
                _ReqGSM = value;
                ReportPropertyChanged("ReqGSM");
                OnReqGSMChanged();
            }
        }
        private global::System.String _ReqGSM;
        partial void OnReqGSMChanging(global::System.String value);
        partial void OnReqGSMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReqWidth
        {
            get
            {
                return _ReqWidth;
            }
            set
            {
                OnReqWidthChanging(value);
                ReportPropertyChanging("ReqWidth");
                _ReqWidth = value;
                ReportPropertyChanged("ReqWidth");
                OnReqWidthChanged();
            }
        }
        private global::System.String _ReqWidth;
        partial void OnReqWidthChanging(global::System.String value);
        partial void OnReqWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NetQty
        {
            get
            {
                return _NetQty;
            }
            set
            {
                OnNetQtyChanging(value);
                ReportPropertyChanging("NetQty");
                _NetQty = value;
                ReportPropertyChanged("NetQty");
                OnNetQtyChanged();
            }
        }
        private global::System.Decimal _NetQty;
        partial void OnNetQtyChanging(global::System.Decimal value);
        partial void OnNetQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RatePerKg
        {
            get
            {
                return _RatePerKg;
            }
            set
            {
                OnRatePerKgChanging(value);
                ReportPropertyChanging("RatePerKg");
                _RatePerKg = value;
                ReportPropertyChanged("RatePerKg");
                OnRatePerKgChanged();
            }
        }
        private global::System.Decimal _RatePerKg;
        partial void OnRatePerKgChanging(global::System.Decimal value);
        partial void OnRatePerKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = value;
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Decimal _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Decimal value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DyeingJOId
        {
            get
            {
                return _DyeingJOId;
            }
            set
            {
                OnDyeingJOIdChanging(value);
                ReportPropertyChanging("DyeingJOId");
                _DyeingJOId = value;
                ReportPropertyChanged("DyeingJOId");
                OnDyeingJOIdChanged();
            }
        }
        private global::System.Int64 _DyeingJOId;
        partial void OnDyeingJOIdChanging(global::System.Int64 value);
        partial void OnDyeingJOIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                OnJobOrderIDChanging(value);
                ReportPropertyChanging("JobOrderID");
                _JobOrderID = value;
                ReportPropertyChanged("JobOrderID");
                OnJobOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JobOrderID;
        partial void OnJobOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnJobOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJoItem_DyeingJO", "DyeingJO")]
        public DyeingJO DyeingJO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DyeingJO>("LightSwitchApplication.FK_DyeingJoItem_DyeingJO", "DyeingJO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DyeingJO>("LightSwitchApplication.FK_DyeingJoItem_DyeingJO", "DyeingJO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DyeingJO> DyeingJOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DyeingJO>("LightSwitchApplication.FK_DyeingJoItem_DyeingJO", "DyeingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DyeingJO>("LightSwitchApplication.FK_DyeingJoItem_DyeingJO", "DyeingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJoItem_JobOrder", "JobOrder")]
        public JobOrder JobOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJoItem_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJoItem_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJoItem_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_DyeingJoItem_JobOrder", "JobOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="GRNReciept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GRNReciept : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GRNReciept object.
        /// </summary>
        /// <param name="gRNReciptID">Initial value of the GRNReciptID property.</param>
        /// <param name="orderedItemID">Initial value of the OrderedItemID property.</param>
        public static GRNReciept CreateGRNReciept(global::System.Int64 gRNReciptID, global::System.Int64 orderedItemID)
        {
            GRNReciept gRNReciept = new GRNReciept();
            gRNReciept.GRNReciptID = gRNReciptID;
            gRNReciept.OrderedItemID = orderedItemID;
            return gRNReciept;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GRNReciptID
        {
            get
            {
                return _GRNReciptID;
            }
            set
            {
                if (_GRNReciptID != value)
                {
                    OnGRNReciptIDChanging(value);
                    ReportPropertyChanging("GRNReciptID");
                    _GRNReciptID = value;
                    ReportPropertyChanged("GRNReciptID");
                    OnGRNReciptIDChanged();
                }
            }
        }
        private global::System.Int64 _GRNReciptID;
        partial void OnGRNReciptIDChanging(global::System.Int64 value);
        partial void OnGRNReciptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = value;
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = value;
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.String _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.String value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RecievedDate
        {
            get
            {
                return _RecievedDate;
            }
            set
            {
                OnRecievedDateChanging(value);
                ReportPropertyChanging("RecievedDate");
                _RecievedDate = value;
                ReportPropertyChanged("RecievedDate");
                OnRecievedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RecievedDate;
        partial void OnRecievedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRecievedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvoicedQuantity
        {
            get
            {
                return _InvoicedQuantity;
            }
            set
            {
                OnInvoicedQuantityChanging(value);
                ReportPropertyChanging("InvoicedQuantity");
                _InvoicedQuantity = value;
                ReportPropertyChanged("InvoicedQuantity");
                OnInvoicedQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvoicedQuantity;
        partial void OnInvoicedQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnInvoicedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecievedInHand
        {
            get
            {
                return _RecievedInHand;
            }
            set
            {
                OnRecievedInHandChanging(value);
                ReportPropertyChanging("RecievedInHand");
                _RecievedInHand = value;
                ReportPropertyChanged("RecievedInHand");
                OnRecievedInHandChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecievedInHand;
        partial void OnRecievedInHandChanging(Nullable<global::System.Decimal> value);
        partial void OnRecievedInHandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OtherChargesInINR
        {
            get
            {
                return _OtherChargesInINR;
            }
            set
            {
                OnOtherChargesInINRChanging(value);
                ReportPropertyChanging("OtherChargesInINR");
                _OtherChargesInINR = value;
                ReportPropertyChanged("OtherChargesInINR");
                OnOtherChargesInINRChanged();
            }
        }
        private Nullable<global::System.Decimal> _OtherChargesInINR;
        partial void OnOtherChargesInINRChanging(Nullable<global::System.Decimal> value);
        partial void OnOtherChargesInINRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPassedQuantity
        {
            get
            {
                return _QualityPassedQuantity;
            }
            set
            {
                OnQualityPassedQuantityChanging(value);
                ReportPropertyChanging("QualityPassedQuantity");
                _QualityPassedQuantity = value;
                ReportPropertyChanged("QualityPassedQuantity");
                OnQualityPassedQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPassedQuantity;
        partial void OnQualityPassedQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPassedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityFailedQuantity
        {
            get
            {
                return _QualityFailedQuantity;
            }
            set
            {
                OnQualityFailedQuantityChanging(value);
                ReportPropertyChanging("QualityFailedQuantity");
                _QualityFailedQuantity = value;
                ReportPropertyChanged("QualityFailedQuantity");
                OnQualityFailedQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityFailedQuantity;
        partial void OnQualityFailedQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityFailedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvoiceValue
        {
            get
            {
                return _InvoiceValue;
            }
            set
            {
                OnInvoiceValueChanging(value);
                ReportPropertyChanging("InvoiceValue");
                _InvoiceValue = value;
                ReportPropertyChanged("InvoiceValue");
                OnInvoiceValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvoiceValue;
        partial void OnInvoiceValueChanging(Nullable<global::System.Decimal> value);
        partial void OnInvoiceValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SpawnedNewPurchaseOrder
        {
            get
            {
                return _SpawnedNewPurchaseOrder;
            }
            set
            {
                OnSpawnedNewPurchaseOrderChanging(value);
                ReportPropertyChanging("SpawnedNewPurchaseOrder");
                _SpawnedNewPurchaseOrder = value;
                ReportPropertyChanged("SpawnedNewPurchaseOrder");
                OnSpawnedNewPurchaseOrderChanged();
            }
        }
        private Nullable<global::System.Boolean> _SpawnedNewPurchaseOrder;
        partial void OnSpawnedNewPurchaseOrderChanging(Nullable<global::System.Boolean> value);
        partial void OnSpawnedNewPurchaseOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VechileNo
        {
            get
            {
                return _VechileNo;
            }
            set
            {
                OnVechileNoChanging(value);
                ReportPropertyChanging("VechileNo");
                _VechileNo = value;
                ReportPropertyChanged("VechileNo");
                OnVechileNoChanged();
            }
        }
        private global::System.String _VechileNo;
        partial void OnVechileNoChanging(global::System.String value);
        partial void OnVechileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherChargersName
        {
            get
            {
                return _OtherChargersName;
            }
            set
            {
                OnOtherChargersNameChanging(value);
                ReportPropertyChanging("OtherChargersName");
                _OtherChargersName = value;
                ReportPropertyChanged("OtherChargersName");
                OnOtherChargersNameChanged();
            }
        }
        private global::System.String _OtherChargersName;
        partial void OnOtherChargersNameChanging(global::System.String value);
        partial void OnOtherChargersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GRNIndex
        {
            get
            {
                return _GRNIndex;
            }
            set
            {
                OnGRNIndexChanging(value);
                ReportPropertyChanging("GRNIndex");
                _GRNIndex = value;
                ReportPropertyChanged("GRNIndex");
                OnGRNIndexChanged();
            }
        }
        private Nullable<global::System.Int64> _GRNIndex;
        partial void OnGRNIndexChanging(Nullable<global::System.Int64> value);
        partial void OnGRNIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PendingQuantity
        {
            get
            {
                return _PendingQuantity;
            }
            set
            {
                OnPendingQuantityChanging(value);
                ReportPropertyChanging("PendingQuantity");
                _PendingQuantity = value;
                ReportPropertyChanged("PendingQuantity");
                OnPendingQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _PendingQuantity;
        partial void OnPendingQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnPendingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderedItemID
        {
            get
            {
                return _OrderedItemID;
            }
            set
            {
                OnOrderedItemIDChanging(value);
                ReportPropertyChanging("OrderedItemID");
                _OrderedItemID = value;
                ReportPropertyChanged("OrderedItemID");
                OnOrderedItemIDChanged();
            }
        }
        private global::System.Int64 _OrderedItemID;
        partial void OnOrderedItemIDChanging(global::System.Int64 value);
        partial void OnOrderedItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SpawnedPurchaseOrderID
        {
            get
            {
                return _SpawnedPurchaseOrderID;
            }
            set
            {
                OnSpawnedPurchaseOrderIDChanging(value);
                ReportPropertyChanging("SpawnedPurchaseOrderID");
                _SpawnedPurchaseOrderID = value;
                ReportPropertyChanged("SpawnedPurchaseOrderID");
                OnSpawnedPurchaseOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SpawnedPurchaseOrderID;
        partial void OnSpawnedPurchaseOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnSpawnedPurchaseOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ReceiptStatusID
        {
            get
            {
                return _ReceiptStatusID;
            }
            set
            {
                OnReceiptStatusIDChanging(value);
                ReportPropertyChanging("ReceiptStatusID");
                _ReceiptStatusID = value;
                ReportPropertyChanged("ReceiptStatusID");
                OnReceiptStatusIDChanged();
            }
        }
        private Nullable<global::System.Byte> _ReceiptStatusID;
        partial void OnReceiptStatusIDChanging(Nullable<global::System.Byte> value);
        partial void OnReceiptStatusIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_GRNReciept", "CompactingJo")]
        public EntityCollection<CompactingJo> CompactingJoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_GRNReciept", "CompactingJo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_GRNReciept", "CompactingJo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_GRNReciept", "DyeingJO")]
        public EntityCollection<DyeingJO> DyeingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_GRNReciept", "DyeingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_GRNReciept", "DyeingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_GRNReciept_OrderedItem", "OrderedItem")]
        public OrderedItem OrderedItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderedItem>("LightSwitchApplication.FK_GRNReciept_OrderedItem", "OrderedItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderedItem>("LightSwitchApplication.FK_GRNReciept_OrderedItem", "OrderedItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderedItem> OrderedItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderedItem>("LightSwitchApplication.FK_GRNReciept_OrderedItem", "OrderedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderedItem>("LightSwitchApplication.FK_GRNReciept_OrderedItem", "OrderedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_GRNReciept_PurchaseOrders", "PurchaseOrders")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_GRNReciept_PurchaseOrders", "PurchaseOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_GRNReciept_PurchaseOrders", "PurchaseOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_GRNReciept_PurchaseOrders", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_GRNReciept_PurchaseOrders", "PurchaseOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_GRNReciept_ReceiptStatus", "ReceiptStatus")]
        public ReceiptStatu ReceiptStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatu>("LightSwitchApplication.FK_GRNReciept_ReceiptStatus", "ReceiptStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatu>("LightSwitchApplication.FK_GRNReciept_ReceiptStatus", "ReceiptStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReceiptStatu> ReceiptStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReceiptStatu>("LightSwitchApplication.FK_GRNReciept_ReceiptStatus", "ReceiptStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReceiptStatu>("LightSwitchApplication.FK_GRNReciept_ReceiptStatus", "ReceiptStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_GRNReciept", "JobOrder")]
        public EntityCollection<JobOrder> JobOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_GRNReciept", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_GRNReciept", "JobOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_GRNReciept", "KnittingJO")]
        public EntityCollection<KnittingJO> KnittingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_GRNReciept", "KnittingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_GRNReciept", "KnittingJO", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="History")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class History : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new History object.
        /// </summary>
        /// <param name="historyID">Initial value of the HistoryID property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="orderChanges">Initial value of the OrderChanges property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static History CreateHistory(global::System.Int64 historyID, global::System.DateTime c_Date, global::System.String userName, global::System.String orderChanges, global::System.String comment, global::System.Int64 orderID)
        {
            History history = new History();
            history.HistoryID = historyID;
            history.c_Date = c_Date;
            history.UserName = userName;
            history.OrderChanges = orderChanges;
            history.Comment = comment;
            history.OrderID = orderID;
            return history;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HistoryID
        {
            get
            {
                return _HistoryID;
            }
            set
            {
                if (_HistoryID != value)
                {
                    OnHistoryIDChanging(value);
                    ReportPropertyChanging("HistoryID");
                    _HistoryID = value;
                    ReportPropertyChanged("HistoryID");
                    OnHistoryIDChanged();
                }
            }
        }
        private global::System.Int64 _HistoryID;
        partial void OnHistoryIDChanging(global::System.Int64 value);
        partial void OnHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = value;
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrderChanges
        {
            get
            {
                return _OrderChanges;
            }
            set
            {
                OnOrderChangesChanging(value);
                ReportPropertyChanging("OrderChanges");
                _OrderChanges = value;
                ReportPropertyChanged("OrderChanges");
                OnOrderChangesChanged();
            }
        }
        private global::System.String _OrderChanges;
        partial void OnOrderChangesChanging(global::System.String value);
        partial void OnOrderChangesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = value;
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_History_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_History_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_History_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_History_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_History_Order", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="invoiceID">Initial value of the InvoiceID property.</param>
        /// <param name="invoiceNumber">Initial value of the InvoiceNumber property.</param>
        /// <param name="invoiceDate">Initial value of the InvoiceDate property.</param>
        /// <param name="isProforma">Initial value of the IsProforma property.</param>
        /// <param name="consigneeID">Initial value of the ConsigneeID property.</param>
        /// <param name="destinationCountryID">Initial value of the DestinationCountryID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="originCountryID">Initial value of the OriginCountryID property.</param>
        /// <param name="carriageByID">Initial value of the CarriageByID property.</param>
        public static Invoice CreateInvoice(global::System.Int64 invoiceID, global::System.String invoiceNumber, global::System.DateTime invoiceDate, global::System.Boolean isProforma, global::System.Int32 consigneeID, global::System.Int32 destinationCountryID, global::System.Int64 orderID, global::System.Int32 originCountryID, global::System.Byte carriageByID)
        {
            Invoice invoice = new Invoice();
            invoice.InvoiceID = invoiceID;
            invoice.InvoiceNumber = invoiceNumber;
            invoice.InvoiceDate = invoiceDate;
            invoice.IsProforma = isProforma;
            invoice.ConsigneeID = consigneeID;
            invoice.DestinationCountryID = destinationCountryID;
            invoice.OrderID = orderID;
            invoice.OriginCountryID = originCountryID;
            invoice.CarriageByID = carriageByID;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                if (_InvoiceID != value)
                {
                    OnInvoiceIDChanging(value);
                    ReportPropertyChanging("InvoiceID");
                    _InvoiceID = value;
                    ReportPropertyChanged("InvoiceID");
                    OnInvoiceIDChanged();
                }
            }
        }
        private global::System.Int64 _InvoiceID;
        partial void OnInvoiceIDChanging(global::System.Int64 value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = value;
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.String _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.String value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = value;
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDate;
        partial void OnInvoiceDateChanging(global::System.DateTime value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExporterRefNumber
        {
            get
            {
                return _ExporterRefNumber;
            }
            set
            {
                OnExporterRefNumberChanging(value);
                ReportPropertyChanging("ExporterRefNumber");
                _ExporterRefNumber = value;
                ReportPropertyChanged("ExporterRefNumber");
                OnExporterRefNumberChanged();
            }
        }
        private global::System.String _ExporterRefNumber;
        partial void OnExporterRefNumberChanging(global::System.String value);
        partial void OnExporterRefNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuyerRefNumber
        {
            get
            {
                return _BuyerRefNumber;
            }
            set
            {
                OnBuyerRefNumberChanging(value);
                ReportPropertyChanging("BuyerRefNumber");
                _BuyerRefNumber = value;
                ReportPropertyChanged("BuyerRefNumber");
                OnBuyerRefNumberChanged();
            }
        }
        private global::System.String _BuyerRefNumber;
        partial void OnBuyerRefNumberChanging(global::System.String value);
        partial void OnBuyerRefNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlaceOfReceiptByPrecarrier
        {
            get
            {
                return _PlaceOfReceiptByPrecarrier;
            }
            set
            {
                OnPlaceOfReceiptByPrecarrierChanging(value);
                ReportPropertyChanging("PlaceOfReceiptByPrecarrier");
                _PlaceOfReceiptByPrecarrier = value;
                ReportPropertyChanged("PlaceOfReceiptByPrecarrier");
                OnPlaceOfReceiptByPrecarrierChanged();
            }
        }
        private global::System.String _PlaceOfReceiptByPrecarrier;
        partial void OnPlaceOfReceiptByPrecarrierChanging(global::System.String value);
        partial void OnPlaceOfReceiptByPrecarrierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoadingPlace
        {
            get
            {
                return _LoadingPlace;
            }
            set
            {
                OnLoadingPlaceChanging(value);
                ReportPropertyChanging("LoadingPlace");
                _LoadingPlace = value;
                ReportPropertyChanged("LoadingPlace");
                OnLoadingPlaceChanged();
            }
        }
        private global::System.String _LoadingPlace;
        partial void OnLoadingPlaceChanging(global::System.String value);
        partial void OnLoadingPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DischargePlace
        {
            get
            {
                return _DischargePlace;
            }
            set
            {
                OnDischargePlaceChanging(value);
                ReportPropertyChanging("DischargePlace");
                _DischargePlace = value;
                ReportPropertyChanged("DischargePlace");
                OnDischargePlaceChanged();
            }
        }
        private global::System.String _DischargePlace;
        partial void OnDischargePlaceChanging(global::System.String value);
        partial void OnDischargePlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProforma
        {
            get
            {
                return _IsProforma;
            }
            set
            {
                OnIsProformaChanging(value);
                ReportPropertyChanging("IsProforma");
                _IsProforma = value;
                ReportPropertyChanged("IsProforma");
                OnIsProformaChanged();
            }
        }
        private global::System.Boolean _IsProforma;
        partial void OnIsProformaChanging(global::System.Boolean value);
        partial void OnIsProformaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConsigneeID
        {
            get
            {
                return _ConsigneeID;
            }
            set
            {
                OnConsigneeIDChanging(value);
                ReportPropertyChanging("ConsigneeID");
                _ConsigneeID = value;
                ReportPropertyChanged("ConsigneeID");
                OnConsigneeIDChanged();
            }
        }
        private global::System.Int32 _ConsigneeID;
        partial void OnConsigneeIDChanging(global::System.Int32 value);
        partial void OnConsigneeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestinationCountryID
        {
            get
            {
                return _DestinationCountryID;
            }
            set
            {
                OnDestinationCountryIDChanging(value);
                ReportPropertyChanging("DestinationCountryID");
                _DestinationCountryID = value;
                ReportPropertyChanged("DestinationCountryID");
                OnDestinationCountryIDChanged();
            }
        }
        private global::System.Int32 _DestinationCountryID;
        partial void OnDestinationCountryIDChanging(global::System.Int32 value);
        partial void OnDestinationCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OriginCountryID
        {
            get
            {
                return _OriginCountryID;
            }
            set
            {
                OnOriginCountryIDChanging(value);
                ReportPropertyChanging("OriginCountryID");
                _OriginCountryID = value;
                ReportPropertyChanged("OriginCountryID");
                OnOriginCountryIDChanged();
            }
        }
        private global::System.Int32 _OriginCountryID;
        partial void OnOriginCountryIDChanging(global::System.Int32 value);
        partial void OnOriginCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CarriageByID
        {
            get
            {
                return _CarriageByID;
            }
            set
            {
                OnCarriageByIDChanging(value);
                ReportPropertyChanging("CarriageByID");
                _CarriageByID = value;
                ReportPropertyChanged("CarriageByID");
                OnCarriageByIDChanged();
            }
        }
        private global::System.Byte _CarriageByID;
        partial void OnCarriageByIDChanging(global::System.Byte value);
        partial void OnCarriageByIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CartonBox_Invoice", "CartonBox")]
        public EntityCollection<CartonBox> CartonBoxes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CartonBox>("LightSwitchApplication.FK_CartonBox_Invoice", "CartonBox");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CartonBox>("LightSwitchApplication.FK_CartonBox_Invoice", "CartonBox", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Invoice_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Invoice_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Invoice_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_Invoice_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Destination", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Destination", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Destination", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Destination", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Destination", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_Invoice_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_Invoice_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_Invoice_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_Invoice_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Origin", "Country")]
        public Country Country1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Origin", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Origin", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Origin", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("LightSwitchApplication.FK_Invoice_Origin", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_ShipmentMode", "ShipmentMode")]
        public ShipmentMode ShipmentMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShipmentMode>("LightSwitchApplication.FK_Invoice_ShipmentMode", "ShipmentMode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShipmentMode>("LightSwitchApplication.FK_Invoice_ShipmentMode", "ShipmentMode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShipmentMode> ShipmentModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShipmentMode>("LightSwitchApplication.FK_Invoice_ShipmentMode", "ShipmentMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShipmentMode>("LightSwitchApplication.FK_Invoice_ShipmentMode", "ShipmentMode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="JobOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobOrder object.
        /// </summary>
        /// <param name="jobOrderID">Initial value of the JobOrderID property.</param>
        /// <param name="jobQuantity">Initial value of the JobQuantity property.</param>
        /// <param name="chargesInINR">Initial value of the ChargesInINR property.</param>
        /// <param name="requiredDate">Initial value of the RequiredDate property.</param>
        /// <param name="isIssued">Initial value of the IsIssued property.</param>
        /// <param name="isWaitingForApproval">Initial value of the IsWaitingForApproval property.</param>
        /// <param name="hasApproved">Initial value of the HasApproved property.</param>
        /// <param name="failedQuantityIssued">Initial value of the FailedQuantityIssued property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="gRNReciptID">Initial value of the GRNReciptID property.</param>
        /// <param name="jobOrderTypeID">Initial value of the JobOrderTypeID property.</param>
        public static JobOrder CreateJobOrder(global::System.Int64 jobOrderID, global::System.Decimal jobQuantity, global::System.Decimal chargesInINR, global::System.DateTime requiredDate, global::System.Boolean isIssued, global::System.Boolean isWaitingForApproval, global::System.Boolean hasApproved, global::System.Boolean failedQuantityIssued, global::System.Int32 supplierID, global::System.Int64 gRNReciptID, global::System.Byte jobOrderTypeID)
        {
            JobOrder jobOrder = new JobOrder();
            jobOrder.JobOrderID = jobOrderID;
            jobOrder.JobQuantity = jobQuantity;
            jobOrder.ChargesInINR = chargesInINR;
            jobOrder.RequiredDate = requiredDate;
            jobOrder.IsIssued = isIssued;
            jobOrder.IsWaitingForApproval = isWaitingForApproval;
            jobOrder.HasApproved = hasApproved;
            jobOrder.FailedQuantityIssued = failedQuantityIssued;
            jobOrder.SupplierID = supplierID;
            jobOrder.GRNReciptID = gRNReciptID;
            jobOrder.JobOrderTypeID = jobOrderTypeID;
            return jobOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                if (_JobOrderID != value)
                {
                    OnJobOrderIDChanging(value);
                    ReportPropertyChanging("JobOrderID");
                    _JobOrderID = value;
                    ReportPropertyChanged("JobOrderID");
                    OnJobOrderIDChanged();
                }
            }
        }
        private global::System.Int64 _JobOrderID;
        partial void OnJobOrderIDChanging(global::System.Int64 value);
        partial void OnJobOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal JobQuantity
        {
            get
            {
                return _JobQuantity;
            }
            set
            {
                OnJobQuantityChanging(value);
                ReportPropertyChanging("JobQuantity");
                _JobQuantity = value;
                ReportPropertyChanged("JobQuantity");
                OnJobQuantityChanged();
            }
        }
        private global::System.Decimal _JobQuantity;
        partial void OnJobQuantityChanging(global::System.Decimal value);
        partial void OnJobQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ChargesInINR
        {
            get
            {
                return _ChargesInINR;
            }
            set
            {
                OnChargesInINRChanging(value);
                ReportPropertyChanging("ChargesInINR");
                _ChargesInINR = value;
                ReportPropertyChanged("ChargesInINR");
                OnChargesInINRChanged();
            }
        }
        private global::System.Decimal _ChargesInINR;
        partial void OnChargesInINRChanging(global::System.Decimal value);
        partial void OnChargesInINRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequiredDate
        {
            get
            {
                return _RequiredDate;
            }
            set
            {
                OnRequiredDateChanging(value);
                ReportPropertyChanging("RequiredDate");
                _RequiredDate = value;
                ReportPropertyChanged("RequiredDate");
                OnRequiredDateChanged();
            }
        }
        private global::System.DateTime _RequiredDate;
        partial void OnRequiredDateChanging(global::System.DateTime value);
        partial void OnRequiredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Instructions
        {
            get
            {
                return _Instructions;
            }
            set
            {
                OnInstructionsChanging(value);
                ReportPropertyChanging("Instructions");
                _Instructions = value;
                ReportPropertyChanged("Instructions");
                OnInstructionsChanged();
            }
        }
        private global::System.String _Instructions;
        partial void OnInstructionsChanging(global::System.String value);
        partial void OnInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PendingQuantity
        {
            get
            {
                return _PendingQuantity;
            }
            set
            {
                OnPendingQuantityChanging(value);
                ReportPropertyChanging("PendingQuantity");
                _PendingQuantity = value;
                ReportPropertyChanged("PendingQuantity");
                OnPendingQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _PendingQuantity;
        partial void OnPendingQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnPendingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityPassed
        {
            get
            {
                return _QualityPassed;
            }
            set
            {
                OnQualityPassedChanging(value);
                ReportPropertyChanging("QualityPassed");
                _QualityPassed = value;
                ReportPropertyChanged("QualityPassed");
                OnQualityPassedChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityPassed;
        partial void OnQualityPassedChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityPassedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QualityFailed
        {
            get
            {
                return _QualityFailed;
            }
            set
            {
                OnQualityFailedChanging(value);
                ReportPropertyChanging("QualityFailed");
                _QualityFailed = value;
                ReportPropertyChanged("QualityFailed");
                OnQualityFailedChanged();
            }
        }
        private Nullable<global::System.Decimal> _QualityFailed;
        partial void OnQualityFailedChanging(Nullable<global::System.Decimal> value);
        partial void OnQualityFailedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DCNumber
        {
            get
            {
                return _DCNumber;
            }
            set
            {
                OnDCNumberChanging(value);
                ReportPropertyChanging("DCNumber");
                _DCNumber = value;
                ReportPropertyChanged("DCNumber");
                OnDCNumberChanged();
            }
        }
        private global::System.String _DCNumber;
        partial void OnDCNumberChanging(global::System.String value);
        partial void OnDCNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = value;
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIssued
        {
            get
            {
                return _IsIssued;
            }
            set
            {
                OnIsIssuedChanging(value);
                ReportPropertyChanging("IsIssued");
                _IsIssued = value;
                ReportPropertyChanged("IsIssued");
                OnIsIssuedChanged();
            }
        }
        private global::System.Boolean _IsIssued;
        partial void OnIsIssuedChanging(global::System.Boolean value);
        partial void OnIsIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWaitingForApproval
        {
            get
            {
                return _IsWaitingForApproval;
            }
            set
            {
                OnIsWaitingForApprovalChanging(value);
                ReportPropertyChanging("IsWaitingForApproval");
                _IsWaitingForApproval = value;
                ReportPropertyChanged("IsWaitingForApproval");
                OnIsWaitingForApprovalChanged();
            }
        }
        private global::System.Boolean _IsWaitingForApproval;
        partial void OnIsWaitingForApprovalChanging(global::System.Boolean value);
        partial void OnIsWaitingForApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasApproved
        {
            get
            {
                return _HasApproved;
            }
            set
            {
                OnHasApprovedChanging(value);
                ReportPropertyChanging("HasApproved");
                _HasApproved = value;
                ReportPropertyChanged("HasApproved");
                OnHasApprovedChanged();
            }
        }
        private global::System.Boolean _HasApproved;
        partial void OnHasApprovedChanging(global::System.Boolean value);
        partial void OnHasApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FailedQuantityIssued
        {
            get
            {
                return _FailedQuantityIssued;
            }
            set
            {
                OnFailedQuantityIssuedChanging(value);
                ReportPropertyChanging("FailedQuantityIssued");
                _FailedQuantityIssued = value;
                ReportPropertyChanged("FailedQuantityIssued");
                OnFailedQuantityIssuedChanged();
            }
        }
        private global::System.Boolean _FailedQuantityIssued;
        partial void OnFailedQuantityIssuedChanging(global::System.Boolean value);
        partial void OnFailedQuantityIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = value;
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecievedAs
        {
            get
            {
                return _RecievedAs;
            }
            set
            {
                OnRecievedAsChanging(value);
                ReportPropertyChanging("RecievedAs");
                _RecievedAs = value;
                ReportPropertyChanged("RecievedAs");
                OnRecievedAsChanged();
            }
        }
        private global::System.String _RecievedAs;
        partial void OnRecievedAsChanging(global::System.String value);
        partial void OnRecievedAsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GRNReciptID
        {
            get
            {
                return _GRNReciptID;
            }
            set
            {
                OnGRNReciptIDChanging(value);
                ReportPropertyChanging("GRNReciptID");
                _GRNReciptID = value;
                ReportPropertyChanged("GRNReciptID");
                OnGRNReciptIDChanged();
            }
        }
        private global::System.Int64 _GRNReciptID;
        partial void OnGRNReciptIDChanging(global::System.Int64 value);
        partial void OnGRNReciptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentJOID
        {
            get
            {
                return _ParentJOID;
            }
            set
            {
                OnParentJOIDChanging(value);
                ReportPropertyChanging("ParentJOID");
                _ParentJOID = value;
                ReportPropertyChanged("ParentJOID");
                OnParentJOIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentJOID;
        partial void OnParentJOIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentJOIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte JobOrderTypeID
        {
            get
            {
                return _JobOrderTypeID;
            }
            set
            {
                OnJobOrderTypeIDChanging(value);
                ReportPropertyChanging("JobOrderTypeID");
                _JobOrderTypeID = value;
                ReportPropertyChanged("JobOrderTypeID");
                OnJobOrderTypeIDChanged();
            }
        }
        private global::System.Byte _JobOrderTypeID;
        partial void OnJobOrderTypeIDChanging(global::System.Byte value);
        partial void OnJobOrderTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_JobOrder", "CompactingJo")]
        public EntityCollection<CompactingJo> CompactingJoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_JobOrder", "CompactingJo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_JobOrder", "CompactingJo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJoItem_JobOrder", "CompactingJoItem")]
        public EntityCollection<CompactingJoItem> CompactingJoItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJoItem>("LightSwitchApplication.FK_CompactingJoItem_JobOrder", "CompactingJoItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJoItem>("LightSwitchApplication.FK_CompactingJoItem_JobOrder", "CompactingJoItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_JobOrder", "DyeingJO")]
        public EntityCollection<DyeingJO> DyeingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_JobOrder", "DyeingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_JobOrder", "DyeingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJoItem_JobOrder", "DyeingJoItem")]
        public EntityCollection<DyeingJoItem> DyeingJoItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJoItem>("LightSwitchApplication.FK_DyeingJoItem_JobOrder", "DyeingJoItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJoItem>("LightSwitchApplication.FK_DyeingJoItem_JobOrder", "DyeingJoItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_JobOrder_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_JobOrder_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_JobOrder_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_JobOrder_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_GRNReciept", "GRNReciept")]
        public GRNReciept GRNReciept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_JobOrder_GRNReciept", "GRNReciept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_JobOrder_GRNReciept", "GRNReciept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GRNReciept> GRNRecieptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_JobOrder_GRNReciept", "GRNReciept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GRNReciept>("LightSwitchApplication.FK_JobOrder_GRNReciept", "GRNReciept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_JobOrder", "JobOrder1")]
        public EntityCollection<JobOrder> JobOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrder", "JobOrder1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrder", "JobOrder1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_JobOrder", "JobOrder")]
        public JobOrder JobOrder1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrder1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrder", "JobOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_JobOrderType", "JobOrderType")]
        public JobOrderType JobOrderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrderType>("LightSwitchApplication.FK_JobOrder_JobOrderType", "JobOrderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrderType>("LightSwitchApplication.FK_JobOrder_JobOrderType", "JobOrderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrderType> JobOrderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrderType>("LightSwitchApplication.FK_JobOrder_JobOrderType", "JobOrderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrderType>("LightSwitchApplication.FK_JobOrder_JobOrderType", "JobOrderType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrderReceipt_JobOrder", "JobOrderReceipt")]
        public EntityCollection<JobOrderReceipt> JobOrderReceipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobOrderReceipt>("LightSwitchApplication.FK_JobOrderReceipt_JobOrder", "JobOrderReceipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobOrderReceipt>("LightSwitchApplication.FK_JobOrderReceipt_JobOrder", "JobOrderReceipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_JobOrder", "KnittingJO")]
        public EntityCollection<KnittingJO> KnittingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_JobOrder", "KnittingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_JobOrder", "KnittingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJoItem_JobOrder", "KnittingJoItem")]
        public EntityCollection<KnittingJoItem> KnittingJoItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KnittingJoItem>("LightSwitchApplication.FK_KnittingJoItem_JobOrder", "KnittingJoItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KnittingJoItem>("LightSwitchApplication.FK_KnittingJoItem_JobOrder", "KnittingJoItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="JobOrderReceipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobOrderReceipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobOrderReceipt object.
        /// </summary>
        /// <param name="jobOrderReceiptID">Initial value of the JobOrderReceiptID property.</param>
        /// <param name="receivedQuantity">Initial value of the ReceivedQuantity property.</param>
        /// <param name="issued">Initial value of the Issued property.</param>
        /// <param name="jobOrderID">Initial value of the JobOrderID property.</param>
        public static JobOrderReceipt CreateJobOrderReceipt(global::System.Int64 jobOrderReceiptID, global::System.Decimal receivedQuantity, global::System.Boolean issued, global::System.Int64 jobOrderID)
        {
            JobOrderReceipt jobOrderReceipt = new JobOrderReceipt();
            jobOrderReceipt.JobOrderReceiptID = jobOrderReceiptID;
            jobOrderReceipt.ReceivedQuantity = receivedQuantity;
            jobOrderReceipt.Issued = issued;
            jobOrderReceipt.JobOrderID = jobOrderID;
            return jobOrderReceipt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JobOrderReceiptID
        {
            get
            {
                return _JobOrderReceiptID;
            }
            set
            {
                if (_JobOrderReceiptID != value)
                {
                    OnJobOrderReceiptIDChanging(value);
                    ReportPropertyChanging("JobOrderReceiptID");
                    _JobOrderReceiptID = value;
                    ReportPropertyChanged("JobOrderReceiptID");
                    OnJobOrderReceiptIDChanged();
                }
            }
        }
        private global::System.Int64 _JobOrderReceiptID;
        partial void OnJobOrderReceiptIDChanging(global::System.Int64 value);
        partial void OnJobOrderReceiptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceiptDate
        {
            get
            {
                return _ReceiptDate;
            }
            set
            {
                OnReceiptDateChanging(value);
                ReportPropertyChanging("ReceiptDate");
                _ReceiptDate = value;
                ReportPropertyChanged("ReceiptDate");
                OnReceiptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceiptDate;
        partial void OnReceiptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceiptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = value;
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ReceivedQuantity
        {
            get
            {
                return _ReceivedQuantity;
            }
            set
            {
                OnReceivedQuantityChanging(value);
                ReportPropertyChanging("ReceivedQuantity");
                _ReceivedQuantity = value;
                ReportPropertyChanged("ReceivedQuantity");
                OnReceivedQuantityChanged();
            }
        }
        private global::System.Decimal _ReceivedQuantity;
        partial void OnReceivedQuantityChanging(global::System.Decimal value);
        partial void OnReceivedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Issued
        {
            get
            {
                return _Issued;
            }
            set
            {
                OnIssuedChanging(value);
                ReportPropertyChanging("Issued");
                _Issued = value;
                ReportPropertyChanged("Issued");
                OnIssuedChanged();
            }
        }
        private global::System.Boolean _Issued;
        partial void OnIssuedChanging(global::System.Boolean value);
        partial void OnIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                OnJobOrderIDChanging(value);
                ReportPropertyChanging("JobOrderID");
                _JobOrderID = value;
                ReportPropertyChanged("JobOrderID");
                OnJobOrderIDChanged();
            }
        }
        private global::System.Int64 _JobOrderID;
        partial void OnJobOrderIDChanging(global::System.Int64 value);
        partial void OnJobOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrderReceipt_JobOrder", "JobOrder")]
        public JobOrder JobOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrderReceipt_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrderReceipt_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrderReceipt_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_JobOrderReceipt_JobOrder", "JobOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="JobOrderTolerance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobOrderTolerance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobOrderTolerance object.
        /// </summary>
        /// <param name="jobOrderToleranceID">Initial value of the JobOrderToleranceID property.</param>
        /// <param name="toleranceValueInPercentage">Initial value of the ToleranceValueInPercentage property.</param>
        /// <param name="jobOrderToleraceTypeID">Initial value of the JobOrderToleraceTypeID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static JobOrderTolerance CreateJobOrderTolerance(global::System.Int64 jobOrderToleranceID, global::System.Decimal toleranceValueInPercentage, global::System.Byte jobOrderToleraceTypeID, global::System.Int64 orderID)
        {
            JobOrderTolerance jobOrderTolerance = new JobOrderTolerance();
            jobOrderTolerance.JobOrderToleranceID = jobOrderToleranceID;
            jobOrderTolerance.ToleranceValueInPercentage = toleranceValueInPercentage;
            jobOrderTolerance.JobOrderToleraceTypeID = jobOrderToleraceTypeID;
            jobOrderTolerance.OrderID = orderID;
            return jobOrderTolerance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JobOrderToleranceID
        {
            get
            {
                return _JobOrderToleranceID;
            }
            set
            {
                if (_JobOrderToleranceID != value)
                {
                    OnJobOrderToleranceIDChanging(value);
                    ReportPropertyChanging("JobOrderToleranceID");
                    _JobOrderToleranceID = value;
                    ReportPropertyChanged("JobOrderToleranceID");
                    OnJobOrderToleranceIDChanged();
                }
            }
        }
        private global::System.Int64 _JobOrderToleranceID;
        partial void OnJobOrderToleranceIDChanging(global::System.Int64 value);
        partial void OnJobOrderToleranceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ToleranceValueInPercentage
        {
            get
            {
                return _ToleranceValueInPercentage;
            }
            set
            {
                OnToleranceValueInPercentageChanging(value);
                ReportPropertyChanging("ToleranceValueInPercentage");
                _ToleranceValueInPercentage = value;
                ReportPropertyChanged("ToleranceValueInPercentage");
                OnToleranceValueInPercentageChanged();
            }
        }
        private global::System.Decimal _ToleranceValueInPercentage;
        partial void OnToleranceValueInPercentageChanging(global::System.Decimal value);
        partial void OnToleranceValueInPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte JobOrderToleraceTypeID
        {
            get
            {
                return _JobOrderToleraceTypeID;
            }
            set
            {
                OnJobOrderToleraceTypeIDChanging(value);
                ReportPropertyChanging("JobOrderToleraceTypeID");
                _JobOrderToleraceTypeID = value;
                ReportPropertyChanged("JobOrderToleraceTypeID");
                OnJobOrderToleraceTypeIDChanged();
            }
        }
        private global::System.Byte _JobOrderToleraceTypeID;
        partial void OnJobOrderToleraceTypeIDChanging(global::System.Byte value);
        partial void OnJobOrderToleraceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderToleranceType")]
        public JobOrderToleranceType JobOrderToleranceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrderToleranceType>("LightSwitchApplication.FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderToleranceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrderToleranceType>("LightSwitchApplication.FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderToleranceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrderToleranceType> JobOrderToleranceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrderToleranceType>("LightSwitchApplication.FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderToleranceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrderToleranceType>("LightSwitchApplication.FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderToleranceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrderTolerance_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_JobOrderTolerance_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_JobOrderTolerance_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_JobOrderTolerance_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_JobOrderTolerance_Order", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="JobOrderToleranceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobOrderToleranceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobOrderToleranceType object.
        /// </summary>
        /// <param name="jobOrderToleranceTypeID">Initial value of the JobOrderToleranceTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="defaultToleranceInPercentage">Initial value of the DefaultToleranceInPercentage property.</param>
        public static JobOrderToleranceType CreateJobOrderToleranceType(global::System.Byte jobOrderToleranceTypeID, global::System.String type, global::System.Decimal defaultToleranceInPercentage)
        {
            JobOrderToleranceType jobOrderToleranceType = new JobOrderToleranceType();
            jobOrderToleranceType.JobOrderToleranceTypeID = jobOrderToleranceTypeID;
            jobOrderToleranceType.Type = type;
            jobOrderToleranceType.DefaultToleranceInPercentage = defaultToleranceInPercentage;
            return jobOrderToleranceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte JobOrderToleranceTypeID
        {
            get
            {
                return _JobOrderToleranceTypeID;
            }
            set
            {
                if (_JobOrderToleranceTypeID != value)
                {
                    OnJobOrderToleranceTypeIDChanging(value);
                    ReportPropertyChanging("JobOrderToleranceTypeID");
                    _JobOrderToleranceTypeID = value;
                    ReportPropertyChanged("JobOrderToleranceTypeID");
                    OnJobOrderToleranceTypeIDChanged();
                }
            }
        }
        private global::System.Byte _JobOrderToleranceTypeID;
        partial void OnJobOrderToleranceTypeIDChanging(global::System.Byte value);
        partial void OnJobOrderToleranceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = value;
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DefaultToleranceInPercentage
        {
            get
            {
                return _DefaultToleranceInPercentage;
            }
            set
            {
                OnDefaultToleranceInPercentageChanging(value);
                ReportPropertyChanging("DefaultToleranceInPercentage");
                _DefaultToleranceInPercentage = value;
                ReportPropertyChanged("DefaultToleranceInPercentage");
                OnDefaultToleranceInPercentageChanged();
            }
        }
        private global::System.Decimal _DefaultToleranceInPercentage;
        partial void OnDefaultToleranceInPercentageChanging(global::System.Decimal value);
        partial void OnDefaultToleranceInPercentageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderTolerance")]
        public EntityCollection<JobOrderTolerance> JobOrderTolerances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobOrderTolerance>("LightSwitchApplication.FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderTolerance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobOrderTolerance>("LightSwitchApplication.FK_JobOrderTolerance_JobOrderToleranceType", "JobOrderTolerance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="JobOrderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobOrderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobOrderType object.
        /// </summary>
        /// <param name="jobOrderTypeID">Initial value of the JobOrderTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static JobOrderType CreateJobOrderType(global::System.Byte jobOrderTypeID, global::System.String type)
        {
            JobOrderType jobOrderType = new JobOrderType();
            jobOrderType.JobOrderTypeID = jobOrderTypeID;
            jobOrderType.Type = type;
            return jobOrderType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte JobOrderTypeID
        {
            get
            {
                return _JobOrderTypeID;
            }
            set
            {
                if (_JobOrderTypeID != value)
                {
                    OnJobOrderTypeIDChanging(value);
                    ReportPropertyChanging("JobOrderTypeID");
                    _JobOrderTypeID = value;
                    ReportPropertyChanged("JobOrderTypeID");
                    OnJobOrderTypeIDChanged();
                }
            }
        }
        private global::System.Byte _JobOrderTypeID;
        partial void OnJobOrderTypeIDChanging(global::System.Byte value);
        partial void OnJobOrderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = value;
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrder_JobOrderType", "JobOrder")]
        public EntityCollection<JobOrder> JobOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrderType", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobOrder>("LightSwitchApplication.FK_JobOrder_JobOrderType", "JobOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="KnittingJO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KnittingJO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KnittingJO object.
        /// </summary>
        /// <param name="knittingJOId">Initial value of the KnittingJOId property.</param>
        /// <param name="joNo">Initial value of the JoNo property.</param>
        /// <param name="joDate">Initial value of the JoDate property.</param>
        /// <param name="quoteNo">Initial value of the QuoteNo property.</param>
        /// <param name="quoteDate">Initial value of the QuoteDate property.</param>
        /// <param name="termsAndConditions">Initial value of the TermsAndConditions property.</param>
        /// <param name="qualitySpecifications">Initial value of the QualitySpecifications property.</param>
        /// <param name="totalValue">Initial value of the TotalValue property.</param>
        /// <param name="approvalID">Initial value of the ApprovalID property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        public static KnittingJO CreateKnittingJO(global::System.Int64 knittingJOId, global::System.String joNo, global::System.DateTime joDate, global::System.String quoteNo, global::System.DateTime quoteDate, global::System.String termsAndConditions, global::System.String qualitySpecifications, global::System.Decimal totalValue, global::System.Int64 approvalID, global::System.Int32 supplierID)
        {
            KnittingJO knittingJO = new KnittingJO();
            knittingJO.KnittingJOId = knittingJOId;
            knittingJO.JoNo = joNo;
            knittingJO.JoDate = joDate;
            knittingJO.QuoteNo = quoteNo;
            knittingJO.QuoteDate = quoteDate;
            knittingJO.TermsAndConditions = termsAndConditions;
            knittingJO.QualitySpecifications = qualitySpecifications;
            knittingJO.TotalValue = totalValue;
            knittingJO.ApprovalID = approvalID;
            knittingJO.SupplierID = supplierID;
            return knittingJO;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KnittingJOId
        {
            get
            {
                return _KnittingJOId;
            }
            set
            {
                if (_KnittingJOId != value)
                {
                    OnKnittingJOIdChanging(value);
                    ReportPropertyChanging("KnittingJOId");
                    _KnittingJOId = value;
                    ReportPropertyChanged("KnittingJOId");
                    OnKnittingJOIdChanged();
                }
            }
        }
        private global::System.Int64 _KnittingJOId;
        partial void OnKnittingJOIdChanging(global::System.Int64 value);
        partial void OnKnittingJOIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JoNo
        {
            get
            {
                return _JoNo;
            }
            set
            {
                OnJoNoChanging(value);
                ReportPropertyChanging("JoNo");
                _JoNo = value;
                ReportPropertyChanged("JoNo");
                OnJoNoChanged();
            }
        }
        private global::System.String _JoNo;
        partial void OnJoNoChanging(global::System.String value);
        partial void OnJoNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime JoDate
        {
            get
            {
                return _JoDate;
            }
            set
            {
                OnJoDateChanging(value);
                ReportPropertyChanging("JoDate");
                _JoDate = value;
                ReportPropertyChanged("JoDate");
                OnJoDateChanged();
            }
        }
        private global::System.DateTime _JoDate;
        partial void OnJoDateChanging(global::System.DateTime value);
        partial void OnJoDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuoteNo
        {
            get
            {
                return _QuoteNo;
            }
            set
            {
                OnQuoteNoChanging(value);
                ReportPropertyChanging("QuoteNo");
                _QuoteNo = value;
                ReportPropertyChanged("QuoteNo");
                OnQuoteNoChanged();
            }
        }
        private global::System.String _QuoteNo;
        partial void OnQuoteNoChanging(global::System.String value);
        partial void OnQuoteNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime QuoteDate
        {
            get
            {
                return _QuoteDate;
            }
            set
            {
                OnQuoteDateChanging(value);
                ReportPropertyChanging("QuoteDate");
                _QuoteDate = value;
                ReportPropertyChanged("QuoteDate");
                OnQuoteDateChanged();
            }
        }
        private global::System.DateTime _QuoteDate;
        partial void OnQuoteDateChanging(global::System.DateTime value);
        partial void OnQuoteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TermsAndConditions
        {
            get
            {
                return _TermsAndConditions;
            }
            set
            {
                OnTermsAndConditionsChanging(value);
                ReportPropertyChanging("TermsAndConditions");
                _TermsAndConditions = value;
                ReportPropertyChanged("TermsAndConditions");
                OnTermsAndConditionsChanged();
            }
        }
        private global::System.String _TermsAndConditions;
        partial void OnTermsAndConditionsChanging(global::System.String value);
        partial void OnTermsAndConditionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QualitySpecifications
        {
            get
            {
                return _QualitySpecifications;
            }
            set
            {
                OnQualitySpecificationsChanging(value);
                ReportPropertyChanging("QualitySpecifications");
                _QualitySpecifications = value;
                ReportPropertyChanged("QualitySpecifications");
                OnQualitySpecificationsChanged();
            }
        }
        private global::System.String _QualitySpecifications;
        partial void OnQualitySpecificationsChanging(global::System.String value);
        partial void OnQualitySpecificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalValue
        {
            get
            {
                return _TotalValue;
            }
            set
            {
                OnTotalValueChanging(value);
                ReportPropertyChanging("TotalValue");
                _TotalValue = value;
                ReportPropertyChanged("TotalValue");
                OnTotalValueChanged();
            }
        }
        private global::System.Decimal _TotalValue;
        partial void OnTotalValueChanging(global::System.Decimal value);
        partial void OnTotalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ApprovalID
        {
            get
            {
                return _ApprovalID;
            }
            set
            {
                OnApprovalIDChanging(value);
                ReportPropertyChanging("ApprovalID");
                _ApprovalID = value;
                ReportPropertyChanged("ApprovalID");
                OnApprovalIDChanged();
            }
        }
        private global::System.Int64 _ApprovalID;
        partial void OnApprovalIDChanging(global::System.Int64 value);
        partial void OnApprovalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GRNRecieptID
        {
            get
            {
                return _GRNRecieptID;
            }
            set
            {
                OnGRNRecieptIDChanging(value);
                ReportPropertyChanging("GRNRecieptID");
                _GRNRecieptID = value;
                ReportPropertyChanged("GRNRecieptID");
                OnGRNRecieptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _GRNRecieptID;
        partial void OnGRNRecieptIDChanging(Nullable<global::System.Int64> value);
        partial void OnGRNRecieptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                OnJobOrderIDChanging(value);
                ReportPropertyChanging("JobOrderID");
                _JobOrderID = value;
                ReportPropertyChanged("JobOrderID");
                OnJobOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JobOrderID;
        partial void OnJobOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnJobOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _OrderID;
        partial void OnOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_Approval", "Approval")]
        public Approval Approval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_KnittingJO_Approval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_KnittingJO_Approval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> ApprovalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_KnittingJO_Approval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("LightSwitchApplication.FK_KnittingJO_Approval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_KnittingJO_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_KnittingJO_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_KnittingJO_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_KnittingJO_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_GRNReciept", "GRNReciept")]
        public GRNReciept GRNReciept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_KnittingJO_GRNReciept", "GRNReciept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_KnittingJO_GRNReciept", "GRNReciept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GRNReciept> GRNRecieptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GRNReciept>("LightSwitchApplication.FK_KnittingJO_GRNReciept", "GRNReciept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GRNReciept>("LightSwitchApplication.FK_KnittingJO_GRNReciept", "GRNReciept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_JobOrder", "JobOrder")]
        public JobOrder JobOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJO_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJO_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJO_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJO_JobOrder", "JobOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_KnittingJO_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_KnittingJO_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_KnittingJO_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_KnittingJO_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJoItem_KnittingJO", "KnittingJoItem")]
        public EntityCollection<KnittingJoItem> KnittingJoItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KnittingJoItem>("LightSwitchApplication.FK_KnittingJoItem_KnittingJO", "KnittingJoItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KnittingJoItem>("LightSwitchApplication.FK_KnittingJoItem_KnittingJO", "KnittingJoItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="KnittingJoItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KnittingJoItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KnittingJoItem object.
        /// </summary>
        /// <param name="knittingJoItemsId">Initial value of the KnittingJoItemsId property.</param>
        /// <param name="nameOfProduct">Initial value of the NameOfProduct property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="totalAmount">Initial value of the TotalAmount property.</param>
        /// <param name="knittingJoId">Initial value of the KnittingJoId property.</param>
        public static KnittingJoItem CreateKnittingJoItem(global::System.Int64 knittingJoItemsId, global::System.String nameOfProduct, global::System.Decimal quantity, global::System.Decimal rate, global::System.Decimal totalAmount, global::System.Int64 knittingJoId)
        {
            KnittingJoItem knittingJoItem = new KnittingJoItem();
            knittingJoItem.KnittingJoItemsId = knittingJoItemsId;
            knittingJoItem.NameOfProduct = nameOfProduct;
            knittingJoItem.Quantity = quantity;
            knittingJoItem.Rate = rate;
            knittingJoItem.TotalAmount = totalAmount;
            knittingJoItem.KnittingJoId = knittingJoId;
            return knittingJoItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KnittingJoItemsId
        {
            get
            {
                return _KnittingJoItemsId;
            }
            set
            {
                if (_KnittingJoItemsId != value)
                {
                    OnKnittingJoItemsIdChanging(value);
                    ReportPropertyChanging("KnittingJoItemsId");
                    _KnittingJoItemsId = value;
                    ReportPropertyChanged("KnittingJoItemsId");
                    OnKnittingJoItemsIdChanged();
                }
            }
        }
        private global::System.Int64 _KnittingJoItemsId;
        partial void OnKnittingJoItemsIdChanging(global::System.Int64 value);
        partial void OnKnittingJoItemsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameOfProduct
        {
            get
            {
                return _NameOfProduct;
            }
            set
            {
                OnNameOfProductChanging(value);
                ReportPropertyChanging("NameOfProduct");
                _NameOfProduct = value;
                ReportPropertyChanged("NameOfProduct");
                OnNameOfProductChanged();
            }
        }
        private global::System.String _NameOfProduct;
        partial void OnNameOfProductChanging(global::System.String value);
        partial void OnNameOfProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = value;
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = value;
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private global::System.Decimal _TotalAmount;
        partial void OnTotalAmountChanging(global::System.Decimal value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = value;
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JobOrderID
        {
            get
            {
                return _JobOrderID;
            }
            set
            {
                OnJobOrderIDChanging(value);
                ReportPropertyChanging("JobOrderID");
                _JobOrderID = value;
                ReportPropertyChanged("JobOrderID");
                OnJobOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JobOrderID;
        partial void OnJobOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnJobOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KnittingJoId
        {
            get
            {
                return _KnittingJoId;
            }
            set
            {
                OnKnittingJoIdChanging(value);
                ReportPropertyChanging("KnittingJoId");
                _KnittingJoId = value;
                ReportPropertyChanged("KnittingJoId");
                OnKnittingJoIdChanged();
            }
        }
        private global::System.Int64 _KnittingJoId;
        partial void OnKnittingJoIdChanging(global::System.Int64 value);
        partial void OnKnittingJoIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJoItem_JobOrder", "JobOrder")]
        public JobOrder JobOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJoItem_JobOrder", "JobOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJoItem_JobOrder", "JobOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobOrder> JobOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJoItem_JobOrder", "JobOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobOrder>("LightSwitchApplication.FK_KnittingJoItem_JobOrder", "JobOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJoItem_KnittingJO", "KnittingJO")]
        public KnittingJO KnittingJO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KnittingJO>("LightSwitchApplication.FK_KnittingJoItem_KnittingJO", "KnittingJO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KnittingJO>("LightSwitchApplication.FK_KnittingJoItem_KnittingJO", "KnittingJO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KnittingJO> KnittingJOReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KnittingJO>("LightSwitchApplication.FK_KnittingJoItem_KnittingJO", "KnittingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KnittingJO>("LightSwitchApplication.FK_KnittingJoItem_KnittingJO", "KnittingJO", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MaterialName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialName object.
        /// </summary>
        /// <param name="materialNameID">Initial value of the MaterialNameID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MaterialName CreateMaterialName(global::System.Int32 materialNameID, global::System.String name)
        {
            MaterialName materialName = new MaterialName();
            materialName.MaterialNameID = materialNameID;
            materialName.Name = name;
            return materialName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialNameID
        {
            get
            {
                return _MaterialNameID;
            }
            set
            {
                if (_MaterialNameID != value)
                {
                    OnMaterialNameIDChanging(value);
                    ReportPropertyChanging("MaterialNameID");
                    _MaterialNameID = value;
                    ReportPropertyChanged("MaterialNameID");
                    OnMaterialNameIDChanged();
                }
            }
        }
        private global::System.Int32 _MaterialNameID;
        partial void OnMaterialNameIDChanging(global::System.Int32 value);
        partial void OnMaterialNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_MaterialName", "ProductMaterials")]
        public EntityCollection<ProductMaterial> ProductMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_MaterialName", "ProductMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_MaterialName", "ProductMaterials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SubMaterial_MaterialName", "SubMaterial")]
        public EntityCollection<SubMaterial> SubMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubMaterial>("LightSwitchApplication.FK_SubMaterial_MaterialName", "SubMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubMaterial>("LightSwitchApplication.FK_SubMaterial_MaterialName", "SubMaterial", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MaterialsFromStock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialsFromStock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialsFromStock object.
        /// </summary>
        /// <param name="materialsFromStockID">Initial value of the MaterialsFromStockID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="issuedDate">Initial value of the IssuedDate property.</param>
        /// <param name="materialStockID">Initial value of the MaterialStockID property.</param>
        /// <param name="fromOrderID">Initial value of the FromOrderID property.</param>
        /// <param name="toOrderID">Initial value of the ToOrderID property.</param>
        public static MaterialsFromStock CreateMaterialsFromStock(global::System.Int64 materialsFromStockID, global::System.Decimal quantity, global::System.DateTime issuedDate, global::System.Int64 materialStockID, global::System.Int64 fromOrderID, global::System.Int64 toOrderID)
        {
            MaterialsFromStock materialsFromStock = new MaterialsFromStock();
            materialsFromStock.MaterialsFromStockID = materialsFromStockID;
            materialsFromStock.Quantity = quantity;
            materialsFromStock.IssuedDate = issuedDate;
            materialsFromStock.MaterialStockID = materialStockID;
            materialsFromStock.FromOrderID = fromOrderID;
            materialsFromStock.ToOrderID = toOrderID;
            return materialsFromStock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MaterialsFromStockID
        {
            get
            {
                return _MaterialsFromStockID;
            }
            set
            {
                if (_MaterialsFromStockID != value)
                {
                    OnMaterialsFromStockIDChanging(value);
                    ReportPropertyChanging("MaterialsFromStockID");
                    _MaterialsFromStockID = value;
                    ReportPropertyChanged("MaterialsFromStockID");
                    OnMaterialsFromStockIDChanged();
                }
            }
        }
        private global::System.Int64 _MaterialsFromStockID;
        partial void OnMaterialsFromStockIDChanging(global::System.Int64 value);
        partial void OnMaterialsFromStockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IssuedDate
        {
            get
            {
                return _IssuedDate;
            }
            set
            {
                OnIssuedDateChanging(value);
                ReportPropertyChanging("IssuedDate");
                _IssuedDate = value;
                ReportPropertyChanged("IssuedDate");
                OnIssuedDateChanged();
            }
        }
        private global::System.DateTime _IssuedDate;
        partial void OnIssuedDateChanging(global::System.DateTime value);
        partial void OnIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MaterialStockID
        {
            get
            {
                return _MaterialStockID;
            }
            set
            {
                OnMaterialStockIDChanging(value);
                ReportPropertyChanging("MaterialStockID");
                _MaterialStockID = value;
                ReportPropertyChanged("MaterialStockID");
                OnMaterialStockIDChanged();
            }
        }
        private global::System.Int64 _MaterialStockID;
        partial void OnMaterialStockIDChanging(global::System.Int64 value);
        partial void OnMaterialStockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FromOrderID
        {
            get
            {
                return _FromOrderID;
            }
            set
            {
                OnFromOrderIDChanging(value);
                ReportPropertyChanging("FromOrderID");
                _FromOrderID = value;
                ReportPropertyChanged("FromOrderID");
                OnFromOrderIDChanged();
            }
        }
        private global::System.Int64 _FromOrderID;
        partial void OnFromOrderIDChanging(global::System.Int64 value);
        partial void OnFromOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ToOrderID
        {
            get
            {
                return _ToOrderID;
            }
            set
            {
                OnToOrderIDChanging(value);
                ReportPropertyChanging("ToOrderID");
                _ToOrderID = value;
                ReportPropertyChanged("ToOrderID");
                OnToOrderIDChanged();
            }
        }
        private global::System.Int64 _ToOrderID;
        partial void OnToOrderIDChanging(global::System.Int64 value);
        partial void OnToOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialsFromStock_MaterialStock", "MaterialStock")]
        public MaterialStock MaterialStock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialStock>("LightSwitchApplication.FK_MaterialsFromStock_MaterialStock", "MaterialStock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialStock>("LightSwitchApplication.FK_MaterialsFromStock_MaterialStock", "MaterialStock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialStock> MaterialStockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialStock>("LightSwitchApplication.FK_MaterialsFromStock_MaterialStock", "MaterialStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialStock>("LightSwitchApplication.FK_MaterialsFromStock_MaterialStock", "MaterialStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialsFromStock_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialsFromStock_Order1", "Order")]
        public Order Order1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order1", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order1", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> Order1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order1", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_MaterialsFromStock_Order1", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="MaterialStock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialStock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialStock object.
        /// </summary>
        /// <param name="materialStockID">Initial value of the MaterialStockID property.</param>
        /// <param name="stockQuantity">Initial value of the StockQuantity property.</param>
        /// <param name="issuedQuantity">Initial value of the IssuedQuantity property.</param>
        /// <param name="inStockDateTime">Initial value of the InStockDateTime property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="subMaterialsNameID">Initial value of the SubMaterialsNameID property.</param>
        /// <param name="uOMID">Initial value of the UOMID property.</param>
        public static MaterialStock CreateMaterialStock(global::System.Int64 materialStockID, global::System.Decimal stockQuantity, global::System.Decimal issuedQuantity, global::System.DateTime inStockDateTime, global::System.Int64 orderID, global::System.Int64 subMaterialsNameID, global::System.Int16 uOMID)
        {
            MaterialStock materialStock = new MaterialStock();
            materialStock.MaterialStockID = materialStockID;
            materialStock.StockQuantity = stockQuantity;
            materialStock.IssuedQuantity = issuedQuantity;
            materialStock.InStockDateTime = inStockDateTime;
            materialStock.OrderID = orderID;
            materialStock.SubMaterialsNameID = subMaterialsNameID;
            materialStock.UOMID = uOMID;
            return materialStock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MaterialStockID
        {
            get
            {
                return _MaterialStockID;
            }
            set
            {
                if (_MaterialStockID != value)
                {
                    OnMaterialStockIDChanging(value);
                    ReportPropertyChanging("MaterialStockID");
                    _MaterialStockID = value;
                    ReportPropertyChanged("MaterialStockID");
                    OnMaterialStockIDChanged();
                }
            }
        }
        private global::System.Int64 _MaterialStockID;
        partial void OnMaterialStockIDChanging(global::System.Int64 value);
        partial void OnMaterialStockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal StockQuantity
        {
            get
            {
                return _StockQuantity;
            }
            set
            {
                OnStockQuantityChanging(value);
                ReportPropertyChanging("StockQuantity");
                _StockQuantity = value;
                ReportPropertyChanged("StockQuantity");
                OnStockQuantityChanged();
            }
        }
        private global::System.Decimal _StockQuantity;
        partial void OnStockQuantityChanging(global::System.Decimal value);
        partial void OnStockQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal IssuedQuantity
        {
            get
            {
                return _IssuedQuantity;
            }
            set
            {
                OnIssuedQuantityChanging(value);
                ReportPropertyChanging("IssuedQuantity");
                _IssuedQuantity = value;
                ReportPropertyChanged("IssuedQuantity");
                OnIssuedQuantityChanged();
            }
        }
        private global::System.Decimal _IssuedQuantity;
        partial void OnIssuedQuantityChanging(global::System.Decimal value);
        partial void OnIssuedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InStockDateTime
        {
            get
            {
                return _InStockDateTime;
            }
            set
            {
                OnInStockDateTimeChanging(value);
                ReportPropertyChanging("InStockDateTime");
                _InStockDateTime = value;
                ReportPropertyChanged("InStockDateTime");
                OnInStockDateTimeChanged();
            }
        }
        private global::System.DateTime _InStockDateTime;
        partial void OnInStockDateTimeChanging(global::System.DateTime value);
        partial void OnInStockDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SubMaterialsNameID
        {
            get
            {
                return _SubMaterialsNameID;
            }
            set
            {
                OnSubMaterialsNameIDChanging(value);
                ReportPropertyChanging("SubMaterialsNameID");
                _SubMaterialsNameID = value;
                ReportPropertyChanged("SubMaterialsNameID");
                OnSubMaterialsNameIDChanged();
            }
        }
        private global::System.Int64 _SubMaterialsNameID;
        partial void OnSubMaterialsNameIDChanging(global::System.Int64 value);
        partial void OnSubMaterialsNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                OnUOMIDChanging(value);
                ReportPropertyChanging("UOMID");
                _UOMID = value;
                ReportPropertyChanged("UOMID");
                OnUOMIDChanged();
            }
        }
        private global::System.Int16 _UOMID;
        partial void OnUOMIDChanging(global::System.Int16 value);
        partial void OnUOMIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialsFromStock_MaterialStock", "MaterialsFromStock")]
        public EntityCollection<MaterialsFromStock> MaterialsFromStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialsFromStock>("LightSwitchApplication.FK_MaterialsFromStock_MaterialStock", "MaterialsFromStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialsFromStock>("LightSwitchApplication.FK_MaterialsFromStock_MaterialStock", "MaterialsFromStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialStock_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialStock_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialStock_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_MaterialStock_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_MaterialStock_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialStock_SubMaterial", "SubMaterial")]
        public SubMaterial SubMaterial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubMaterial>("LightSwitchApplication.FK_MaterialStock_SubMaterial", "SubMaterial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubMaterial>("LightSwitchApplication.FK_MaterialStock_SubMaterial", "SubMaterial").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubMaterial> SubMaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubMaterial>("LightSwitchApplication.FK_MaterialStock_SubMaterial", "SubMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubMaterial>("LightSwitchApplication.FK_MaterialStock_SubMaterial", "SubMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialStock_UnitsOfMeasurement", "UnitsOfMeasurement")]
        public UnitsOfMeasurement UnitsOfMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_MaterialStock_UnitsOfMeasurement", "UnitsOfMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_MaterialStock_UnitsOfMeasurement", "UnitsOfMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitsOfMeasurement> UnitsOfMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_MaterialStock_UnitsOfMeasurement", "UnitsOfMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_MaterialStock_UnitsOfMeasurement", "UnitsOfMeasurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        /// <param name="lastModifiedDate">Initial value of the LastModifiedDate property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="orderByID">Initial value of the OrderByID property.</param>
        /// <param name="orderStatusID">Initial value of the OrderStatusID property.</param>
        /// <param name="orderThoughID">Initial value of the OrderThoughID property.</param>
        public static Order CreateOrder(global::System.Int64 orderID, global::System.DateTime orderDate, global::System.DateTime lastModifiedDate, global::System.Int32 customerID, global::System.Int32 orderByID, global::System.Int16 orderStatusID, global::System.Byte orderThoughID)
        {
            Order order = new Order();
            order.OrderID = orderID;
            order.OrderDate = orderDate;
            order.LastModifiedDate = lastModifiedDate;
            order.CustomerID = customerID;
            order.OrderByID = orderByID;
            order.OrderStatusID = orderStatusID;
            order.OrderThoughID = orderThoughID;
            return order;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = value;
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = value;
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpectedDeliveryDate
        {
            get
            {
                return _ExpectedDeliveryDate;
            }
            set
            {
                OnExpectedDeliveryDateChanging(value);
                ReportPropertyChanging("ExpectedDeliveryDate");
                _ExpectedDeliveryDate = value;
                ReportPropertyChanged("ExpectedDeliveryDate");
                OnExpectedDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpectedDeliveryDate;
        partial void OnExpectedDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpectedDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionValue
        {
            get
            {
                return _CommissionValue;
            }
            set
            {
                OnCommissionValueChanging(value);
                ReportPropertyChanging("CommissionValue");
                _CommissionValue = value;
                ReportPropertyChanged("CommissionValue");
                OnCommissionValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionValue;
        partial void OnCommissionValueChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModifiedDate
        {
            get
            {
                return _LastModifiedDate;
            }
            set
            {
                OnLastModifiedDateChanging(value);
                ReportPropertyChanging("LastModifiedDate");
                _LastModifiedDate = value;
                ReportPropertyChanged("LastModifiedDate");
                OnLastModifiedDateChanged();
            }
        }
        private global::System.DateTime _LastModifiedDate;
        partial void OnLastModifiedDateChanging(global::System.DateTime value);
        partial void OnLastModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalOrderValue
        {
            get
            {
                return _TotalOrderValue;
            }
            set
            {
                OnTotalOrderValueChanging(value);
                ReportPropertyChanging("TotalOrderValue");
                _TotalOrderValue = value;
                ReportPropertyChanged("TotalOrderValue");
                OnTotalOrderValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalOrderValue;
        partial void OnTotalOrderValueChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalOrderValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InternalDeliveryDate
        {
            get
            {
                return _InternalDeliveryDate;
            }
            set
            {
                OnInternalDeliveryDateChanging(value);
                ReportPropertyChanging("InternalDeliveryDate");
                _InternalDeliveryDate = value;
                ReportPropertyChanged("InternalDeliveryDate");
                OnInternalDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InternalDeliveryDate;
        partial void OnInternalDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInternalDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OrderApprovedDate
        {
            get
            {
                return _OrderApprovedDate;
            }
            set
            {
                OnOrderApprovedDateChanging(value);
                ReportPropertyChanging("OrderApprovedDate");
                _OrderApprovedDate = value;
                ReportPropertyChanged("OrderApprovedDate");
                OnOrderApprovedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderApprovedDate;
        partial void OnOrderApprovedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderApprovedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OrderConfirmedDate
        {
            get
            {
                return _OrderConfirmedDate;
            }
            set
            {
                OnOrderConfirmedDateChanging(value);
                ReportPropertyChanging("OrderConfirmedDate");
                _OrderConfirmedDate = value;
                ReportPropertyChanged("OrderConfirmedDate");
                OnOrderConfirmedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderConfirmedDate;
        partial void OnOrderConfirmedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderConfirmedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerOrderNumber
        {
            get
            {
                return _CustomerOrderNumber;
            }
            set
            {
                OnCustomerOrderNumberChanging(value);
                ReportPropertyChanging("CustomerOrderNumber");
                _CustomerOrderNumber = value;
                ReportPropertyChanged("CustomerOrderNumber");
                OnCustomerOrderNumberChanged();
            }
        }
        private global::System.String _CustomerOrderNumber;
        partial void OnCustomerOrderNumberChanging(global::System.String value);
        partial void OnCustomerOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> CommissionValueTypeID
        {
            get
            {
                return _CommissionValueTypeID;
            }
            set
            {
                OnCommissionValueTypeIDChanging(value);
                ReportPropertyChanging("CommissionValueTypeID");
                _CommissionValueTypeID = value;
                ReportPropertyChanged("CommissionValueTypeID");
                OnCommissionValueTypeIDChanged();
            }
        }
        private Nullable<global::System.Byte> _CommissionValueTypeID;
        partial void OnCommissionValueTypeIDChanging(Nullable<global::System.Byte> value);
        partial void OnCommissionValueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = value;
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderByID
        {
            get
            {
                return _OrderByID;
            }
            set
            {
                OnOrderByIDChanging(value);
                ReportPropertyChanging("OrderByID");
                _OrderByID = value;
                ReportPropertyChanged("OrderByID");
                OnOrderByIDChanged();
            }
        }
        private global::System.Int32 _OrderByID;
        partial void OnOrderByIDChanging(global::System.Int32 value);
        partial void OnOrderByIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OrderStatusID
        {
            get
            {
                return _OrderStatusID;
            }
            set
            {
                OnOrderStatusIDChanging(value);
                ReportPropertyChanging("OrderStatusID");
                _OrderStatusID = value;
                ReportPropertyChanged("OrderStatusID");
                OnOrderStatusIDChanged();
            }
        }
        private global::System.Int16 _OrderStatusID;
        partial void OnOrderStatusIDChanging(global::System.Int16 value);
        partial void OnOrderStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OrderThoughID
        {
            get
            {
                return _OrderThoughID;
            }
            set
            {
                OnOrderThoughIDChanging(value);
                ReportPropertyChanging("OrderThoughID");
                _OrderThoughID = value;
                ReportPropertyChanged("OrderThoughID");
                OnOrderThoughIDChanged();
            }
        }
        private global::System.Byte _OrderThoughID;
        partial void OnOrderThoughIDChanging(global::System.Byte value);
        partial void OnOrderThoughIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Approval_Order", "Approval")]
        public EntityCollection<Approval> Approvals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Approval>("LightSwitchApplication.FK_Approval_Order", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Approval>("LightSwitchApplication.FK_Approval_Order", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CartonBox_Order", "CartonBox")]
        public EntityCollection<CartonBox> CartonBoxes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CartonBox>("LightSwitchApplication.FK_CartonBox_Order", "CartonBox");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CartonBox>("LightSwitchApplication.FK_CartonBox_Order", "CartonBox", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_Order", "CompactingJo")]
        public EntityCollection<CompactingJo> CompactingJoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_Order", "CompactingJo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_Order", "CompactingJo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_Order", "DyeingJO")]
        public EntityCollection<DyeingJO> DyeingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_Order", "DyeingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_Order", "DyeingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_History_Order", "History")]
        public EntityCollection<History> Histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<History>("LightSwitchApplication.FK_History_Order", "History");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<History>("LightSwitchApplication.FK_History_Order", "History", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_Order", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Order", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_Order", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_JobOrderTolerance_Order", "JobOrderTolerance")]
        public EntityCollection<JobOrderTolerance> JobOrderTolerances
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobOrderTolerance>("LightSwitchApplication.FK_JobOrderTolerance_Order", "JobOrderTolerance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobOrderTolerance>("LightSwitchApplication.FK_JobOrderTolerance_Order", "JobOrderTolerance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_KnittingJO_Order", "KnittingJO")]
        public EntityCollection<KnittingJO> KnittingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_Order", "KnittingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KnittingJO>("LightSwitchApplication.FK_KnittingJO_Order", "KnittingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialsFromStock_Order", "MaterialsFromStock")]
        public EntityCollection<MaterialsFromStock> MaterialsFromStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialsFromStock>("LightSwitchApplication.FK_MaterialsFromStock_Order", "MaterialsFromStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialsFromStock>("LightSwitchApplication.FK_MaterialsFromStock_Order", "MaterialsFromStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialsFromStock_Order1", "MaterialsFromStock")]
        public EntityCollection<MaterialsFromStock> MaterialsFromStocks1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialsFromStock>("LightSwitchApplication.FK_MaterialsFromStock_Order1", "MaterialsFromStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialsFromStock>("LightSwitchApplication.FK_MaterialsFromStock_Order1", "MaterialsFromStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialStock_Order", "MaterialStock")]
        public EntityCollection<MaterialStock> MaterialStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialStock>("LightSwitchApplication.FK_MaterialStock_Order", "MaterialStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialStock>("LightSwitchApplication.FK_MaterialStock_Order", "MaterialStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_CommissionValueType", "CommissionValueType")]
        public CommissionValueType CommissionValueType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommissionValueType>("LightSwitchApplication.FK_Order_CommissionValueType", "CommissionValueType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommissionValueType>("LightSwitchApplication.FK_Order_CommissionValueType", "CommissionValueType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommissionValueType> CommissionValueTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommissionValueType>("LightSwitchApplication.FK_Order_CommissionValueType", "CommissionValueType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommissionValueType>("LightSwitchApplication.FK_Order_CommissionValueType", "CommissionValueType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Order_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Order_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Order_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_Order_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_OrderBy", "Company")]
        public Company Company1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Order_OrderBy", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Order_OrderBy", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> Company1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_Order_OrderBy", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_Order_OrderBy", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_OrderStatus", "OrderStatus")]
        public OrderStatu OrderStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatu>("LightSwitchApplication.FK_Order_OrderStatus", "OrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatu>("LightSwitchApplication.FK_Order_OrderStatus", "OrderStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderStatu> OrderStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatu>("LightSwitchApplication.FK_Order_OrderStatus", "OrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderStatu>("LightSwitchApplication.FK_Order_OrderStatus", "OrderStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_OrderThrough", "OrderThrough")]
        public OrderThrough OrderThrough
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderThrough>("LightSwitchApplication.FK_Order_OrderThrough", "OrderThrough").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderThrough>("LightSwitchApplication.FK_Order_OrderThrough", "OrderThrough").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderThrough> OrderThroughReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderThrough>("LightSwitchApplication.FK_Order_OrderThrough", "OrderThrough");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderThrough>("LightSwitchApplication.FK_Order_OrderThrough", "OrderThrough", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderCurrencyConversion_Order", "OrderCurrencyConversion")]
        public EntityCollection<OrderCurrencyConversion> OrderCurrencyConversions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderCurrencyConversion>("LightSwitchApplication.FK_OrderCurrencyConversion_Order", "OrderCurrencyConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderCurrencyConversion>("LightSwitchApplication.FK_OrderCurrencyConversion_Order", "OrderCurrencyConversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_Order", "OrderProduct")]
        public EntityCollection<OrderProduct> OrderProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_Order", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_Order", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderReportCard_Order", "OrderReportCard")]
        public EntityCollection<OrderReportCard> OrderReportCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderReportCard>("LightSwitchApplication.FK_OrderReportCard_Order", "OrderReportCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderReportCard>("LightSwitchApplication.FK_OrderReportCard_Order", "OrderReportCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_Order", "PurchaseOrders")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_Order", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_Order", "PurchaseOrders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderCurrencyConversion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderCurrencyConversion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderCurrencyConversion object.
        /// </summary>
        /// <param name="orderCurrencyConversionID">Initial value of the OrderCurrencyConversionID property.</param>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static OrderCurrencyConversion CreateOrderCurrencyConversion(global::System.Int64 orderCurrencyConversionID, global::System.Int16 currencyID, global::System.Int64 orderID)
        {
            OrderCurrencyConversion orderCurrencyConversion = new OrderCurrencyConversion();
            orderCurrencyConversion.OrderCurrencyConversionID = orderCurrencyConversionID;
            orderCurrencyConversion.CurrencyID = currencyID;
            orderCurrencyConversion.OrderID = orderID;
            return orderCurrencyConversion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderCurrencyConversionID
        {
            get
            {
                return _OrderCurrencyConversionID;
            }
            set
            {
                if (_OrderCurrencyConversionID != value)
                {
                    OnOrderCurrencyConversionIDChanging(value);
                    ReportPropertyChanging("OrderCurrencyConversionID");
                    _OrderCurrencyConversionID = value;
                    ReportPropertyChanged("OrderCurrencyConversionID");
                    OnOrderCurrencyConversionIDChanged();
                }
            }
        }
        private global::System.Int64 _OrderCurrencyConversionID;
        partial void OnOrderCurrencyConversionIDChanging(global::System.Int64 value);
        partial void OnOrderCurrencyConversionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ValueInINR
        {
            get
            {
                return _ValueInINR;
            }
            set
            {
                OnValueInINRChanging(value);
                ReportPropertyChanging("ValueInINR");
                _ValueInINR = value;
                ReportPropertyChanged("ValueInINR");
                OnValueInINRChanged();
            }
        }
        private Nullable<global::System.Decimal> _ValueInINR;
        partial void OnValueInINRChanging(Nullable<global::System.Decimal> value);
        partial void OnValueInINRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ValueInINRForMaterials
        {
            get
            {
                return _ValueInINRForMaterials;
            }
            set
            {
                OnValueInINRForMaterialsChanging(value);
                ReportPropertyChanging("ValueInINRForMaterials");
                _ValueInINRForMaterials = value;
                ReportPropertyChanged("ValueInINRForMaterials");
                OnValueInINRForMaterialsChanged();
            }
        }
        private Nullable<global::System.Decimal> _ValueInINRForMaterials;
        partial void OnValueInINRForMaterialsChanging(Nullable<global::System.Decimal> value);
        partial void OnValueInINRForMaterialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ValueInINRForSubMaterials
        {
            get
            {
                return _ValueInINRForSubMaterials;
            }
            set
            {
                OnValueInINRForSubMaterialsChanging(value);
                ReportPropertyChanging("ValueInINRForSubMaterials");
                _ValueInINRForSubMaterials = value;
                ReportPropertyChanged("ValueInINRForSubMaterials");
                OnValueInINRForSubMaterialsChanged();
            }
        }
        private Nullable<global::System.Decimal> _ValueInINRForSubMaterials;
        partial void OnValueInINRForSubMaterialsChanging(Nullable<global::System.Decimal> value);
        partial void OnValueInINRForSubMaterialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = value;
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private global::System.Int16 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int16 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderCurrencyConversion_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_OrderCurrencyConversion_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_OrderCurrencyConversion_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_OrderCurrencyConversion_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("LightSwitchApplication.FK_OrderCurrencyConversion_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderCurrencyConversion_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderCurrencyConversion_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderCurrencyConversion_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderCurrencyConversion_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_OrderCurrencyConversion_Order", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderedItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderedItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderedItem object.
        /// </summary>
        /// <param name="orderedItemID">Initial value of the OrderedItemID property.</param>
        /// <param name="orderedQuantity">Initial value of the OrderedQuantity property.</param>
        /// <param name="productMaterialItemID">Initial value of the ProductMaterialItemID property.</param>
        /// <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
        public static OrderedItem CreateOrderedItem(global::System.Int64 orderedItemID, global::System.Decimal orderedQuantity, global::System.Int64 productMaterialItemID, global::System.Int64 purchaseOrderID)
        {
            OrderedItem orderedItem = new OrderedItem();
            orderedItem.OrderedItemID = orderedItemID;
            orderedItem.OrderedQuantity = orderedQuantity;
            orderedItem.ProductMaterialItemID = productMaterialItemID;
            orderedItem.PurchaseOrderID = purchaseOrderID;
            return orderedItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderedItemID
        {
            get
            {
                return _OrderedItemID;
            }
            set
            {
                if (_OrderedItemID != value)
                {
                    OnOrderedItemIDChanging(value);
                    ReportPropertyChanging("OrderedItemID");
                    _OrderedItemID = value;
                    ReportPropertyChanged("OrderedItemID");
                    OnOrderedItemIDChanged();
                }
            }
        }
        private global::System.Int64 _OrderedItemID;
        partial void OnOrderedItemIDChanging(global::System.Int64 value);
        partial void OnOrderedItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OrderedQuantity
        {
            get
            {
                return _OrderedQuantity;
            }
            set
            {
                OnOrderedQuantityChanging(value);
                ReportPropertyChanging("OrderedQuantity");
                _OrderedQuantity = value;
                ReportPropertyChanged("OrderedQuantity");
                OnOrderedQuantityChanged();
            }
        }
        private global::System.Decimal _OrderedQuantity;
        partial void OnOrderedQuantityChanging(global::System.Decimal value);
        partial void OnOrderedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExcessiveQuantity
        {
            get
            {
                return _ExcessiveQuantity;
            }
            set
            {
                OnExcessiveQuantityChanging(value);
                ReportPropertyChanging("ExcessiveQuantity");
                _ExcessiveQuantity = value;
                ReportPropertyChanged("ExcessiveQuantity");
                OnExcessiveQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExcessiveQuantity;
        partial void OnExcessiveQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnExcessiveQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PendingQuantity
        {
            get
            {
                return _PendingQuantity;
            }
            set
            {
                OnPendingQuantityChanging(value);
                ReportPropertyChanging("PendingQuantity");
                _PendingQuantity = value;
                ReportPropertyChanged("PendingQuantity");
                OnPendingQuantityChanged();
            }
        }
        private Nullable<global::System.Decimal> _PendingQuantity;
        partial void OnPendingQuantityChanging(Nullable<global::System.Decimal> value);
        partial void OnPendingQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxInINRPerUnit
        {
            get
            {
                return _TaxInINRPerUnit;
            }
            set
            {
                OnTaxInINRPerUnitChanging(value);
                ReportPropertyChanging("TaxInINRPerUnit");
                _TaxInINRPerUnit = value;
                ReportPropertyChanged("TaxInINRPerUnit");
                OnTaxInINRPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxInINRPerUnit;
        partial void OnTaxInINRPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxInINRPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CostPerUnit
        {
            get
            {
                return _CostPerUnit;
            }
            set
            {
                OnCostPerUnitChanging(value);
                ReportPropertyChanging("CostPerUnit");
                _CostPerUnit = value;
                ReportPropertyChanged("CostPerUnit");
                OnCostPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _CostPerUnit;
        partial void OnCostPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnCostPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalCost
        {
            get
            {
                return _TotalCost;
            }
            set
            {
                OnTotalCostChanging(value);
                ReportPropertyChanging("TotalCost");
                _TotalCost = value;
                ReportPropertyChanged("TotalCost");
                OnTotalCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalCost;
        partial void OnTotalCostChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductMaterialItemID
        {
            get
            {
                return _ProductMaterialItemID;
            }
            set
            {
                OnProductMaterialItemIDChanging(value);
                ReportPropertyChanging("ProductMaterialItemID");
                _ProductMaterialItemID = value;
                ReportPropertyChanged("ProductMaterialItemID");
                OnProductMaterialItemIDChanged();
            }
        }
        private global::System.Int64 _ProductMaterialItemID;
        partial void OnProductMaterialItemIDChanging(global::System.Int64 value);
        partial void OnProductMaterialItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                OnPurchaseOrderIDChanging(value);
                ReportPropertyChanging("PurchaseOrderID");
                _PurchaseOrderID = value;
                ReportPropertyChanged("PurchaseOrderID");
                OnPurchaseOrderIDChanged();
            }
        }
        private global::System.Int64 _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(global::System.Int64 value);
        partial void OnPurchaseOrderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_GRNReciept_OrderedItem", "GRNReciept")]
        public EntityCollection<GRNReciept> GRNReciepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GRNReciept>("LightSwitchApplication.FK_GRNReciept_OrderedItem", "GRNReciept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GRNReciept>("LightSwitchApplication.FK_GRNReciept_OrderedItem", "GRNReciept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderedItem_ProductMaterialItem", "ProductMaterialItem")]
        public ProductMaterialItem ProductMaterialItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductMaterialItem>("LightSwitchApplication.FK_OrderedItem_ProductMaterialItem", "ProductMaterialItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductMaterialItem>("LightSwitchApplication.FK_OrderedItem_ProductMaterialItem", "ProductMaterialItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductMaterialItem> ProductMaterialItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductMaterialItem>("LightSwitchApplication.FK_OrderedItem_ProductMaterialItem", "ProductMaterialItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductMaterialItem>("LightSwitchApplication.FK_OrderedItem_ProductMaterialItem", "ProductMaterialItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderedItem_PurchaseOrders", "PurchaseOrders")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_OrderedItem_PurchaseOrders", "PurchaseOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_OrderedItem_PurchaseOrders", "PurchaseOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_OrderedItem_PurchaseOrders", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_OrderedItem_PurchaseOrders", "PurchaseOrders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderProduct object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="expectedQuantity">Initial value of the ExpectedQuantity property.</param>
        /// <param name="customerTargetPrice">Initial value of the CustomerTargetPrice property.</param>
        /// <param name="orderValue">Initial value of the OrderValue property.</param>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="productNameID">Initial value of the ProductNameID property.</param>
        /// <param name="uOMID">Initial value of the UOMID property.</param>
        public static OrderProduct CreateOrderProduct(global::System.Int64 productID, global::System.Decimal expectedQuantity, global::System.Decimal customerTargetPrice, global::System.Decimal orderValue, global::System.Int16 currencyID, global::System.Int64 orderID, global::System.Int64 productNameID, global::System.Int16 uOMID)
        {
            OrderProduct orderProduct = new OrderProduct();
            orderProduct.ProductID = productID;
            orderProduct.ExpectedQuantity = expectedQuantity;
            orderProduct.CustomerTargetPrice = customerTargetPrice;
            orderProduct.OrderValue = orderValue;
            orderProduct.CurrencyID = currencyID;
            orderProduct.OrderID = orderID;
            orderProduct.ProductNameID = productNameID;
            orderProduct.UOMID = uOMID;
            return orderProduct;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = value;
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductID;
        partial void OnProductIDChanging(global::System.Int64 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExpectedQuantity
        {
            get
            {
                return _ExpectedQuantity;
            }
            set
            {
                OnExpectedQuantityChanging(value);
                ReportPropertyChanging("ExpectedQuantity");
                _ExpectedQuantity = value;
                ReportPropertyChanged("ExpectedQuantity");
                OnExpectedQuantityChanged();
            }
        }
        private global::System.Decimal _ExpectedQuantity;
        partial void OnExpectedQuantityChanging(global::System.Decimal value);
        partial void OnExpectedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CustomerTargetPrice
        {
            get
            {
                return _CustomerTargetPrice;
            }
            set
            {
                OnCustomerTargetPriceChanging(value);
                ReportPropertyChanging("CustomerTargetPrice");
                _CustomerTargetPrice = value;
                ReportPropertyChanged("CustomerTargetPrice");
                OnCustomerTargetPriceChanged();
            }
        }
        private global::System.Decimal _CustomerTargetPrice;
        partial void OnCustomerTargetPriceChanging(global::System.Decimal value);
        partial void OnCustomerTargetPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OrderValue
        {
            get
            {
                return _OrderValue;
            }
            set
            {
                OnOrderValueChanging(value);
                ReportPropertyChanging("OrderValue");
                _OrderValue = value;
                ReportPropertyChanged("OrderValue");
                OnOrderValueChanged();
            }
        }
        private global::System.Decimal _OrderValue;
        partial void OnOrderValueChanging(global::System.Decimal value);
        partial void OnOrderValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalConsumptionCost
        {
            get
            {
                return _TotalConsumptionCost;
            }
            set
            {
                OnTotalConsumptionCostChanging(value);
                ReportPropertyChanging("TotalConsumptionCost");
                _TotalConsumptionCost = value;
                ReportPropertyChanged("TotalConsumptionCost");
                OnTotalConsumptionCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalConsumptionCost;
        partial void OnTotalConsumptionCostChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalConsumptionCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ApprovalID
        {
            get
            {
                return _ApprovalID;
            }
            set
            {
                OnApprovalIDChanging(value);
                ReportPropertyChanging("ApprovalID");
                _ApprovalID = value;
                ReportPropertyChanged("ApprovalID");
                OnApprovalIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ApprovalID;
        partial void OnApprovalIDChanging(Nullable<global::System.Int64> value);
        partial void OnApprovalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = value;
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private global::System.Int16 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int16 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProductBreakUpID
        {
            get
            {
                return _ProductBreakUpID;
            }
            set
            {
                OnProductBreakUpIDChanging(value);
                ReportPropertyChanging("ProductBreakUpID");
                _ProductBreakUpID = value;
                ReportPropertyChanged("ProductBreakUpID");
                OnProductBreakUpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ProductBreakUpID;
        partial void OnProductBreakUpIDChanging(Nullable<global::System.Int64> value);
        partial void OnProductBreakUpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductNameID
        {
            get
            {
                return _ProductNameID;
            }
            set
            {
                OnProductNameIDChanging(value);
                ReportPropertyChanging("ProductNameID");
                _ProductNameID = value;
                ReportPropertyChanged("ProductNameID");
                OnProductNameIDChanged();
            }
        }
        private global::System.Int64 _ProductNameID;
        partial void OnProductNameIDChanging(global::System.Int64 value);
        partial void OnProductNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                OnUOMIDChanging(value);
                ReportPropertyChanging("UOMID");
                _UOMID = value;
                ReportPropertyChanged("UOMID");
                OnUOMIDChanged();
            }
        }
        private global::System.Int16 _UOMID;
        partial void OnUOMIDChanging(global::System.Int16 value);
        partial void OnUOMIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_Approval", "Approval")]
        public Approval Approval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_OrderProduct_Approval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_OrderProduct_Approval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> ApprovalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_OrderProduct_Approval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("LightSwitchApplication.FK_OrderProduct_Approval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_OrderProduct_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_OrderProduct_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_OrderProduct_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("LightSwitchApplication.FK_OrderProduct_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderProduct_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderProduct_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderProduct_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_OrderProduct_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_ProductBreakUp", "ProductBreakUp")]
        public ProductBreakUp ProductBreakUp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_OrderProduct_ProductBreakUp", "ProductBreakUp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_OrderProduct_ProductBreakUp", "ProductBreakUp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBreakUp> ProductBreakUpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_OrderProduct_ProductBreakUp", "ProductBreakUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_OrderProduct_ProductBreakUp", "ProductBreakUp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_ProductName", "ProductName")]
        public ProductName ProductName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductName>("LightSwitchApplication.FK_OrderProduct_ProductName", "ProductName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductName>("LightSwitchApplication.FK_OrderProduct_ProductName", "ProductName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductName> ProductNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductName>("LightSwitchApplication.FK_OrderProduct_ProductName", "ProductName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductName>("LightSwitchApplication.FK_OrderProduct_ProductName", "ProductName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_UnitsOfMeasurement", "UnitsOfMeasurement")]
        public UnitsOfMeasurement UnitsOfMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_OrderProduct_UnitsOfMeasurement", "UnitsOfMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_OrderProduct_UnitsOfMeasurement", "UnitsOfMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitsOfMeasurement> UnitsOfMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_OrderProduct_UnitsOfMeasurement", "UnitsOfMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_OrderProduct_UnitsOfMeasurement", "UnitsOfMeasurement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_OrderProduct", "ProductBreakUpSummary")]
        public EntityCollection<ProductBreakUpSummary> ProductBreakUpSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductBreakUpSummary_OrderProduct", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductBreakUpSummary_OrderProduct", "ProductBreakUpSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductExtraCost_OrderProduct", "ProductExtraCost")]
        public EntityCollection<ProductExtraCost> ProductExtraCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductExtraCost>("LightSwitchApplication.FK_ProductExtraCost_OrderProduct", "ProductExtraCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductExtraCost>("LightSwitchApplication.FK_ProductExtraCost_OrderProduct", "ProductExtraCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_OrderProduct", "ProductMaterials")]
        public EntityCollection<ProductMaterial> ProductMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_OrderProduct", "ProductMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_OrderProduct", "ProductMaterials", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderReportCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderReportCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderReportCard object.
        /// </summary>
        /// <param name="orderReportCardID">Initial value of the OrderReportCardID property.</param>
        /// <param name="progressPercentage">Initial value of the ProgressPercentage property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="orderReportCardTypeID">Initial value of the OrderReportCardTypeID property.</param>
        public static OrderReportCard CreateOrderReportCard(global::System.Int64 orderReportCardID, global::System.Decimal progressPercentage, global::System.Int64 orderID, global::System.Byte orderReportCardTypeID)
        {
            OrderReportCard orderReportCard = new OrderReportCard();
            orderReportCard.OrderReportCardID = orderReportCardID;
            orderReportCard.ProgressPercentage = progressPercentage;
            orderReportCard.OrderID = orderID;
            orderReportCard.OrderReportCardTypeID = orderReportCardTypeID;
            return orderReportCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderReportCardID
        {
            get
            {
                return _OrderReportCardID;
            }
            set
            {
                if (_OrderReportCardID != value)
                {
                    OnOrderReportCardIDChanging(value);
                    ReportPropertyChanging("OrderReportCardID");
                    _OrderReportCardID = value;
                    ReportPropertyChanged("OrderReportCardID");
                    OnOrderReportCardIDChanged();
                }
            }
        }
        private global::System.Int64 _OrderReportCardID;
        partial void OnOrderReportCardIDChanging(global::System.Int64 value);
        partial void OnOrderReportCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ProgressPercentage
        {
            get
            {
                return _ProgressPercentage;
            }
            set
            {
                OnProgressPercentageChanging(value);
                ReportPropertyChanging("ProgressPercentage");
                _ProgressPercentage = value;
                ReportPropertyChanged("ProgressPercentage");
                OnProgressPercentageChanged();
            }
        }
        private global::System.Decimal _ProgressPercentage;
        partial void OnProgressPercentageChanging(global::System.Decimal value);
        partial void OnProgressPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequiredFinishDate
        {
            get
            {
                return _RequiredFinishDate;
            }
            set
            {
                OnRequiredFinishDateChanging(value);
                ReportPropertyChanging("RequiredFinishDate");
                _RequiredFinishDate = value;
                ReportPropertyChanged("RequiredFinishDate");
                OnRequiredFinishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequiredFinishDate;
        partial void OnRequiredFinishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequiredFinishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OrderReportCardTypeID
        {
            get
            {
                return _OrderReportCardTypeID;
            }
            set
            {
                OnOrderReportCardTypeIDChanging(value);
                ReportPropertyChanging("OrderReportCardTypeID");
                _OrderReportCardTypeID = value;
                ReportPropertyChanged("OrderReportCardTypeID");
                OnOrderReportCardTypeIDChanged();
            }
        }
        private global::System.Byte _OrderReportCardTypeID;
        partial void OnOrderReportCardTypeIDChanging(global::System.Byte value);
        partial void OnOrderReportCardTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderReportCard_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderReportCard_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderReportCard_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_OrderReportCard_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_OrderReportCard_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderReportCard_OrderReportCardType", "OrderReportCardType")]
        public OrderReportCardType OrderReportCardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderReportCardType>("LightSwitchApplication.FK_OrderReportCard_OrderReportCardType", "OrderReportCardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderReportCardType>("LightSwitchApplication.FK_OrderReportCard_OrderReportCardType", "OrderReportCardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderReportCardType> OrderReportCardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderReportCardType>("LightSwitchApplication.FK_OrderReportCard_OrderReportCardType", "OrderReportCardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderReportCardType>("LightSwitchApplication.FK_OrderReportCard_OrderReportCardType", "OrderReportCardType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderReportCardType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderReportCardType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderReportCardType object.
        /// </summary>
        /// <param name="orderReportCardTypeID">Initial value of the OrderReportCardTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static OrderReportCardType CreateOrderReportCardType(global::System.Byte orderReportCardTypeID, global::System.String type)
        {
            OrderReportCardType orderReportCardType = new OrderReportCardType();
            orderReportCardType.OrderReportCardTypeID = orderReportCardTypeID;
            orderReportCardType.Type = type;
            return orderReportCardType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OrderReportCardTypeID
        {
            get
            {
                return _OrderReportCardTypeID;
            }
            set
            {
                if (_OrderReportCardTypeID != value)
                {
                    OnOrderReportCardTypeIDChanging(value);
                    ReportPropertyChanging("OrderReportCardTypeID");
                    _OrderReportCardTypeID = value;
                    ReportPropertyChanged("OrderReportCardTypeID");
                    OnOrderReportCardTypeIDChanged();
                }
            }
        }
        private global::System.Byte _OrderReportCardTypeID;
        partial void OnOrderReportCardTypeIDChanging(global::System.Byte value);
        partial void OnOrderReportCardTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = value;
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderReportCard_OrderReportCardType", "OrderReportCard")]
        public EntityCollection<OrderReportCard> OrderReportCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderReportCard>("LightSwitchApplication.FK_OrderReportCard_OrderReportCardType", "OrderReportCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderReportCard>("LightSwitchApplication.FK_OrderReportCard_OrderReportCardType", "OrderReportCard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderStatu object.
        /// </summary>
        /// <param name="orderStatusID">Initial value of the OrderStatusID property.</param>
        /// <param name="statusLabel">Initial value of the StatusLabel property.</param>
        public static OrderStatu CreateOrderStatu(global::System.Int16 orderStatusID, global::System.String statusLabel)
        {
            OrderStatu orderStatu = new OrderStatu();
            orderStatu.OrderStatusID = orderStatusID;
            orderStatu.StatusLabel = statusLabel;
            return orderStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OrderStatusID
        {
            get
            {
                return _OrderStatusID;
            }
            set
            {
                if (_OrderStatusID != value)
                {
                    OnOrderStatusIDChanging(value);
                    ReportPropertyChanging("OrderStatusID");
                    _OrderStatusID = value;
                    ReportPropertyChanged("OrderStatusID");
                    OnOrderStatusIDChanged();
                }
            }
        }
        private global::System.Int16 _OrderStatusID;
        partial void OnOrderStatusIDChanging(global::System.Int16 value);
        partial void OnOrderStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusLabel
        {
            get
            {
                return _StatusLabel;
            }
            set
            {
                OnStatusLabelChanging(value);
                ReportPropertyChanging("StatusLabel");
                _StatusLabel = value;
                ReportPropertyChanged("StatusLabel");
                OnStatusLabelChanged();
            }
        }
        private global::System.String _StatusLabel;
        partial void OnStatusLabelChanging(global::System.String value);
        partial void OnStatusLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayLabel
        {
            get
            {
                return _DisplayLabel;
            }
            set
            {
                OnDisplayLabelChanging(value);
                ReportPropertyChanging("DisplayLabel");
                _DisplayLabel = value;
                ReportPropertyChanged("DisplayLabel");
                OnDisplayLabelChanged();
            }
        }
        private global::System.String _DisplayLabel;
        partial void OnDisplayLabelChanging(global::System.String value);
        partial void OnDisplayLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> NextUserRoleID
        {
            get
            {
                return _NextUserRoleID;
            }
            set
            {
                OnNextUserRoleIDChanging(value);
                ReportPropertyChanging("NextUserRoleID");
                _NextUserRoleID = value;
                ReportPropertyChanged("NextUserRoleID");
                OnNextUserRoleIDChanged();
            }
        }
        private Nullable<global::System.Int16> _NextUserRoleID;
        partial void OnNextUserRoleIDChanging(Nullable<global::System.Int16> value);
        partial void OnNextUserRoleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_OrderStatus", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Order_OrderStatus", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Order_OrderStatus", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderStatus_UserRole", "UserRole")]
        public UserRole UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("LightSwitchApplication.FK_OrderStatus_UserRole", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("LightSwitchApplication.FK_OrderStatus_UserRole", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("LightSwitchApplication.FK_OrderStatus_UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("LightSwitchApplication.FK_OrderStatus_UserRole", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="OrderThrough")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderThrough : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderThrough object.
        /// </summary>
        /// <param name="orderThroughID">Initial value of the OrderThroughID property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        public static OrderThrough CreateOrderThrough(global::System.Byte orderThroughID, global::System.String mode)
        {
            OrderThrough orderThrough = new OrderThrough();
            orderThrough.OrderThroughID = orderThroughID;
            orderThrough.Mode = mode;
            return orderThrough;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OrderThroughID
        {
            get
            {
                return _OrderThroughID;
            }
            set
            {
                if (_OrderThroughID != value)
                {
                    OnOrderThroughIDChanging(value);
                    ReportPropertyChanging("OrderThroughID");
                    _OrderThroughID = value;
                    ReportPropertyChanged("OrderThroughID");
                    OnOrderThroughIDChanged();
                }
            }
        }
        private global::System.Byte _OrderThroughID;
        partial void OnOrderThroughIDChanging(global::System.Byte value);
        partial void OnOrderThroughIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = value;
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.String _Mode;
        partial void OnModeChanging(global::System.String value);
        partial void OnModeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Order_OrderThrough", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("LightSwitchApplication.FK_Order_OrderThrough", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("LightSwitchApplication.FK_Order_OrderThrough", "Order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Package")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Package : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Package object.
        /// </summary>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="packed">Initial value of the Packed property.</param>
        /// <param name="pending">Initial value of the Pending property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="productBreakUpSummaryID">Initial value of the ProductBreakUpSummaryID property.</param>
        public static Package CreatePackage(global::System.Int64 packageID, global::System.Decimal packed, global::System.Decimal pending, global::System.DateTime c_Date, global::System.Int64 productBreakUpSummaryID)
        {
            Package package = new Package();
            package.PackageID = packageID;
            package.Packed = packed;
            package.Pending = pending;
            package.c_Date = c_Date;
            package.ProductBreakUpSummaryID = productBreakUpSummaryID;
            return package;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                if (_PackageID != value)
                {
                    OnPackageIDChanging(value);
                    ReportPropertyChanging("PackageID");
                    _PackageID = value;
                    ReportPropertyChanged("PackageID");
                    OnPackageIDChanged();
                }
            }
        }
        private global::System.Int64 _PackageID;
        partial void OnPackageIDChanging(global::System.Int64 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Packed
        {
            get
            {
                return _Packed;
            }
            set
            {
                OnPackedChanging(value);
                ReportPropertyChanging("Packed");
                _Packed = value;
                ReportPropertyChanged("Packed");
                OnPackedChanged();
            }
        }
        private global::System.Decimal _Packed;
        partial void OnPackedChanging(global::System.Decimal value);
        partial void OnPackedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Pending
        {
            get
            {
                return _Pending;
            }
            set
            {
                OnPendingChanging(value);
                ReportPropertyChanging("Pending");
                _Pending = value;
                ReportPropertyChanged("Pending");
                OnPendingChanged();
            }
        }
        private global::System.Decimal _Pending;
        partial void OnPendingChanging(global::System.Decimal value);
        partial void OnPendingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExcessToStock
        {
            get
            {
                return _ExcessToStock;
            }
            set
            {
                OnExcessToStockChanging(value);
                ReportPropertyChanging("ExcessToStock");
                _ExcessToStock = value;
                ReportPropertyChanged("ExcessToStock");
                OnExcessToStockChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExcessToStock;
        partial void OnExcessToStockChanging(Nullable<global::System.Decimal> value);
        partial void OnExcessToStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CartonBoxID
        {
            get
            {
                return _CartonBoxID;
            }
            set
            {
                OnCartonBoxIDChanging(value);
                ReportPropertyChanging("CartonBoxID");
                _CartonBoxID = value;
                ReportPropertyChanged("CartonBoxID");
                OnCartonBoxIDChanged();
            }
        }
        private Nullable<global::System.Int64> _CartonBoxID;
        partial void OnCartonBoxIDChanging(Nullable<global::System.Int64> value);
        partial void OnCartonBoxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpSummaryID
        {
            get
            {
                return _ProductBreakUpSummaryID;
            }
            set
            {
                OnProductBreakUpSummaryIDChanging(value);
                ReportPropertyChanging("ProductBreakUpSummaryID");
                _ProductBreakUpSummaryID = value;
                ReportPropertyChanged("ProductBreakUpSummaryID");
                OnProductBreakUpSummaryIDChanged();
            }
        }
        private global::System.Int64 _ProductBreakUpSummaryID;
        partial void OnProductBreakUpSummaryIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpSummaryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Package_CartonBox", "CartonBox")]
        public CartonBox CartonBox
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CartonBox>("LightSwitchApplication.FK_Package_CartonBox", "CartonBox").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CartonBox>("LightSwitchApplication.FK_Package_CartonBox", "CartonBox").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CartonBox> CartonBoxReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CartonBox>("LightSwitchApplication.FK_Package_CartonBox", "CartonBox");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CartonBox>("LightSwitchApplication.FK_Package_CartonBox", "CartonBox", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Package_ProductBreakUpSummary", "ProductBreakUpSummary")]
        public ProductBreakUpSummary ProductBreakUpSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Package_ProductBreakUpSummary", "ProductBreakUpSummary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Package_ProductBreakUpSummary", "ProductBreakUpSummary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBreakUpSummary> ProductBreakUpSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Package_ProductBreakUpSummary", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Package_ProductBreakUpSummary", "ProductBreakUpSummary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductBreakUp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductBreakUp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductBreakUp object.
        /// </summary>
        /// <param name="productBreakUpID">Initial value of the ProductBreakUpID property.</param>
        /// <param name="tolerance">Initial value of the Tolerance property.</param>
        /// <param name="shipmentModeID">Initial value of the ShipmentModeID property.</param>
        public static ProductBreakUp CreateProductBreakUp(global::System.Int64 productBreakUpID, global::System.Double tolerance, global::System.Byte shipmentModeID)
        {
            ProductBreakUp productBreakUp = new ProductBreakUp();
            productBreakUp.ProductBreakUpID = productBreakUpID;
            productBreakUp.Tolerance = tolerance;
            productBreakUp.ShipmentModeID = shipmentModeID;
            return productBreakUp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpID
        {
            get
            {
                return _ProductBreakUpID;
            }
            set
            {
                if (_ProductBreakUpID != value)
                {
                    OnProductBreakUpIDChanging(value);
                    ReportPropertyChanging("ProductBreakUpID");
                    _ProductBreakUpID = value;
                    ReportPropertyChanged("ProductBreakUpID");
                    OnProductBreakUpIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductBreakUpID;
        partial void OnProductBreakUpIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Tolerance
        {
            get
            {
                return _Tolerance;
            }
            set
            {
                OnToleranceChanging(value);
                ReportPropertyChanging("Tolerance");
                _Tolerance = value;
                ReportPropertyChanged("Tolerance");
                OnToleranceChanged();
            }
        }
        private global::System.Double _Tolerance;
        partial void OnToleranceChanging(global::System.Double value);
        partial void OnToleranceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PriceTerms
        {
            get
            {
                return _PriceTerms;
            }
            set
            {
                OnPriceTermsChanging(value);
                ReportPropertyChanging("PriceTerms");
                _PriceTerms = value;
                ReportPropertyChanged("PriceTerms");
                OnPriceTermsChanged();
            }
        }
        private global::System.String _PriceTerms;
        partial void OnPriceTermsChanging(global::System.String value);
        partial void OnPriceTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentTerms
        {
            get
            {
                return _PaymentTerms;
            }
            set
            {
                OnPaymentTermsChanging(value);
                ReportPropertyChanging("PaymentTerms");
                _PaymentTerms = value;
                ReportPropertyChanged("PaymentTerms");
                OnPaymentTermsChanged();
            }
        }
        private global::System.String _PaymentTerms;
        partial void OnPaymentTermsChanging(global::System.String value);
        partial void OnPaymentTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentsRequired
        {
            get
            {
                return _DocumentsRequired;
            }
            set
            {
                OnDocumentsRequiredChanging(value);
                ReportPropertyChanging("DocumentsRequired");
                _DocumentsRequired = value;
                ReportPropertyChanged("DocumentsRequired");
                OnDocumentsRequiredChanged();
            }
        }
        private global::System.String _DocumentsRequired;
        partial void OnDocumentsRequiredChanging(global::System.String value);
        partial void OnDocumentsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ShipmentModeID
        {
            get
            {
                return _ShipmentModeID;
            }
            set
            {
                OnShipmentModeIDChanging(value);
                ReportPropertyChanging("ShipmentModeID");
                _ShipmentModeID = value;
                ReportPropertyChanged("ShipmentModeID");
                OnShipmentModeIDChanged();
            }
        }
        private global::System.Byte _ShipmentModeID;
        partial void OnShipmentModeIDChanging(global::System.Byte value);
        partial void OnShipmentModeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_ProductBreakUp", "OrderProduct")]
        public EntityCollection<OrderProduct> OrderProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_ProductBreakUp", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_ProductBreakUp", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUp_ShipmentMode", "ShipmentMode")]
        public ShipmentMode ShipmentMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShipmentMode>("LightSwitchApplication.FK_ProductBreakUp_ShipmentMode", "ShipmentMode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShipmentMode>("LightSwitchApplication.FK_ProductBreakUp_ShipmentMode", "ShipmentMode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShipmentMode> ShipmentModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShipmentMode>("LightSwitchApplication.FK_ProductBreakUp_ShipmentMode", "ShipmentMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShipmentMode>("LightSwitchApplication.FK_ProductBreakUp_ShipmentMode", "ShipmentMode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductCountryWiseBreakUp")]
        public EntityCollection<ProductCountryWiseBreakUp> ProductCountryWiseBreakUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductCountryWiseBreakUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductCountryWiseBreakUp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductBreakUpSummary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductBreakUpSummary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductBreakUpSummary object.
        /// </summary>
        /// <param name="productBreakUpSummaryID">Initial value of the ProductBreakUpSummaryID property.</param>
        /// <param name="numberOfPieces">Initial value of the NumberOfPieces property.</param>
        /// <param name="colorID">Initial value of the ColorID property.</param>
        /// <param name="productSizeID">Initial value of the ProductSizeID property.</param>
        public static ProductBreakUpSummary CreateProductBreakUpSummary(global::System.Int64 productBreakUpSummaryID, global::System.Decimal numberOfPieces, global::System.Int32 colorID, global::System.Int64 productSizeID)
        {
            ProductBreakUpSummary productBreakUpSummary = new ProductBreakUpSummary();
            productBreakUpSummary.ProductBreakUpSummaryID = productBreakUpSummaryID;
            productBreakUpSummary.NumberOfPieces = numberOfPieces;
            productBreakUpSummary.ColorID = colorID;
            productBreakUpSummary.ProductSizeID = productSizeID;
            return productBreakUpSummary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpSummaryID
        {
            get
            {
                return _ProductBreakUpSummaryID;
            }
            set
            {
                if (_ProductBreakUpSummaryID != value)
                {
                    OnProductBreakUpSummaryIDChanging(value);
                    ReportPropertyChanging("ProductBreakUpSummaryID");
                    _ProductBreakUpSummaryID = value;
                    ReportPropertyChanged("ProductBreakUpSummaryID");
                    OnProductBreakUpSummaryIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductBreakUpSummaryID;
        partial void OnProductBreakUpSummaryIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpSummaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumberOfPieces
        {
            get
            {
                return _NumberOfPieces;
            }
            set
            {
                OnNumberOfPiecesChanging(value);
                ReportPropertyChanging("NumberOfPieces");
                _NumberOfPieces = value;
                ReportPropertyChanged("NumberOfPieces");
                OnNumberOfPiecesChanged();
            }
        }
        private global::System.Decimal _NumberOfPieces;
        partial void OnNumberOfPiecesChanging(global::System.Decimal value);
        partial void OnNumberOfPiecesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                OnColorIDChanging(value);
                ReportPropertyChanging("ColorID");
                _ColorID = value;
                ReportPropertyChanged("ColorID");
                OnColorIDChanged();
            }
        }
        private global::System.Int32 _ColorID;
        partial void OnColorIDChanging(global::System.Int32 value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = value;
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Int64> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductSizeID
        {
            get
            {
                return _ProductSizeID;
            }
            set
            {
                OnProductSizeIDChanging(value);
                ReportPropertyChanging("ProductSizeID");
                _ProductSizeID = value;
                ReportPropertyChanged("ProductSizeID");
                OnProductSizeIDChanged();
            }
        }
        private global::System.Int64 _ProductSizeID;
        partial void OnProductSizeIDChanging(global::System.Int64 value);
        partial void OnProductSizeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Package_ProductBreakUpSummary", "Package")]
        public EntityCollection<Package> Packages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Package>("LightSwitchApplication.FK_Package_ProductBreakUpSummary", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Package>("LightSwitchApplication.FK_Package_ProductBreakUpSummary", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_Color", "Color")]
        public Color Color
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductBreakUpSummary_Color", "Color").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductBreakUpSummary_Color", "Color").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Color> ColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductBreakUpSummary_Color", "Color");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Color>("LightSwitchApplication.FK_ProductBreakUpSummary_Color", "Color", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_OrderProduct", "OrderProduct")]
        public OrderProduct OrderProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductBreakUpSummary_OrderProduct", "OrderProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductBreakUpSummary_OrderProduct", "OrderProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderProduct> OrderProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductBreakUpSummary_OrderProduct", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductBreakUpSummary_OrderProduct", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_ProductSize", "ProductSize")]
        public ProductSize ProductSize
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductBreakUpSummary_ProductSize", "ProductSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductBreakUpSummary_ProductSize", "ProductSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductSize> ProductSizeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductBreakUpSummary_ProductSize", "ProductSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductBreakUpSummary_ProductSize", "ProductSize", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCutting_ProductBreakUpSummary", "ProductCutting")]
        public EntityCollection<ProductCutting> ProductCuttings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCutting>("LightSwitchApplication.FK_ProductCutting_ProductBreakUpSummary", "ProductCutting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCutting>("LightSwitchApplication.FK_ProductCutting_ProductBreakUpSummary", "ProductCutting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Production_ProductBreakUpSummary", "Production")]
        public EntityCollection<Production> Productions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Production>("LightSwitchApplication.FK_Production_ProductBreakUpSummary", "Production");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Production>("LightSwitchApplication.FK_Production_ProductBreakUpSummary", "Production", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Quality_ProductBreakUpSummary", "Quality")]
        public EntityCollection<Quality> Qualities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quality>("LightSwitchApplication.FK_Quality_ProductBreakUpSummary", "Quality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quality>("LightSwitchApplication.FK_Quality_ProductBreakUpSummary", "Quality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Shipment_ProductBreakUpSummary", "Shipment")]
        public EntityCollection<Shipment> Shipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shipment>("LightSwitchApplication.FK_Shipment_ProductBreakUpSummary", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shipment>("LightSwitchApplication.FK_Shipment_ProductBreakUpSummary", "Shipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductCountryWiseBreakUp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCountryWiseBreakUp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCountryWiseBreakUp object.
        /// </summary>
        /// <param name="productCountryWiseBreakUpID">Initial value of the ProductCountryWiseBreakUpID property.</param>
        /// <param name="numberOfPieces">Initial value of the NumberOfPieces property.</param>
        /// <param name="colorID">Initial value of the ColorID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="productBreakUpID">Initial value of the ProductBreakUpID property.</param>
        /// <param name="productSizeID">Initial value of the ProductSizeID property.</param>
        public static ProductCountryWiseBreakUp CreateProductCountryWiseBreakUp(global::System.Int64 productCountryWiseBreakUpID, global::System.Decimal numberOfPieces, global::System.Int32 colorID, global::System.Int32 countryID, global::System.Int64 productBreakUpID, global::System.Int64 productSizeID)
        {
            ProductCountryWiseBreakUp productCountryWiseBreakUp = new ProductCountryWiseBreakUp();
            productCountryWiseBreakUp.ProductCountryWiseBreakUpID = productCountryWiseBreakUpID;
            productCountryWiseBreakUp.NumberOfPieces = numberOfPieces;
            productCountryWiseBreakUp.ColorID = colorID;
            productCountryWiseBreakUp.CountryID = countryID;
            productCountryWiseBreakUp.ProductBreakUpID = productBreakUpID;
            productCountryWiseBreakUp.ProductSizeID = productSizeID;
            return productCountryWiseBreakUp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductCountryWiseBreakUpID
        {
            get
            {
                return _ProductCountryWiseBreakUpID;
            }
            set
            {
                if (_ProductCountryWiseBreakUpID != value)
                {
                    OnProductCountryWiseBreakUpIDChanging(value);
                    ReportPropertyChanging("ProductCountryWiseBreakUpID");
                    _ProductCountryWiseBreakUpID = value;
                    ReportPropertyChanged("ProductCountryWiseBreakUpID");
                    OnProductCountryWiseBreakUpIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductCountryWiseBreakUpID;
        partial void OnProductCountryWiseBreakUpIDChanging(global::System.Int64 value);
        partial void OnProductCountryWiseBreakUpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NumberOfPieces
        {
            get
            {
                return _NumberOfPieces;
            }
            set
            {
                OnNumberOfPiecesChanging(value);
                ReportPropertyChanging("NumberOfPieces");
                _NumberOfPieces = value;
                ReportPropertyChanged("NumberOfPieces");
                OnNumberOfPiecesChanged();
            }
        }
        private global::System.Decimal _NumberOfPieces;
        partial void OnNumberOfPiecesChanging(global::System.Decimal value);
        partial void OnNumberOfPiecesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                OnColorIDChanging(value);
                ReportPropertyChanging("ColorID");
                _ColorID = value;
                ReportPropertyChanged("ColorID");
                OnColorIDChanged();
            }
        }
        private global::System.Int32 _ColorID;
        partial void OnColorIDChanging(global::System.Int32 value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = value;
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpID
        {
            get
            {
                return _ProductBreakUpID;
            }
            set
            {
                OnProductBreakUpIDChanging(value);
                ReportPropertyChanging("ProductBreakUpID");
                _ProductBreakUpID = value;
                ReportPropertyChanged("ProductBreakUpID");
                OnProductBreakUpIDChanged();
            }
        }
        private global::System.Int64 _ProductBreakUpID;
        partial void OnProductBreakUpIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductSizeID
        {
            get
            {
                return _ProductSizeID;
            }
            set
            {
                OnProductSizeIDChanging(value);
                ReportPropertyChanging("ProductSizeID");
                _ProductSizeID = value;
                ReportPropertyChanged("ProductSizeID");
                OnProductSizeIDChanged();
            }
        }
        private global::System.Int64 _ProductSizeID;
        partial void OnProductSizeIDChanging(global::System.Int64 value);
        partial void OnProductSizeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_Color", "Color")]
        public Color Color
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Color", "Color").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Color", "Color").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Color> ColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Color", "Color");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Color>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Color", "Color", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductBreakUp")]
        public ProductBreakUp ProductBreakUp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductBreakUp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductBreakUp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBreakUp> ProductBreakUpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductBreakUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductBreakUp", "ProductBreakUp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_ProductSize", "ProductSize")]
        public ProductSize ProductSize
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductSize", "ProductSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductSize", "ProductSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductSize> ProductSizeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductSize", "ProductSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductSize", "ProductSize", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductCutting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCutting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCutting object.
        /// </summary>
        /// <param name="cuttingID">Initial value of the CuttingID property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="cutQuantity">Initial value of the CutQuantity property.</param>
        /// <param name="pending">Initial value of the Pending property.</param>
        /// <param name="productBreakUpSummaryID">Initial value of the ProductBreakUpSummaryID property.</param>
        public static ProductCutting CreateProductCutting(global::System.Int64 cuttingID, global::System.DateTime c_Date, global::System.Decimal cutQuantity, global::System.Decimal pending, global::System.Int64 productBreakUpSummaryID)
        {
            ProductCutting productCutting = new ProductCutting();
            productCutting.CuttingID = cuttingID;
            productCutting.c_Date = c_Date;
            productCutting.CutQuantity = cutQuantity;
            productCutting.Pending = pending;
            productCutting.ProductBreakUpSummaryID = productBreakUpSummaryID;
            return productCutting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CuttingID
        {
            get
            {
                return _CuttingID;
            }
            set
            {
                if (_CuttingID != value)
                {
                    OnCuttingIDChanging(value);
                    ReportPropertyChanging("CuttingID");
                    _CuttingID = value;
                    ReportPropertyChanged("CuttingID");
                    OnCuttingIDChanged();
                }
            }
        }
        private global::System.Int64 _CuttingID;
        partial void OnCuttingIDChanging(global::System.Int64 value);
        partial void OnCuttingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CutQuantity
        {
            get
            {
                return _CutQuantity;
            }
            set
            {
                OnCutQuantityChanging(value);
                ReportPropertyChanging("CutQuantity");
                _CutQuantity = value;
                ReportPropertyChanged("CutQuantity");
                OnCutQuantityChanged();
            }
        }
        private global::System.Decimal _CutQuantity;
        partial void OnCutQuantityChanging(global::System.Decimal value);
        partial void OnCutQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Pending
        {
            get
            {
                return _Pending;
            }
            set
            {
                OnPendingChanging(value);
                ReportPropertyChanging("Pending");
                _Pending = value;
                ReportPropertyChanged("Pending");
                OnPendingChanged();
            }
        }
        private global::System.Decimal _Pending;
        partial void OnPendingChanging(global::System.Decimal value);
        partial void OnPendingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExcessToStock
        {
            get
            {
                return _ExcessToStock;
            }
            set
            {
                OnExcessToStockChanging(value);
                ReportPropertyChanging("ExcessToStock");
                _ExcessToStock = value;
                ReportPropertyChanged("ExcessToStock");
                OnExcessToStockChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExcessToStock;
        partial void OnExcessToStockChanging(Nullable<global::System.Decimal> value);
        partial void OnExcessToStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpSummaryID
        {
            get
            {
                return _ProductBreakUpSummaryID;
            }
            set
            {
                OnProductBreakUpSummaryIDChanging(value);
                ReportPropertyChanging("ProductBreakUpSummaryID");
                _ProductBreakUpSummaryID = value;
                ReportPropertyChanged("ProductBreakUpSummaryID");
                OnProductBreakUpSummaryIDChanged();
            }
        }
        private global::System.Int64 _ProductBreakUpSummaryID;
        partial void OnProductBreakUpSummaryIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpSummaryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCutting_ProductBreakUpSummary", "ProductBreakUpSummary")]
        public ProductBreakUpSummary ProductBreakUpSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductCutting_ProductBreakUpSummary", "ProductBreakUpSummary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductCutting_ProductBreakUpSummary", "ProductBreakUpSummary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBreakUpSummary> ProductBreakUpSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductCutting_ProductBreakUpSummary", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductCutting_ProductBreakUpSummary", "ProductBreakUpSummary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductExtraCost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductExtraCost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductExtraCost object.
        /// </summary>
        /// <param name="extraCostID">Initial value of the ExtraCostID property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="extraCostTypeID">Initial value of the ExtraCostTypeID property.</param>
        public static ProductExtraCost CreateProductExtraCost(global::System.Int64 extraCostID, global::System.Decimal cost, global::System.Int64 productID, global::System.Int16 extraCostTypeID)
        {
            ProductExtraCost productExtraCost = new ProductExtraCost();
            productExtraCost.ExtraCostID = extraCostID;
            productExtraCost.Cost = cost;
            productExtraCost.ProductID = productID;
            productExtraCost.ExtraCostTypeID = extraCostTypeID;
            return productExtraCost;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExtraCostID
        {
            get
            {
                return _ExtraCostID;
            }
            set
            {
                if (_ExtraCostID != value)
                {
                    OnExtraCostIDChanging(value);
                    ReportPropertyChanging("ExtraCostID");
                    _ExtraCostID = value;
                    ReportPropertyChanged("ExtraCostID");
                    OnExtraCostIDChanged();
                }
            }
        }
        private global::System.Int64 _ExtraCostID;
        partial void OnExtraCostIDChanging(global::System.Int64 value);
        partial void OnExtraCostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = value;
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = value;
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int16> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int16> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = value;
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int64 _ProductID;
        partial void OnProductIDChanging(global::System.Int64 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ExtraCostTypeID
        {
            get
            {
                return _ExtraCostTypeID;
            }
            set
            {
                OnExtraCostTypeIDChanging(value);
                ReportPropertyChanging("ExtraCostTypeID");
                _ExtraCostTypeID = value;
                ReportPropertyChanged("ExtraCostTypeID");
                OnExtraCostTypeIDChanged();
            }
        }
        private global::System.Int16 _ExtraCostTypeID;
        partial void OnExtraCostTypeIDChanging(global::System.Int16 value);
        partial void OnExtraCostTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductExtraCost_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductExtraCost_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductExtraCost_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductExtraCost_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("LightSwitchApplication.FK_ProductExtraCost_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductExtraCost_OrderProduct", "OrderProduct")]
        public OrderProduct OrderProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductExtraCost_OrderProduct", "OrderProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductExtraCost_OrderProduct", "OrderProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderProduct> OrderProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductExtraCost_OrderProduct", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductExtraCost_OrderProduct", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCostType")]
        public ProductExtraCostType ProductExtraCostType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductExtraCostType>("LightSwitchApplication.FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCostType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductExtraCostType>("LightSwitchApplication.FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCostType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductExtraCostType> ProductExtraCostTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductExtraCostType>("LightSwitchApplication.FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCostType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductExtraCostType>("LightSwitchApplication.FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCostType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductExtraCostType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductExtraCostType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductExtraCostType object.
        /// </summary>
        /// <param name="extraCostTypeID">Initial value of the ExtraCostTypeID property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static ProductExtraCostType CreateProductExtraCostType(global::System.Int16 extraCostTypeID, global::System.String typeName)
        {
            ProductExtraCostType productExtraCostType = new ProductExtraCostType();
            productExtraCostType.ExtraCostTypeID = extraCostTypeID;
            productExtraCostType.TypeName = typeName;
            return productExtraCostType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ExtraCostTypeID
        {
            get
            {
                return _ExtraCostTypeID;
            }
            set
            {
                if (_ExtraCostTypeID != value)
                {
                    OnExtraCostTypeIDChanging(value);
                    ReportPropertyChanging("ExtraCostTypeID");
                    _ExtraCostTypeID = value;
                    ReportPropertyChanged("ExtraCostTypeID");
                    OnExtraCostTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _ExtraCostTypeID;
        partial void OnExtraCostTypeIDChanging(global::System.Int16 value);
        partial void OnExtraCostTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = value;
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCost")]
        public EntityCollection<ProductExtraCost> ProductExtraCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductExtraCost>("LightSwitchApplication.FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductExtraCost>("LightSwitchApplication.FK_ProductExtraCost_ProductExtraCostType", "ProductExtraCost", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Production")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Production : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Production object.
        /// </summary>
        /// <param name="productionID">Initial value of the ProductionID property.</param>
        /// <param name="completedQuantity">Initial value of the CompletedQuantity property.</param>
        /// <param name="pending">Initial value of the Pending property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="productBreakUpSummaryID">Initial value of the ProductBreakUpSummaryID property.</param>
        public static Production CreateProduction(global::System.Int64 productionID, global::System.Decimal completedQuantity, global::System.Decimal pending, global::System.DateTime c_Date, global::System.Int64 productBreakUpSummaryID)
        {
            Production production = new Production();
            production.ProductionID = productionID;
            production.CompletedQuantity = completedQuantity;
            production.Pending = pending;
            production.c_Date = c_Date;
            production.ProductBreakUpSummaryID = productBreakUpSummaryID;
            return production;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductionID
        {
            get
            {
                return _ProductionID;
            }
            set
            {
                if (_ProductionID != value)
                {
                    OnProductionIDChanging(value);
                    ReportPropertyChanging("ProductionID");
                    _ProductionID = value;
                    ReportPropertyChanged("ProductionID");
                    OnProductionIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductionID;
        partial void OnProductionIDChanging(global::System.Int64 value);
        partial void OnProductionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CompletedQuantity
        {
            get
            {
                return _CompletedQuantity;
            }
            set
            {
                OnCompletedQuantityChanging(value);
                ReportPropertyChanging("CompletedQuantity");
                _CompletedQuantity = value;
                ReportPropertyChanged("CompletedQuantity");
                OnCompletedQuantityChanged();
            }
        }
        private global::System.Decimal _CompletedQuantity;
        partial void OnCompletedQuantityChanging(global::System.Decimal value);
        partial void OnCompletedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Pending
        {
            get
            {
                return _Pending;
            }
            set
            {
                OnPendingChanging(value);
                ReportPropertyChanging("Pending");
                _Pending = value;
                ReportPropertyChanged("Pending");
                OnPendingChanged();
            }
        }
        private global::System.Decimal _Pending;
        partial void OnPendingChanging(global::System.Decimal value);
        partial void OnPendingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpSummaryID
        {
            get
            {
                return _ProductBreakUpSummaryID;
            }
            set
            {
                OnProductBreakUpSummaryIDChanging(value);
                ReportPropertyChanging("ProductBreakUpSummaryID");
                _ProductBreakUpSummaryID = value;
                ReportPropertyChanged("ProductBreakUpSummaryID");
                OnProductBreakUpSummaryIDChanged();
            }
        }
        private global::System.Int64 _ProductBreakUpSummaryID;
        partial void OnProductBreakUpSummaryIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpSummaryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Production_ProductBreakUpSummary", "ProductBreakUpSummary")]
        public ProductBreakUpSummary ProductBreakUpSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Production_ProductBreakUpSummary", "ProductBreakUpSummary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Production_ProductBreakUpSummary", "ProductBreakUpSummary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBreakUpSummary> ProductBreakUpSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Production_ProductBreakUpSummary", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Production_ProductBreakUpSummary", "ProductBreakUpSummary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductMaterial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductMaterial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductMaterial object.
        /// </summary>
        /// <param name="materialID">Initial value of the MaterialID property.</param>
        /// <param name="materialNameID">Initial value of the MaterialNameID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        public static ProductMaterial CreateProductMaterial(global::System.Int64 materialID, global::System.Int32 materialNameID, global::System.Int64 productID)
        {
            ProductMaterial productMaterial = new ProductMaterial();
            productMaterial.MaterialID = materialID;
            productMaterial.MaterialNameID = materialNameID;
            productMaterial.ProductID = productID;
            return productMaterial;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MaterialID
        {
            get
            {
                return _MaterialID;
            }
            set
            {
                if (_MaterialID != value)
                {
                    OnMaterialIDChanging(value);
                    ReportPropertyChanging("MaterialID");
                    _MaterialID = value;
                    ReportPropertyChanged("MaterialID");
                    OnMaterialIDChanged();
                }
            }
        }
        private global::System.Int64 _MaterialID;
        partial void OnMaterialIDChanging(global::System.Int64 value);
        partial void OnMaterialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Consumption
        {
            get
            {
                return _Consumption;
            }
            set
            {
                OnConsumptionChanging(value);
                ReportPropertyChanging("Consumption");
                _Consumption = value;
                ReportPropertyChanged("Consumption");
                OnConsumptionChanged();
            }
        }
        private Nullable<global::System.Decimal> _Consumption;
        partial void OnConsumptionChanging(Nullable<global::System.Decimal> value);
        partial void OnConsumptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = value;
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cost;
        partial void OnCostChanging(Nullable<global::System.Decimal> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConsumptionCost
        {
            get
            {
                return _ConsumptionCost;
            }
            set
            {
                OnConsumptionCostChanging(value);
                ReportPropertyChanging("ConsumptionCost");
                _ConsumptionCost = value;
                ReportPropertyChanged("ConsumptionCost");
                OnConsumptionCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConsumptionCost;
        partial void OnConsumptionCostChanging(Nullable<global::System.Decimal> value);
        partial void OnConsumptionCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OtherCostInINR
        {
            get
            {
                return _OtherCostInINR;
            }
            set
            {
                OnOtherCostInINRChanging(value);
                ReportPropertyChanging("OtherCostInINR");
                _OtherCostInINR = value;
                ReportPropertyChanged("OtherCostInINR");
                OnOtherCostInINRChanged();
            }
        }
        private Nullable<global::System.Decimal> _OtherCostInINR;
        partial void OnOtherCostInINRChanging(Nullable<global::System.Decimal> value);
        partial void OnOtherCostInINRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherCostName
        {
            get
            {
                return _OtherCostName;
            }
            set
            {
                OnOtherCostNameChanging(value);
                ReportPropertyChanging("OtherCostName");
                _OtherCostName = value;
                ReportPropertyChanged("OtherCostName");
                OnOtherCostNameChanged();
            }
        }
        private global::System.String _OtherCostName;
        partial void OnOtherCostNameChanging(global::System.String value);
        partial void OnOtherCostNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ApprovalID
        {
            get
            {
                return _ApprovalID;
            }
            set
            {
                OnApprovalIDChanging(value);
                ReportPropertyChanging("ApprovalID");
                _ApprovalID = value;
                ReportPropertyChanged("ApprovalID");
                OnApprovalIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ApprovalID;
        partial void OnApprovalIDChanging(Nullable<global::System.Int64> value);
        partial void OnApprovalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = value;
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int16> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int16> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialNameID
        {
            get
            {
                return _MaterialNameID;
            }
            set
            {
                OnMaterialNameIDChanging(value);
                ReportPropertyChanging("MaterialNameID");
                _MaterialNameID = value;
                ReportPropertyChanged("MaterialNameID");
                OnMaterialNameIDChanged();
            }
        }
        private global::System.Int32 _MaterialNameID;
        partial void OnMaterialNameIDChanging(global::System.Int32 value);
        partial void OnMaterialNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = value;
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Int64 _ProductID;
        partial void OnProductIDChanging(global::System.Int64 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                OnUOMIDChanging(value);
                ReportPropertyChanging("UOMID");
                _UOMID = value;
                ReportPropertyChanged("UOMID");
                OnUOMIDChanged();
            }
        }
        private Nullable<global::System.Int16> _UOMID;
        partial void OnUOMIDChanging(Nullable<global::System.Int16> value);
        partial void OnUOMIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_ProductMaterials", "ProductMaterialItem")]
        public EntityCollection<ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_ProductMaterials", "ProductMaterialItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_ProductMaterials", "ProductMaterialItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_Approval", "Approval")]
        public Approval Approval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_ProductMaterials_Approval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_ProductMaterials_Approval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> ApprovalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_ProductMaterials_Approval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("LightSwitchApplication.FK_ProductMaterials_Approval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterials_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterials_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterials_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterials_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_MaterialName", "MaterialName")]
        public MaterialName MaterialName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialName>("LightSwitchApplication.FK_ProductMaterials_MaterialName", "MaterialName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialName>("LightSwitchApplication.FK_ProductMaterials_MaterialName", "MaterialName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialName> MaterialNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialName>("LightSwitchApplication.FK_ProductMaterials_MaterialName", "MaterialName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialName>("LightSwitchApplication.FK_ProductMaterials_MaterialName", "MaterialName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_OrderProduct", "OrderProduct")]
        public OrderProduct OrderProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductMaterials_OrderProduct", "OrderProduct").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductMaterials_OrderProduct", "OrderProduct").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderProduct> OrderProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductMaterials_OrderProduct", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderProduct>("LightSwitchApplication.FK_ProductMaterials_OrderProduct", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_UnitsOfMeasurement", "UnitsOfMeasurement")]
        public UnitsOfMeasurement UnitsOfMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterials_UnitsOfMeasurement", "UnitsOfMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterials_UnitsOfMeasurement", "UnitsOfMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitsOfMeasurement> UnitsOfMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterials_UnitsOfMeasurement", "UnitsOfMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterials_UnitsOfMeasurement", "UnitsOfMeasurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductMaterialItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductMaterialItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductMaterialItem object.
        /// </summary>
        /// <param name="productMaterialItemID">Initial value of the ProductMaterialItemID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="taxInINR">Initial value of the TaxInINR property.</param>
        /// <param name="materialID">Initial value of the MaterialID property.</param>
        /// <param name="subMaterialNameID">Initial value of the SubMaterialNameID property.</param>
        /// <param name="uOMID">Initial value of the UOMID property.</param>
        public static ProductMaterialItem CreateProductMaterialItem(global::System.Int64 productMaterialItemID, global::System.Decimal quantity, global::System.Decimal cost, global::System.Decimal taxInINR, global::System.Int64 materialID, global::System.Int64 subMaterialNameID, global::System.Int16 uOMID)
        {
            ProductMaterialItem productMaterialItem = new ProductMaterialItem();
            productMaterialItem.ProductMaterialItemID = productMaterialItemID;
            productMaterialItem.Quantity = quantity;
            productMaterialItem.Cost = cost;
            productMaterialItem.TaxInINR = taxInINR;
            productMaterialItem.MaterialID = materialID;
            productMaterialItem.SubMaterialNameID = subMaterialNameID;
            productMaterialItem.UOMID = uOMID;
            return productMaterialItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductMaterialItemID
        {
            get
            {
                return _ProductMaterialItemID;
            }
            set
            {
                if (_ProductMaterialItemID != value)
                {
                    OnProductMaterialItemIDChanging(value);
                    ReportPropertyChanging("ProductMaterialItemID");
                    _ProductMaterialItemID = value;
                    ReportPropertyChanged("ProductMaterialItemID");
                    OnProductMaterialItemIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductMaterialItemID;
        partial void OnProductMaterialItemIDChanging(global::System.Int64 value);
        partial void OnProductMaterialItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String c_Alias
        {
            get
            {
                return _c_Alias;
            }
            set
            {
                Onc_AliasChanging(value);
                ReportPropertyChanging("c_Alias");
                _c_Alias = value;
                ReportPropertyChanged("c_Alias");
                Onc_AliasChanged();
            }
        }
        private global::System.String _c_Alias;
        partial void Onc_AliasChanging(global::System.String value);
        partial void Onc_AliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = value;
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = value;
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Decimal _Cost;
        partial void OnCostChanging(global::System.Decimal value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPOGeneratedOn
        {
            get
            {
                return _LastPOGeneratedOn;
            }
            set
            {
                OnLastPOGeneratedOnChanging(value);
                ReportPropertyChanging("LastPOGeneratedOn");
                _LastPOGeneratedOn = value;
                ReportPropertyChanged("LastPOGeneratedOn");
                OnLastPOGeneratedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPOGeneratedOn;
        partial void OnLastPOGeneratedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPOGeneratedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TaxInINR
        {
            get
            {
                return _TaxInINR;
            }
            set
            {
                OnTaxInINRChanging(value);
                ReportPropertyChanging("TaxInINR");
                _TaxInINR = value;
                ReportPropertyChanged("TaxInINR");
                OnTaxInINRChanged();
            }
        }
        private global::System.Decimal _TaxInINR;
        partial void OnTaxInINRChanging(global::System.Decimal value);
        partial void OnTaxInINRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = value;
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int16> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int16> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MaterialID
        {
            get
            {
                return _MaterialID;
            }
            set
            {
                OnMaterialIDChanging(value);
                ReportPropertyChanging("MaterialID");
                _MaterialID = value;
                ReportPropertyChanged("MaterialID");
                OnMaterialIDChanged();
            }
        }
        private global::System.Int64 _MaterialID;
        partial void OnMaterialIDChanging(global::System.Int64 value);
        partial void OnMaterialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                OnPurchaseOrderIDChanging(value);
                ReportPropertyChanging("PurchaseOrderID");
                _PurchaseOrderID = value;
                ReportPropertyChanged("PurchaseOrderID");
                OnPurchaseOrderIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(Nullable<global::System.Int64> value);
        partial void OnPurchaseOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SubMaterialNameID
        {
            get
            {
                return _SubMaterialNameID;
            }
            set
            {
                OnSubMaterialNameIDChanging(value);
                ReportPropertyChanging("SubMaterialNameID");
                _SubMaterialNameID = value;
                ReportPropertyChanged("SubMaterialNameID");
                OnSubMaterialNameIDChanged();
            }
        }
        private global::System.Int64 _SubMaterialNameID;
        partial void OnSubMaterialNameIDChanging(global::System.Int64 value);
        partial void OnSubMaterialNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                OnUOMIDChanging(value);
                ReportPropertyChanging("UOMID");
                _UOMID = value;
                ReportPropertyChanged("UOMID");
                OnUOMIDChanged();
            }
        }
        private global::System.Int16 _UOMID;
        partial void OnUOMIDChanging(global::System.Int16 value);
        partial void OnUOMIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderedItem_ProductMaterialItem", "OrderedItem")]
        public EntityCollection<OrderedItem> OrderedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderedItem>("LightSwitchApplication.FK_OrderedItem_ProductMaterialItem", "OrderedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderedItem>("LightSwitchApplication.FK_OrderedItem_ProductMaterialItem", "OrderedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_ProductMaterialItem_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_ProductMaterialItem_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_ProductMaterialItem_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_ProductMaterialItem_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterialItem_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterialItem_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterialItem_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("LightSwitchApplication.FK_ProductMaterialItem_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_ProductMaterials", "ProductMaterials")]
        public ProductMaterial ProductMaterial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductMaterial>("LightSwitchApplication.FK_ProductMaterialItem_ProductMaterials", "ProductMaterials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductMaterial>("LightSwitchApplication.FK_ProductMaterialItem_ProductMaterials", "ProductMaterials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductMaterial> ProductMaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductMaterial>("LightSwitchApplication.FK_ProductMaterialItem_ProductMaterials", "ProductMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductMaterial>("LightSwitchApplication.FK_ProductMaterialItem_ProductMaterials", "ProductMaterials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_PurchaseOrders", "PurchaseOrders")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_ProductMaterialItem_PurchaseOrders", "PurchaseOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_ProductMaterialItem_PurchaseOrders", "PurchaseOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_ProductMaterialItem_PurchaseOrders", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("LightSwitchApplication.FK_ProductMaterialItem_PurchaseOrders", "PurchaseOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_SubMaterial", "SubMaterial")]
        public SubMaterial SubMaterial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubMaterial>("LightSwitchApplication.FK_ProductMaterialItem_SubMaterial", "SubMaterial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubMaterial>("LightSwitchApplication.FK_ProductMaterialItem_SubMaterial", "SubMaterial").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubMaterial> SubMaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubMaterial>("LightSwitchApplication.FK_ProductMaterialItem_SubMaterial", "SubMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubMaterial>("LightSwitchApplication.FK_ProductMaterialItem_SubMaterial", "SubMaterial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_UnitsOfMeasurement", "UnitsOfMeasurement")]
        public UnitsOfMeasurement UnitsOfMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterialItem_UnitsOfMeasurement", "UnitsOfMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterialItem_UnitsOfMeasurement", "UnitsOfMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitsOfMeasurement> UnitsOfMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterialItem_UnitsOfMeasurement", "UnitsOfMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_ProductMaterialItem_UnitsOfMeasurement", "UnitsOfMeasurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductName object.
        /// </summary>
        /// <param name="productNameID">Initial value of the ProductNameID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ProductName CreateProductName(global::System.Int64 productNameID, global::System.String name)
        {
            ProductName productName = new ProductName();
            productName.ProductNameID = productNameID;
            productName.Name = name;
            return productName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductNameID
        {
            get
            {
                return _ProductNameID;
            }
            set
            {
                if (_ProductNameID != value)
                {
                    OnProductNameIDChanging(value);
                    ReportPropertyChanging("ProductNameID");
                    _ProductNameID = value;
                    ReportPropertyChanged("ProductNameID");
                    OnProductNameIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductNameID;
        partial void OnProductNameIDChanging(global::System.Int64 value);
        partial void OnProductNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StyleID
        {
            get
            {
                return _StyleID;
            }
            set
            {
                OnStyleIDChanging(value);
                ReportPropertyChanging("StyleID");
                _StyleID = value;
                ReportPropertyChanged("StyleID");
                OnStyleIDChanged();
            }
        }
        private global::System.String _StyleID;
        partial void OnStyleIDChanging(global::System.String value);
        partial void OnStyleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_ProductName", "OrderProduct")]
        public EntityCollection<OrderProduct> OrderProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_ProductName", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_ProductName", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductStock_ProductName", "ProductStock")]
        public EntityCollection<ProductStock> ProductStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductStock>("LightSwitchApplication.FK_ProductStock_ProductName", "ProductStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductStock>("LightSwitchApplication.FK_ProductStock_ProductName", "ProductStock", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductSize")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductSize : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductSize object.
        /// </summary>
        /// <param name="productSizeID">Initial value of the ProductSizeID property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        public static ProductSize CreateProductSize(global::System.Int64 productSizeID, global::System.String size)
        {
            ProductSize productSize = new ProductSize();
            productSize.ProductSizeID = productSizeID;
            productSize.Size = size;
            return productSize;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductSizeID
        {
            get
            {
                return _ProductSizeID;
            }
            set
            {
                if (_ProductSizeID != value)
                {
                    OnProductSizeIDChanging(value);
                    ReportPropertyChanging("ProductSizeID");
                    _ProductSizeID = value;
                    ReportPropertyChanged("ProductSizeID");
                    OnProductSizeIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductSizeID;
        partial void OnProductSizeIDChanging(global::System.Int64 value);
        partial void OnProductSizeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = value;
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUpSummary_ProductSize", "ProductBreakUpSummary")]
        public EntityCollection<ProductBreakUpSummary> ProductBreakUpSummaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductBreakUpSummary_ProductSize", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductBreakUpSummary>("LightSwitchApplication.FK_ProductBreakUpSummary_ProductSize", "ProductBreakUpSummary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductCountryWiseBreakUp_ProductSize", "ProductCountryWiseBreakUp")]
        public EntityCollection<ProductCountryWiseBreakUp> ProductCountryWiseBreakUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductSize", "ProductCountryWiseBreakUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCountryWiseBreakUp>("LightSwitchApplication.FK_ProductCountryWiseBreakUp_ProductSize", "ProductCountryWiseBreakUp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductStock_ProductSize", "ProductStock")]
        public EntityCollection<ProductStock> ProductStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductStock>("LightSwitchApplication.FK_ProductStock_ProductSize", "ProductStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductStock>("LightSwitchApplication.FK_ProductStock_ProductSize", "ProductStock", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProductStock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductStock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductStock object.
        /// </summary>
        /// <param name="productStockID">Initial value of the ProductStockID property.</param>
        /// <param name="cutStock">Initial value of the CutStock property.</param>
        /// <param name="productStock1">Initial value of the ProductStock1 property.</param>
        /// <param name="colorID">Initial value of the ColorID property.</param>
        /// <param name="productNameID">Initial value of the ProductNameID property.</param>
        /// <param name="productSizeID">Initial value of the ProductSizeID property.</param>
        public static ProductStock CreateProductStock(global::System.Int64 productStockID, global::System.Decimal cutStock, global::System.Decimal productStock1, global::System.Int32 colorID, global::System.Int64 productNameID, global::System.Int64 productSizeID)
        {
            ProductStock productStock = new ProductStock();
            productStock.ProductStockID = productStockID;
            productStock.CutStock = cutStock;
            productStock.ProductStock1 = productStock1;
            productStock.ColorID = colorID;
            productStock.ProductNameID = productNameID;
            productStock.ProductSizeID = productSizeID;
            return productStock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductStockID
        {
            get
            {
                return _ProductStockID;
            }
            set
            {
                if (_ProductStockID != value)
                {
                    OnProductStockIDChanging(value);
                    ReportPropertyChanging("ProductStockID");
                    _ProductStockID = value;
                    ReportPropertyChanged("ProductStockID");
                    OnProductStockIDChanged();
                }
            }
        }
        private global::System.Int64 _ProductStockID;
        partial void OnProductStockIDChanging(global::System.Int64 value);
        partial void OnProductStockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CutStock
        {
            get
            {
                return _CutStock;
            }
            set
            {
                OnCutStockChanging(value);
                ReportPropertyChanging("CutStock");
                _CutStock = value;
                ReportPropertyChanged("CutStock");
                OnCutStockChanged();
            }
        }
        private global::System.Decimal _CutStock;
        partial void OnCutStockChanging(global::System.Decimal value);
        partial void OnCutStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ProductStock1
        {
            get
            {
                return _ProductStock1;
            }
            set
            {
                OnProductStock1Changing(value);
                ReportPropertyChanging("ProductStock1");
                _ProductStock1 = value;
                ReportPropertyChanged("ProductStock1");
                OnProductStock1Changed();
            }
        }
        private global::System.Decimal _ProductStock1;
        partial void OnProductStock1Changing(global::System.Decimal value);
        partial void OnProductStock1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                OnColorIDChanging(value);
                ReportPropertyChanging("ColorID");
                _ColorID = value;
                ReportPropertyChanged("ColorID");
                OnColorIDChanged();
            }
        }
        private global::System.Int32 _ColorID;
        partial void OnColorIDChanging(global::System.Int32 value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductNameID
        {
            get
            {
                return _ProductNameID;
            }
            set
            {
                OnProductNameIDChanging(value);
                ReportPropertyChanging("ProductNameID");
                _ProductNameID = value;
                ReportPropertyChanged("ProductNameID");
                OnProductNameIDChanged();
            }
        }
        private global::System.Int64 _ProductNameID;
        partial void OnProductNameIDChanging(global::System.Int64 value);
        partial void OnProductNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductSizeID
        {
            get
            {
                return _ProductSizeID;
            }
            set
            {
                OnProductSizeIDChanging(value);
                ReportPropertyChanging("ProductSizeID");
                _ProductSizeID = value;
                ReportPropertyChanged("ProductSizeID");
                OnProductSizeIDChanged();
            }
        }
        private global::System.Int64 _ProductSizeID;
        partial void OnProductSizeIDChanging(global::System.Int64 value);
        partial void OnProductSizeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductStock_Color", "Color")]
        public Color Color
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductStock_Color", "Color").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductStock_Color", "Color").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Color> ColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("LightSwitchApplication.FK_ProductStock_Color", "Color");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Color>("LightSwitchApplication.FK_ProductStock_Color", "Color", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductStock_ProductName", "ProductName")]
        public ProductName ProductName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductName>("LightSwitchApplication.FK_ProductStock_ProductName", "ProductName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductName>("LightSwitchApplication.FK_ProductStock_ProductName", "ProductName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductName> ProductNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductName>("LightSwitchApplication.FK_ProductStock_ProductName", "ProductName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductName>("LightSwitchApplication.FK_ProductStock_ProductName", "ProductName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductStock_ProductSize", "ProductSize")]
        public ProductSize ProductSize
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductStock_ProductSize", "ProductSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductStock_ProductSize", "ProductSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductSize> ProductSizeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductStock_ProductSize", "ProductSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductSize>("LightSwitchApplication.FK_ProductStock_ProductSize", "ProductSize", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="purchaseOrderStatusID">Initial value of the PurchaseOrderStatusID property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.Int64 purchaseOrderID, global::System.Int32 supplierID, global::System.Int64 orderID, global::System.Byte purchaseOrderStatusID)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.PurchaseOrderID = purchaseOrderID;
            purchaseOrder.SupplierID = supplierID;
            purchaseOrder.OrderID = orderID;
            purchaseOrder.PurchaseOrderStatusID = purchaseOrderStatusID;
            return purchaseOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                if (_PurchaseOrderID != value)
                {
                    OnPurchaseOrderIDChanging(value);
                    ReportPropertyChanging("PurchaseOrderID");
                    _PurchaseOrderID = value;
                    ReportPropertyChanged("PurchaseOrderID");
                    OnPurchaseOrderIDChanged();
                }
            }
        }
        private global::System.Int64 _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(global::System.Int64 value);
        partial void OnPurchaseOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PurchaseOrderDate
        {
            get
            {
                return _PurchaseOrderDate;
            }
            set
            {
                OnPurchaseOrderDateChanging(value);
                ReportPropertyChanging("PurchaseOrderDate");
                _PurchaseOrderDate = value;
                ReportPropertyChanged("PurchaseOrderDate");
                OnPurchaseOrderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PurchaseOrderDate;
        partial void OnPurchaseOrderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPurchaseOrderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PurchaseOrderNumber
        {
            get
            {
                return _PurchaseOrderNumber;
            }
            set
            {
                OnPurchaseOrderNumberChanging(value);
                ReportPropertyChanging("PurchaseOrderNumber");
                _PurchaseOrderNumber = value;
                ReportPropertyChanged("PurchaseOrderNumber");
                OnPurchaseOrderNumberChanged();
            }
        }
        private global::System.String _PurchaseOrderNumber;
        partial void OnPurchaseOrderNumberChanging(global::System.String value);
        partial void OnPurchaseOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermsAndConditions
        {
            get
            {
                return _TermsAndConditions;
            }
            set
            {
                OnTermsAndConditionsChanging(value);
                ReportPropertyChanging("TermsAndConditions");
                _TermsAndConditions = value;
                ReportPropertyChanged("TermsAndConditions");
                OnTermsAndConditionsChanged();
            }
        }
        private global::System.String _TermsAndConditions;
        partial void OnTermsAndConditionsChanging(global::System.String value);
        partial void OnTermsAndConditionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> QuotationDate
        {
            get
            {
                return _QuotationDate;
            }
            set
            {
                OnQuotationDateChanging(value);
                ReportPropertyChanging("QuotationDate");
                _QuotationDate = value;
                ReportPropertyChanged("QuotationDate");
                OnQuotationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _QuotationDate;
        partial void OnQuotationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnQuotationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuotationNumber
        {
            get
            {
                return _QuotationNumber;
            }
            set
            {
                OnQuotationNumberChanging(value);
                ReportPropertyChanging("QuotationNumber");
                _QuotationNumber = value;
                ReportPropertyChanged("QuotationNumber");
                OnQuotationNumberChanged();
            }
        }
        private global::System.String _QuotationNumber;
        partial void OnQuotationNumberChanging(global::System.String value);
        partial void OnQuotationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ApprovalID
        {
            get
            {
                return _ApprovalID;
            }
            set
            {
                OnApprovalIDChanging(value);
                ReportPropertyChanging("ApprovalID");
                _ApprovalID = value;
                ReportPropertyChanged("ApprovalID");
                OnApprovalIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ApprovalID;
        partial void OnApprovalIDChanging(Nullable<global::System.Int64> value);
        partial void OnApprovalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = value;
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PurchaseOrderStatusID
        {
            get
            {
                return _PurchaseOrderStatusID;
            }
            set
            {
                OnPurchaseOrderStatusIDChanging(value);
                ReportPropertyChanging("PurchaseOrderStatusID");
                _PurchaseOrderStatusID = value;
                ReportPropertyChanged("PurchaseOrderStatusID");
                OnPurchaseOrderStatusIDChanged();
            }
        }
        private global::System.Byte _PurchaseOrderStatusID;
        partial void OnPurchaseOrderStatusIDChanging(global::System.Byte value);
        partial void OnPurchaseOrderStatusIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_CompactingJo_PurchaseOrders", "CompactingJo")]
        public EntityCollection<CompactingJo> CompactingJoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_PurchaseOrders", "CompactingJo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompactingJo>("LightSwitchApplication.FK_CompactingJo_PurchaseOrders", "CompactingJo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_DyeingJO_PurchaseOrders", "DyeingJO")]
        public EntityCollection<DyeingJO> DyeingJOes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_PurchaseOrders", "DyeingJO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DyeingJO>("LightSwitchApplication.FK_DyeingJO_PurchaseOrders", "DyeingJO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_GRNReciept_PurchaseOrders", "GRNReciept")]
        public EntityCollection<GRNReciept> GRNReciepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GRNReciept>("LightSwitchApplication.FK_GRNReciept_PurchaseOrders", "GRNReciept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GRNReciept>("LightSwitchApplication.FK_GRNReciept_PurchaseOrders", "GRNReciept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderedItem_PurchaseOrders", "OrderedItem")]
        public EntityCollection<OrderedItem> OrderedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderedItem>("LightSwitchApplication.FK_OrderedItem_PurchaseOrders", "OrderedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderedItem>("LightSwitchApplication.FK_OrderedItem_PurchaseOrders", "OrderedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_PurchaseOrders", "ProductMaterialItem")]
        public EntityCollection<ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_PurchaseOrders", "ProductMaterialItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_PurchaseOrders", "ProductMaterialItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_Approval", "Approval")]
        public Approval Approval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_PurchaseOrders_Approval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_PurchaseOrders_Approval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> ApprovalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("LightSwitchApplication.FK_PurchaseOrders_Approval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("LightSwitchApplication.FK_PurchaseOrders_Approval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_Company", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_PurchaseOrders_Company", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_PurchaseOrders_Company", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("LightSwitchApplication.FK_PurchaseOrders_Company", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("LightSwitchApplication.FK_PurchaseOrders_Company", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_PurchaseOrders_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_PurchaseOrders_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("LightSwitchApplication.FK_PurchaseOrders_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("LightSwitchApplication.FK_PurchaseOrders_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrderStatus")]
        public PurchaseOrderStatu PurchaseOrderStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrderStatu>("LightSwitchApplication.FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrderStatu>("LightSwitchApplication.FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrderStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrderStatu> PurchaseOrderStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrderStatu>("LightSwitchApplication.FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrderStatu>("LightSwitchApplication.FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrderStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PurchaseOrderStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrderStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrderStatu object.
        /// </summary>
        /// <param name="purchaseOrderStatusID">Initial value of the PurchaseOrderStatusID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static PurchaseOrderStatu CreatePurchaseOrderStatu(global::System.Byte purchaseOrderStatusID, global::System.String status)
        {
            PurchaseOrderStatu purchaseOrderStatu = new PurchaseOrderStatu();
            purchaseOrderStatu.PurchaseOrderStatusID = purchaseOrderStatusID;
            purchaseOrderStatu.Status = status;
            return purchaseOrderStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PurchaseOrderStatusID
        {
            get
            {
                return _PurchaseOrderStatusID;
            }
            set
            {
                if (_PurchaseOrderStatusID != value)
                {
                    OnPurchaseOrderStatusIDChanging(value);
                    ReportPropertyChanging("PurchaseOrderStatusID");
                    _PurchaseOrderStatusID = value;
                    ReportPropertyChanged("PurchaseOrderStatusID");
                    OnPurchaseOrderStatusIDChanged();
                }
            }
        }
        private global::System.Byte _PurchaseOrderStatusID;
        partial void OnPurchaseOrderStatusIDChanging(global::System.Byte value);
        partial void OnPurchaseOrderStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrders")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("LightSwitchApplication.FK_PurchaseOrders_PurchaseOrderStatus", "PurchaseOrders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Quality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quality object.
        /// </summary>
        /// <param name="qualityID">Initial value of the QualityID property.</param>
        /// <param name="passed">Initial value of the Passed property.</param>
        /// <param name="failed">Initial value of the Failed property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="productBreakUpSummaryID">Initial value of the ProductBreakUpSummaryID property.</param>
        public static Quality CreateQuality(global::System.Int64 qualityID, global::System.Decimal passed, global::System.Decimal failed, global::System.DateTime c_Date, global::System.Int64 productBreakUpSummaryID)
        {
            Quality quality = new Quality();
            quality.QualityID = qualityID;
            quality.Passed = passed;
            quality.Failed = failed;
            quality.c_Date = c_Date;
            quality.ProductBreakUpSummaryID = productBreakUpSummaryID;
            return quality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 QualityID
        {
            get
            {
                return _QualityID;
            }
            set
            {
                if (_QualityID != value)
                {
                    OnQualityIDChanging(value);
                    ReportPropertyChanging("QualityID");
                    _QualityID = value;
                    ReportPropertyChanged("QualityID");
                    OnQualityIDChanged();
                }
            }
        }
        private global::System.Int64 _QualityID;
        partial void OnQualityIDChanging(global::System.Int64 value);
        partial void OnQualityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Passed
        {
            get
            {
                return _Passed;
            }
            set
            {
                OnPassedChanging(value);
                ReportPropertyChanging("Passed");
                _Passed = value;
                ReportPropertyChanged("Passed");
                OnPassedChanged();
            }
        }
        private global::System.Decimal _Passed;
        partial void OnPassedChanging(global::System.Decimal value);
        partial void OnPassedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Failed
        {
            get
            {
                return _Failed;
            }
            set
            {
                OnFailedChanging(value);
                ReportPropertyChanging("Failed");
                _Failed = value;
                ReportPropertyChanged("Failed");
                OnFailedChanged();
            }
        }
        private global::System.Decimal _Failed;
        partial void OnFailedChanging(global::System.Decimal value);
        partial void OnFailedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpSummaryID
        {
            get
            {
                return _ProductBreakUpSummaryID;
            }
            set
            {
                OnProductBreakUpSummaryIDChanging(value);
                ReportPropertyChanging("ProductBreakUpSummaryID");
                _ProductBreakUpSummaryID = value;
                ReportPropertyChanged("ProductBreakUpSummaryID");
                OnProductBreakUpSummaryIDChanged();
            }
        }
        private global::System.Int64 _ProductBreakUpSummaryID;
        partial void OnProductBreakUpSummaryIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpSummaryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Quality_ProductBreakUpSummary", "ProductBreakUpSummary")]
        public ProductBreakUpSummary ProductBreakUpSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Quality_ProductBreakUpSummary", "ProductBreakUpSummary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Quality_ProductBreakUpSummary", "ProductBreakUpSummary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBreakUpSummary> ProductBreakUpSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Quality_ProductBreakUpSummary", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Quality_ProductBreakUpSummary", "ProductBreakUpSummary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ReceiptStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceiptStatu object.
        /// </summary>
        /// <param name="receiptStatusID">Initial value of the ReceiptStatusID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static ReceiptStatu CreateReceiptStatu(global::System.Byte receiptStatusID, global::System.String status)
        {
            ReceiptStatu receiptStatu = new ReceiptStatu();
            receiptStatu.ReceiptStatusID = receiptStatusID;
            receiptStatu.Status = status;
            return receiptStatu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ReceiptStatusID
        {
            get
            {
                return _ReceiptStatusID;
            }
            set
            {
                if (_ReceiptStatusID != value)
                {
                    OnReceiptStatusIDChanging(value);
                    ReportPropertyChanging("ReceiptStatusID");
                    _ReceiptStatusID = value;
                    ReportPropertyChanged("ReceiptStatusID");
                    OnReceiptStatusIDChanged();
                }
            }
        }
        private global::System.Byte _ReceiptStatusID;
        partial void OnReceiptStatusIDChanging(global::System.Byte value);
        partial void OnReceiptStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_GRNReciept_ReceiptStatus", "GRNReciept")]
        public EntityCollection<GRNReciept> GRNReciepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GRNReciept>("LightSwitchApplication.FK_GRNReciept_ReceiptStatus", "GRNReciept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GRNReciept>("LightSwitchApplication.FK_GRNReciept_ReceiptStatus", "GRNReciept", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Shipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shipment object.
        /// </summary>
        /// <param name="shipmentID">Initial value of the ShipmentID property.</param>
        /// <param name="shipped">Initial value of the Shipped property.</param>
        /// <param name="rejected">Initial value of the Rejected property.</param>
        /// <param name="c_Date">Initial value of the c_Date property.</param>
        /// <param name="productBreakUpSummaryID">Initial value of the ProductBreakUpSummaryID property.</param>
        public static Shipment CreateShipment(global::System.Int64 shipmentID, global::System.Decimal shipped, global::System.Decimal rejected, global::System.DateTime c_Date, global::System.Int64 productBreakUpSummaryID)
        {
            Shipment shipment = new Shipment();
            shipment.ShipmentID = shipmentID;
            shipment.Shipped = shipped;
            shipment.Rejected = rejected;
            shipment.c_Date = c_Date;
            shipment.ProductBreakUpSummaryID = productBreakUpSummaryID;
            return shipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ShipmentID
        {
            get
            {
                return _ShipmentID;
            }
            set
            {
                if (_ShipmentID != value)
                {
                    OnShipmentIDChanging(value);
                    ReportPropertyChanging("ShipmentID");
                    _ShipmentID = value;
                    ReportPropertyChanged("ShipmentID");
                    OnShipmentIDChanged();
                }
            }
        }
        private global::System.Int64 _ShipmentID;
        partial void OnShipmentIDChanging(global::System.Int64 value);
        partial void OnShipmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Shipped
        {
            get
            {
                return _Shipped;
            }
            set
            {
                OnShippedChanging(value);
                ReportPropertyChanging("Shipped");
                _Shipped = value;
                ReportPropertyChanged("Shipped");
                OnShippedChanged();
            }
        }
        private global::System.Decimal _Shipped;
        partial void OnShippedChanging(global::System.Decimal value);
        partial void OnShippedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rejected
        {
            get
            {
                return _Rejected;
            }
            set
            {
                OnRejectedChanging(value);
                ReportPropertyChanging("Rejected");
                _Rejected = value;
                ReportPropertyChanged("Rejected");
                OnRejectedChanged();
            }
        }
        private global::System.Decimal _Rejected;
        partial void OnRejectedChanging(global::System.Decimal value);
        partial void OnRejectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime c_Date
        {
            get
            {
                return _c_Date;
            }
            set
            {
                Onc_DateChanging(value);
                ReportPropertyChanging("c_Date");
                _c_Date = value;
                ReportPropertyChanged("c_Date");
                Onc_DateChanged();
            }
        }
        private global::System.DateTime _c_Date;
        partial void Onc_DateChanging(global::System.DateTime value);
        partial void Onc_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductBreakUpSummaryID
        {
            get
            {
                return _ProductBreakUpSummaryID;
            }
            set
            {
                OnProductBreakUpSummaryIDChanging(value);
                ReportPropertyChanging("ProductBreakUpSummaryID");
                _ProductBreakUpSummaryID = value;
                ReportPropertyChanged("ProductBreakUpSummaryID");
                OnProductBreakUpSummaryIDChanged();
            }
        }
        private global::System.Int64 _ProductBreakUpSummaryID;
        partial void OnProductBreakUpSummaryIDChanging(global::System.Int64 value);
        partial void OnProductBreakUpSummaryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Shipment_ProductBreakUpSummary", "ProductBreakUpSummary")]
        public ProductBreakUpSummary ProductBreakUpSummary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Shipment_ProductBreakUpSummary", "ProductBreakUpSummary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Shipment_ProductBreakUpSummary", "ProductBreakUpSummary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductBreakUpSummary> ProductBreakUpSummaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Shipment_ProductBreakUpSummary", "ProductBreakUpSummary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductBreakUpSummary>("LightSwitchApplication.FK_Shipment_ProductBreakUpSummary", "ProductBreakUpSummary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ShipmentMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShipmentMode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShipmentMode object.
        /// </summary>
        /// <param name="shipmentModeID">Initial value of the ShipmentModeID property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        public static ShipmentMode CreateShipmentMode(global::System.Byte shipmentModeID, global::System.String mode)
        {
            ShipmentMode shipmentMode = new ShipmentMode();
            shipmentMode.ShipmentModeID = shipmentModeID;
            shipmentMode.Mode = mode;
            return shipmentMode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ShipmentModeID
        {
            get
            {
                return _ShipmentModeID;
            }
            set
            {
                if (_ShipmentModeID != value)
                {
                    OnShipmentModeIDChanging(value);
                    ReportPropertyChanging("ShipmentModeID");
                    _ShipmentModeID = value;
                    ReportPropertyChanged("ShipmentModeID");
                    OnShipmentModeIDChanged();
                }
            }
        }
        private global::System.Byte _ShipmentModeID;
        partial void OnShipmentModeIDChanging(global::System.Byte value);
        partial void OnShipmentModeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = value;
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.String _Mode;
        partial void OnModeChanging(global::System.String value);
        partial void OnModeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Invoice_ShipmentMode", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_ShipmentMode", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("LightSwitchApplication.FK_Invoice_ShipmentMode", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductBreakUp_ShipmentMode", "ProductBreakUp")]
        public EntityCollection<ProductBreakUp> ProductBreakUps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductBreakUp>("LightSwitchApplication.FK_ProductBreakUp_ShipmentMode", "ProductBreakUp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductBreakUp>("LightSwitchApplication.FK_ProductBreakUp_ShipmentMode", "ProductBreakUp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="SubMaterial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubMaterial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubMaterial object.
        /// </summary>
        /// <param name="subMaterialsNameID">Initial value of the SubMaterialsNameID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="materialNameID">Initial value of the MaterialNameID property.</param>
        public static SubMaterial CreateSubMaterial(global::System.Int64 subMaterialsNameID, global::System.String name, global::System.Int32 materialNameID)
        {
            SubMaterial subMaterial = new SubMaterial();
            subMaterial.SubMaterialsNameID = subMaterialsNameID;
            subMaterial.Name = name;
            subMaterial.MaterialNameID = materialNameID;
            return subMaterial;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SubMaterialsNameID
        {
            get
            {
                return _SubMaterialsNameID;
            }
            set
            {
                if (_SubMaterialsNameID != value)
                {
                    OnSubMaterialsNameIDChanging(value);
                    ReportPropertyChanging("SubMaterialsNameID");
                    _SubMaterialsNameID = value;
                    ReportPropertyChanged("SubMaterialsNameID");
                    OnSubMaterialsNameIDChanged();
                }
            }
        }
        private global::System.Int64 _SubMaterialsNameID;
        partial void OnSubMaterialsNameIDChanging(global::System.Int64 value);
        partial void OnSubMaterialsNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InStock
        {
            get
            {
                return _InStock;
            }
            set
            {
                OnInStockChanging(value);
                ReportPropertyChanging("InStock");
                _InStock = value;
                ReportPropertyChanged("InStock");
                OnInStockChanged();
            }
        }
        private Nullable<global::System.Decimal> _InStock;
        partial void OnInStockChanging(Nullable<global::System.Decimal> value);
        partial void OnInStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaterialNameID
        {
            get
            {
                return _MaterialNameID;
            }
            set
            {
                OnMaterialNameIDChanging(value);
                ReportPropertyChanging("MaterialNameID");
                _MaterialNameID = value;
                ReportPropertyChanged("MaterialNameID");
                OnMaterialNameIDChanged();
            }
        }
        private global::System.Int32 _MaterialNameID;
        partial void OnMaterialNameIDChanging(global::System.Int32 value);
        partial void OnMaterialNameIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                OnUOMIDChanging(value);
                ReportPropertyChanging("UOMID");
                _UOMID = value;
                ReportPropertyChanged("UOMID");
                OnUOMIDChanged();
            }
        }
        private Nullable<global::System.Int16> _UOMID;
        partial void OnUOMIDChanging(Nullable<global::System.Int16> value);
        partial void OnUOMIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialStock_SubMaterial", "MaterialStock")]
        public EntityCollection<MaterialStock> MaterialStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialStock>("LightSwitchApplication.FK_MaterialStock_SubMaterial", "MaterialStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialStock>("LightSwitchApplication.FK_MaterialStock_SubMaterial", "MaterialStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_SubMaterial", "ProductMaterialItem")]
        public EntityCollection<ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_SubMaterial", "ProductMaterialItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_SubMaterial", "ProductMaterialItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SubMaterial_MaterialName", "MaterialName")]
        public MaterialName MaterialName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialName>("LightSwitchApplication.FK_SubMaterial_MaterialName", "MaterialName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialName>("LightSwitchApplication.FK_SubMaterial_MaterialName", "MaterialName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialName> MaterialNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialName>("LightSwitchApplication.FK_SubMaterial_MaterialName", "MaterialName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialName>("LightSwitchApplication.FK_SubMaterial_MaterialName", "MaterialName", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SubMaterial_UnitsOfMeasurement", "UnitsOfMeasurement")]
        public UnitsOfMeasurement UnitsOfMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_SubMaterial_UnitsOfMeasurement", "UnitsOfMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_SubMaterial_UnitsOfMeasurement", "UnitsOfMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitsOfMeasurement> UnitsOfMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_SubMaterial_UnitsOfMeasurement", "UnitsOfMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitsOfMeasurement>("LightSwitchApplication.FK_SubMaterial_UnitsOfMeasurement", "UnitsOfMeasurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Temp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Temp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Temp object.
        /// </summary>
        /// <param name="cartonBoxNumber">Initial value of the CartonBoxNumber property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="color">Initial value of the Color property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Temp CreateTemp(global::System.String cartonBoxNumber, global::System.Decimal quantity, global::System.String color, global::System.String size, global::System.String name)
        {
            Temp temp = new Temp();
            temp.CartonBoxNumber = cartonBoxNumber;
            temp.Quantity = quantity;
            temp.Color = color;
            temp.Size = size;
            temp.Name = name;
            return temp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CartonBoxNumber
        {
            get
            {
                return _CartonBoxNumber;
            }
            set
            {
                if (_CartonBoxNumber != value)
                {
                    OnCartonBoxNumberChanging(value);
                    ReportPropertyChanging("CartonBoxNumber");
                    _CartonBoxNumber = value;
                    ReportPropertyChanged("CartonBoxNumber");
                    OnCartonBoxNumberChanged();
                }
            }
        }
        private global::System.String _CartonBoxNumber;
        partial void OnCartonBoxNumberChanging(global::System.String value);
        partial void OnCartonBoxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                if (_Quantity != value)
                {
                    OnQuantityChanging(value);
                    ReportPropertyChanging("Quantity");
                    _Quantity = value;
                    ReportPropertyChanged("Quantity");
                    OnQuantityChanged();
                }
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                if (_Color != value)
                {
                    OnColorChanging(value);
                    ReportPropertyChanging("Color");
                    _Color = value;
                    ReportPropertyChanged("Color");
                    OnColorChanged();
                }
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CostPerUnit
        {
            get
            {
                return _CostPerUnit;
            }
            set
            {
                OnCostPerUnitChanging(value);
                ReportPropertyChanging("CostPerUnit");
                _CostPerUnit = value;
                ReportPropertyChanged("CostPerUnit");
                OnCostPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _CostPerUnit;
        partial void OnCostPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnCostPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                if (_Size != value)
                {
                    OnSizeChanging(value);
                    ReportPropertyChanging("Size");
                    _Size = value;
                    ReportPropertyChanged("Size");
                    OnSizeChanged();
                }
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = value;
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UnitsOfMeasurement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitsOfMeasurement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitsOfMeasurement object.
        /// </summary>
        /// <param name="uOMID">Initial value of the UOMID property.</param>
        /// <param name="units">Initial value of the Units property.</param>
        /// <param name="multiplier">Initial value of the Multiplier property.</param>
        public static UnitsOfMeasurement CreateUnitsOfMeasurement(global::System.Int16 uOMID, global::System.String units, global::System.Decimal multiplier)
        {
            UnitsOfMeasurement unitsOfMeasurement = new UnitsOfMeasurement();
            unitsOfMeasurement.UOMID = uOMID;
            unitsOfMeasurement.Units = units;
            unitsOfMeasurement.Multiplier = multiplier;
            return unitsOfMeasurement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                if (_UOMID != value)
                {
                    OnUOMIDChanging(value);
                    ReportPropertyChanging("UOMID");
                    _UOMID = value;
                    ReportPropertyChanged("UOMID");
                    OnUOMIDChanged();
                }
            }
        }
        private global::System.Int16 _UOMID;
        partial void OnUOMIDChanging(global::System.Int16 value);
        partial void OnUOMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Units
        {
            get
            {
                return _Units;
            }
            set
            {
                OnUnitsChanging(value);
                ReportPropertyChanging("Units");
                _Units = value;
                ReportPropertyChanged("Units");
                OnUnitsChanged();
            }
        }
        private global::System.String _Units;
        partial void OnUnitsChanging(global::System.String value);
        partial void OnUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Multiplier
        {
            get
            {
                return _Multiplier;
            }
            set
            {
                OnMultiplierChanging(value);
                ReportPropertyChanging("Multiplier");
                _Multiplier = value;
                ReportPropertyChanged("Multiplier");
                OnMultiplierChanged();
            }
        }
        private global::System.Decimal _Multiplier;
        partial void OnMultiplierChanging(global::System.Decimal value);
        partial void OnMultiplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QuantityMultiplier
        {
            get
            {
                return _QuantityMultiplier;
            }
            set
            {
                OnQuantityMultiplierChanging(value);
                ReportPropertyChanging("QuantityMultiplier");
                _QuantityMultiplier = value;
                ReportPropertyChanged("QuantityMultiplier");
                OnQuantityMultiplierChanged();
            }
        }
        private Nullable<global::System.Decimal> _QuantityMultiplier;
        partial void OnQuantityMultiplierChanging(Nullable<global::System.Decimal> value);
        partial void OnQuantityMultiplierChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_MaterialStock_UnitsOfMeasurement", "MaterialStock")]
        public EntityCollection<MaterialStock> MaterialStocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MaterialStock>("LightSwitchApplication.FK_MaterialStock_UnitsOfMeasurement", "MaterialStock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MaterialStock>("LightSwitchApplication.FK_MaterialStock_UnitsOfMeasurement", "MaterialStock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderProduct_UnitsOfMeasurement", "OrderProduct")]
        public EntityCollection<OrderProduct> OrderProducts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_UnitsOfMeasurement", "OrderProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderProduct>("LightSwitchApplication.FK_OrderProduct_UnitsOfMeasurement", "OrderProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterialItem_UnitsOfMeasurement", "ProductMaterialItem")]
        public EntityCollection<ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_UnitsOfMeasurement", "ProductMaterialItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterialItem>("LightSwitchApplication.FK_ProductMaterialItem_UnitsOfMeasurement", "ProductMaterialItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ProductMaterials_UnitsOfMeasurement", "ProductMaterials")]
        public EntityCollection<ProductMaterial> ProductMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_UnitsOfMeasurement", "ProductMaterials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductMaterial>("LightSwitchApplication.FK_ProductMaterials_UnitsOfMeasurement", "ProductMaterials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SubMaterial_UnitsOfMeasurement", "SubMaterial")]
        public EntityCollection<SubMaterial> SubMaterials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubMaterial>("LightSwitchApplication.FK_SubMaterial_UnitsOfMeasurement", "SubMaterial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubMaterial>("LightSwitchApplication.FK_SubMaterial_UnitsOfMeasurement", "SubMaterial", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="emailID">Initial value of the EmailID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static User CreateUser(global::System.Int16 userID, global::System.String userName, global::System.String password, global::System.String emailID, global::System.Int16 roleID)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            user.Password = password;
            user.EmailID = emailID;
            user.RoleID = roleID;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = value;
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int16 _UserID;
        partial void OnUserIDChanging(global::System.Int16 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = value;
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = value;
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailID
        {
            get
            {
                return _EmailID;
            }
            set
            {
                OnEmailIDChanging(value);
                ReportPropertyChanging("EmailID");
                _EmailID = value;
                ReportPropertyChanged("EmailID");
                OnEmailIDChanged();
            }
        }
        private global::System.String _EmailID;
        partial void OnEmailIDChanging(global::System.String value);
        partial void OnEmailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = value;
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int16 _RoleID;
        partial void OnRoleIDChanging(global::System.Int16 value);
        partial void OnRoleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_User_UserRole", "UserRole")]
        public UserRole UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("LightSwitchApplication.FK_User_UserRole", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("LightSwitchApplication.FK_User_UserRole", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("LightSwitchApplication.FK_User_UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("LightSwitchApplication.FK_User_UserRole", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userRoleID">Initial value of the UserRoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="canCreateUser">Initial value of the CanCreateUser property.</param>
        /// <param name="canCreateNewEnquiry">Initial value of the CanCreateNewEnquiry property.</param>
        /// <param name="canAddMaterials">Initial value of the CanAddMaterials property.</param>
        /// <param name="canAddMaterialsCost">Initial value of the CanAddMaterialsCost property.</param>
        /// <param name="canAddConsumption">Initial value of the CanAddConsumption property.</param>
        /// <param name="canAddExtraCost">Initial value of the CanAddExtraCost property.</param>
        /// <param name="canApproveEnquiry">Initial value of the CanApproveEnquiry property.</param>
        /// <param name="canConfirmOrder">Initial value of the CanConfirmOrder property.</param>
        /// <param name="canAddSubMaterials">Initial value of the CanAddSubMaterials property.</param>
        /// <param name="canGeneratePurchaseOrder">Initial value of the CanGeneratePurchaseOrder property.</param>
        /// <param name="canModifyExecutionCutting">Initial value of the CanModifyExecutionCutting property.</param>
        /// <param name="canModifyExecutionProduction">Initial value of the CanModifyExecutionProduction property.</param>
        /// <param name="canModifyExecutionPackaging">Initial value of the CanModifyExecutionPackaging property.</param>
        /// <param name="canModifyExectionQuality">Initial value of the CanModifyExectionQuality property.</param>
        /// <param name="canModifyExecutionShipping">Initial value of the CanModifyExecutionShipping property.</param>
        /// <param name="canModifyGRN">Initial value of the CanModifyGRN property.</param>
        /// <param name="canModifyJobOrder">Initial value of the CanModifyJobOrder property.</param>
        /// <param name="canAddSubMaterialsCost">Initial value of the CanAddSubMaterialsCost property.</param>
        /// <param name="canApprovePurchaseOrder">Initial value of the CanApprovePurchaseOrder property.</param>
        public static UserRole CreateUserRole(global::System.Int16 userRoleID, global::System.String roleName, global::System.Boolean canCreateUser, global::System.Boolean canCreateNewEnquiry, global::System.Boolean canAddMaterials, global::System.Boolean canAddMaterialsCost, global::System.Boolean canAddConsumption, global::System.Boolean canAddExtraCost, global::System.Boolean canApproveEnquiry, global::System.Boolean canConfirmOrder, global::System.Boolean canAddSubMaterials, global::System.Boolean canGeneratePurchaseOrder, global::System.Boolean canModifyExecutionCutting, global::System.Boolean canModifyExecutionProduction, global::System.Boolean canModifyExecutionPackaging, global::System.Boolean canModifyExectionQuality, global::System.Boolean canModifyExecutionShipping, global::System.Boolean canModifyGRN, global::System.Boolean canModifyJobOrder, global::System.Boolean canAddSubMaterialsCost, global::System.Boolean canApprovePurchaseOrder)
        {
            UserRole userRole = new UserRole();
            userRole.UserRoleID = userRoleID;
            userRole.RoleName = roleName;
            userRole.CanCreateUser = canCreateUser;
            userRole.CanCreateNewEnquiry = canCreateNewEnquiry;
            userRole.CanAddMaterials = canAddMaterials;
            userRole.CanAddMaterialsCost = canAddMaterialsCost;
            userRole.CanAddConsumption = canAddConsumption;
            userRole.CanAddExtraCost = canAddExtraCost;
            userRole.CanApproveEnquiry = canApproveEnquiry;
            userRole.CanConfirmOrder = canConfirmOrder;
            userRole.CanAddSubMaterials = canAddSubMaterials;
            userRole.CanGeneratePurchaseOrder = canGeneratePurchaseOrder;
            userRole.CanModifyExecutionCutting = canModifyExecutionCutting;
            userRole.CanModifyExecutionProduction = canModifyExecutionProduction;
            userRole.CanModifyExecutionPackaging = canModifyExecutionPackaging;
            userRole.CanModifyExectionQuality = canModifyExectionQuality;
            userRole.CanModifyExecutionShipping = canModifyExecutionShipping;
            userRole.CanModifyGRN = canModifyGRN;
            userRole.CanModifyJobOrder = canModifyJobOrder;
            userRole.CanAddSubMaterialsCost = canAddSubMaterialsCost;
            userRole.CanApprovePurchaseOrder = canApprovePurchaseOrder;
            return userRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                if (_UserRoleID != value)
                {
                    OnUserRoleIDChanging(value);
                    ReportPropertyChanging("UserRoleID");
                    _UserRoleID = value;
                    ReportPropertyChanged("UserRoleID");
                    OnUserRoleIDChanged();
                }
            }
        }
        private global::System.Int16 _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Int16 value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = value;
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AliasName
        {
            get
            {
                return _AliasName;
            }
            set
            {
                OnAliasNameChanging(value);
                ReportPropertyChanging("AliasName");
                _AliasName = value;
                ReportPropertyChanged("AliasName");
                OnAliasNameChanged();
            }
        }
        private global::System.String _AliasName;
        partial void OnAliasNameChanging(global::System.String value);
        partial void OnAliasNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanCreateUser
        {
            get
            {
                return _CanCreateUser;
            }
            set
            {
                OnCanCreateUserChanging(value);
                ReportPropertyChanging("CanCreateUser");
                _CanCreateUser = value;
                ReportPropertyChanged("CanCreateUser");
                OnCanCreateUserChanged();
            }
        }
        private global::System.Boolean _CanCreateUser;
        partial void OnCanCreateUserChanging(global::System.Boolean value);
        partial void OnCanCreateUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanCreateNewEnquiry
        {
            get
            {
                return _CanCreateNewEnquiry;
            }
            set
            {
                OnCanCreateNewEnquiryChanging(value);
                ReportPropertyChanging("CanCreateNewEnquiry");
                _CanCreateNewEnquiry = value;
                ReportPropertyChanged("CanCreateNewEnquiry");
                OnCanCreateNewEnquiryChanged();
            }
        }
        private global::System.Boolean _CanCreateNewEnquiry;
        partial void OnCanCreateNewEnquiryChanging(global::System.Boolean value);
        partial void OnCanCreateNewEnquiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddMaterials
        {
            get
            {
                return _CanAddMaterials;
            }
            set
            {
                OnCanAddMaterialsChanging(value);
                ReportPropertyChanging("CanAddMaterials");
                _CanAddMaterials = value;
                ReportPropertyChanged("CanAddMaterials");
                OnCanAddMaterialsChanged();
            }
        }
        private global::System.Boolean _CanAddMaterials;
        partial void OnCanAddMaterialsChanging(global::System.Boolean value);
        partial void OnCanAddMaterialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddMaterialsCost
        {
            get
            {
                return _CanAddMaterialsCost;
            }
            set
            {
                OnCanAddMaterialsCostChanging(value);
                ReportPropertyChanging("CanAddMaterialsCost");
                _CanAddMaterialsCost = value;
                ReportPropertyChanged("CanAddMaterialsCost");
                OnCanAddMaterialsCostChanged();
            }
        }
        private global::System.Boolean _CanAddMaterialsCost;
        partial void OnCanAddMaterialsCostChanging(global::System.Boolean value);
        partial void OnCanAddMaterialsCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddConsumption
        {
            get
            {
                return _CanAddConsumption;
            }
            set
            {
                OnCanAddConsumptionChanging(value);
                ReportPropertyChanging("CanAddConsumption");
                _CanAddConsumption = value;
                ReportPropertyChanged("CanAddConsumption");
                OnCanAddConsumptionChanged();
            }
        }
        private global::System.Boolean _CanAddConsumption;
        partial void OnCanAddConsumptionChanging(global::System.Boolean value);
        partial void OnCanAddConsumptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddExtraCost
        {
            get
            {
                return _CanAddExtraCost;
            }
            set
            {
                OnCanAddExtraCostChanging(value);
                ReportPropertyChanging("CanAddExtraCost");
                _CanAddExtraCost = value;
                ReportPropertyChanged("CanAddExtraCost");
                OnCanAddExtraCostChanged();
            }
        }
        private global::System.Boolean _CanAddExtraCost;
        partial void OnCanAddExtraCostChanging(global::System.Boolean value);
        partial void OnCanAddExtraCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanApproveEnquiry
        {
            get
            {
                return _CanApproveEnquiry;
            }
            set
            {
                OnCanApproveEnquiryChanging(value);
                ReportPropertyChanging("CanApproveEnquiry");
                _CanApproveEnquiry = value;
                ReportPropertyChanged("CanApproveEnquiry");
                OnCanApproveEnquiryChanged();
            }
        }
        private global::System.Boolean _CanApproveEnquiry;
        partial void OnCanApproveEnquiryChanging(global::System.Boolean value);
        partial void OnCanApproveEnquiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanConfirmOrder
        {
            get
            {
                return _CanConfirmOrder;
            }
            set
            {
                OnCanConfirmOrderChanging(value);
                ReportPropertyChanging("CanConfirmOrder");
                _CanConfirmOrder = value;
                ReportPropertyChanged("CanConfirmOrder");
                OnCanConfirmOrderChanged();
            }
        }
        private global::System.Boolean _CanConfirmOrder;
        partial void OnCanConfirmOrderChanging(global::System.Boolean value);
        partial void OnCanConfirmOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddSubMaterials
        {
            get
            {
                return _CanAddSubMaterials;
            }
            set
            {
                OnCanAddSubMaterialsChanging(value);
                ReportPropertyChanging("CanAddSubMaterials");
                _CanAddSubMaterials = value;
                ReportPropertyChanged("CanAddSubMaterials");
                OnCanAddSubMaterialsChanged();
            }
        }
        private global::System.Boolean _CanAddSubMaterials;
        partial void OnCanAddSubMaterialsChanging(global::System.Boolean value);
        partial void OnCanAddSubMaterialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanGeneratePurchaseOrder
        {
            get
            {
                return _CanGeneratePurchaseOrder;
            }
            set
            {
                OnCanGeneratePurchaseOrderChanging(value);
                ReportPropertyChanging("CanGeneratePurchaseOrder");
                _CanGeneratePurchaseOrder = value;
                ReportPropertyChanged("CanGeneratePurchaseOrder");
                OnCanGeneratePurchaseOrderChanged();
            }
        }
        private global::System.Boolean _CanGeneratePurchaseOrder;
        partial void OnCanGeneratePurchaseOrderChanging(global::System.Boolean value);
        partial void OnCanGeneratePurchaseOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanModifyExecutionCutting
        {
            get
            {
                return _CanModifyExecutionCutting;
            }
            set
            {
                OnCanModifyExecutionCuttingChanging(value);
                ReportPropertyChanging("CanModifyExecutionCutting");
                _CanModifyExecutionCutting = value;
                ReportPropertyChanged("CanModifyExecutionCutting");
                OnCanModifyExecutionCuttingChanged();
            }
        }
        private global::System.Boolean _CanModifyExecutionCutting;
        partial void OnCanModifyExecutionCuttingChanging(global::System.Boolean value);
        partial void OnCanModifyExecutionCuttingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanModifyExecutionProduction
        {
            get
            {
                return _CanModifyExecutionProduction;
            }
            set
            {
                OnCanModifyExecutionProductionChanging(value);
                ReportPropertyChanging("CanModifyExecutionProduction");
                _CanModifyExecutionProduction = value;
                ReportPropertyChanged("CanModifyExecutionProduction");
                OnCanModifyExecutionProductionChanged();
            }
        }
        private global::System.Boolean _CanModifyExecutionProduction;
        partial void OnCanModifyExecutionProductionChanging(global::System.Boolean value);
        partial void OnCanModifyExecutionProductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanModifyExecutionPackaging
        {
            get
            {
                return _CanModifyExecutionPackaging;
            }
            set
            {
                OnCanModifyExecutionPackagingChanging(value);
                ReportPropertyChanging("CanModifyExecutionPackaging");
                _CanModifyExecutionPackaging = value;
                ReportPropertyChanged("CanModifyExecutionPackaging");
                OnCanModifyExecutionPackagingChanged();
            }
        }
        private global::System.Boolean _CanModifyExecutionPackaging;
        partial void OnCanModifyExecutionPackagingChanging(global::System.Boolean value);
        partial void OnCanModifyExecutionPackagingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanModifyExectionQuality
        {
            get
            {
                return _CanModifyExectionQuality;
            }
            set
            {
                OnCanModifyExectionQualityChanging(value);
                ReportPropertyChanging("CanModifyExectionQuality");
                _CanModifyExectionQuality = value;
                ReportPropertyChanged("CanModifyExectionQuality");
                OnCanModifyExectionQualityChanged();
            }
        }
        private global::System.Boolean _CanModifyExectionQuality;
        partial void OnCanModifyExectionQualityChanging(global::System.Boolean value);
        partial void OnCanModifyExectionQualityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanModifyExecutionShipping
        {
            get
            {
                return _CanModifyExecutionShipping;
            }
            set
            {
                OnCanModifyExecutionShippingChanging(value);
                ReportPropertyChanging("CanModifyExecutionShipping");
                _CanModifyExecutionShipping = value;
                ReportPropertyChanged("CanModifyExecutionShipping");
                OnCanModifyExecutionShippingChanged();
            }
        }
        private global::System.Boolean _CanModifyExecutionShipping;
        partial void OnCanModifyExecutionShippingChanging(global::System.Boolean value);
        partial void OnCanModifyExecutionShippingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanModifyGRN
        {
            get
            {
                return _CanModifyGRN;
            }
            set
            {
                OnCanModifyGRNChanging(value);
                ReportPropertyChanging("CanModifyGRN");
                _CanModifyGRN = value;
                ReportPropertyChanged("CanModifyGRN");
                OnCanModifyGRNChanged();
            }
        }
        private global::System.Boolean _CanModifyGRN;
        partial void OnCanModifyGRNChanging(global::System.Boolean value);
        partial void OnCanModifyGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanModifyJobOrder
        {
            get
            {
                return _CanModifyJobOrder;
            }
            set
            {
                OnCanModifyJobOrderChanging(value);
                ReportPropertyChanging("CanModifyJobOrder");
                _CanModifyJobOrder = value;
                ReportPropertyChanged("CanModifyJobOrder");
                OnCanModifyJobOrderChanged();
            }
        }
        private global::System.Boolean _CanModifyJobOrder;
        partial void OnCanModifyJobOrderChanging(global::System.Boolean value);
        partial void OnCanModifyJobOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanAddSubMaterialsCost
        {
            get
            {
                return _CanAddSubMaterialsCost;
            }
            set
            {
                OnCanAddSubMaterialsCostChanging(value);
                ReportPropertyChanging("CanAddSubMaterialsCost");
                _CanAddSubMaterialsCost = value;
                ReportPropertyChanged("CanAddSubMaterialsCost");
                OnCanAddSubMaterialsCostChanged();
            }
        }
        private global::System.Boolean _CanAddSubMaterialsCost;
        partial void OnCanAddSubMaterialsCostChanging(global::System.Boolean value);
        partial void OnCanAddSubMaterialsCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanApprovePurchaseOrder
        {
            get
            {
                return _CanApprovePurchaseOrder;
            }
            set
            {
                OnCanApprovePurchaseOrderChanging(value);
                ReportPropertyChanging("CanApprovePurchaseOrder");
                _CanApprovePurchaseOrder = value;
                ReportPropertyChanged("CanApprovePurchaseOrder");
                OnCanApprovePurchaseOrderChanged();
            }
        }
        private global::System.Boolean _CanApprovePurchaseOrder;
        partial void OnCanApprovePurchaseOrderChanging(global::System.Boolean value);
        partial void OnCanApprovePurchaseOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_OrderStatus_UserRole", "OrderStatus")]
        public EntityCollection<OrderStatu> OrderStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderStatu>("LightSwitchApplication.FK_OrderStatus_UserRole", "OrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderStatu>("LightSwitchApplication.FK_OrderStatus_UserRole", "OrderStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_User_UserRole", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("LightSwitchApplication.FK_User_UserRole", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("LightSwitchApplication.FK_User_UserRole", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
