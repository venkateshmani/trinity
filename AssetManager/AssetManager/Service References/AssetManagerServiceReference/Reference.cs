//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace AssetManager.AssetManagerServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/AssetManagerWebService")]
    public partial class LoginResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AuthenticatedField;
        
        private string MessageField;
        
        private bool NeedPasswordResetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Authenticated {
            get {
                return this.AuthenticatedField;
            }
            set {
                if ((this.AuthenticatedField.Equals(value) != true)) {
                    this.AuthenticatedField = value;
                    this.RaisePropertyChanged("Authenticated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NeedPasswordReset {
            get {
                return this.NeedPasswordResetField;
            }
            set {
                if ((this.NeedPasswordResetField.Equals(value) != true)) {
                    this.NeedPasswordResetField = value;
                    this.RaisePropertyChanged("NeedPasswordReset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AssetManagerServiceReference.IAssetManagerService")]
    public interface IAssetManagerService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAssetManagerService/Authenticate", ReplyAction="http://tempuri.org/IAssetManagerService/AuthenticateResponse")]
        System.IAsyncResult BeginAuthenticate(AssetManager.AssetManagerServiceReference.AuthenticateRequest request, System.AsyncCallback callback, object asyncState);
        
        AssetManager.AssetManagerServiceReference.AuthenticateResponse EndAuthenticate(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Authenticate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public AuthenticateRequest() {
        }
        
        public AuthenticateRequest(string userName, string password) {
            this.userName = userName;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AuthenticateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public AssetManager.AssetManagerServiceReference.LoginResult AuthenticateResult;
        
        public AuthenticateResponse() {
        }
        
        public AuthenticateResponse(AssetManager.AssetManagerServiceReference.LoginResult AuthenticateResult) {
            this.AuthenticateResult = AuthenticateResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssetManagerServiceChannel : AssetManager.AssetManagerServiceReference.IAssetManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AssetManager.AssetManagerServiceReference.AuthenticateResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AssetManager.AssetManagerServiceReference.AuthenticateResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssetManagerServiceClient : System.ServiceModel.ClientBase<AssetManager.AssetManagerServiceReference.IAssetManagerService>, AssetManager.AssetManagerServiceReference.IAssetManagerService {
        
        private BeginOperationDelegate onBeginAuthenticateDelegate;
        
        private EndOperationDelegate onEndAuthenticateDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AssetManagerServiceClient() {
        }
        
        public AssetManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssetManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssetManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AuthenticateCompletedEventArgs> AuthenticateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AssetManager.AssetManagerServiceReference.IAssetManagerService.BeginAuthenticate(AssetManager.AssetManagerServiceReference.AuthenticateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AssetManager.AssetManagerServiceReference.AuthenticateResponse AssetManager.AssetManagerServiceReference.IAssetManagerService.EndAuthenticate(System.IAsyncResult result) {
            return base.Channel.EndAuthenticate(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            AssetManager.AssetManagerServiceReference.AuthenticateRequest request = ((AssetManager.AssetManagerServiceReference.AuthenticateRequest)(inValues[0]));
            return ((AssetManager.AssetManagerServiceReference.IAssetManagerService)(this)).BeginAuthenticate(request, callback, asyncState);
        }
        
        private object[] OnEndAuthenticate(System.IAsyncResult result) {
            AssetManager.AssetManagerServiceReference.AuthenticateResponse retVal = ((AssetManager.AssetManagerServiceReference.IAssetManagerService)(this)).EndAuthenticate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateCompleted(object state) {
            if ((this.AuthenticateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateAsync(AssetManager.AssetManagerServiceReference.AuthenticateRequest request) {
            this.AuthenticateAsync(request, null);
        }
        
        public void AuthenticateAsync(AssetManager.AssetManagerServiceReference.AuthenticateRequest request, object userState) {
            if ((this.onBeginAuthenticateDelegate == null)) {
                this.onBeginAuthenticateDelegate = new BeginOperationDelegate(this.OnBeginAuthenticate);
            }
            if ((this.onEndAuthenticateDelegate == null)) {
                this.onEndAuthenticateDelegate = new EndOperationDelegate(this.OnEndAuthenticate);
            }
            if ((this.onAuthenticateCompletedDelegate == null)) {
                this.onAuthenticateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateDelegate, new object[] {
                        request}, this.onEndAuthenticateDelegate, this.onAuthenticateCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AssetManager.AssetManagerServiceReference.IAssetManagerService CreateChannel() {
            return new AssetManagerServiceClientChannel(this);
        }
        
        private class AssetManagerServiceClientChannel : ChannelBase<AssetManager.AssetManagerServiceReference.IAssetManagerService>, AssetManager.AssetManagerServiceReference.IAssetManagerService {
            
            public AssetManagerServiceClientChannel(System.ServiceModel.ClientBase<AssetManager.AssetManagerServiceReference.IAssetManagerService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAuthenticate(AssetManager.AssetManagerServiceReference.AuthenticateRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("Authenticate", _args, callback, asyncState);
                return _result;
            }
            
            public AssetManager.AssetManagerServiceReference.AuthenticateResponse EndAuthenticate(System.IAsyncResult result) {
                object[] _args = new object[0];
                AssetManager.AssetManagerServiceReference.AuthenticateResponse _result = ((AssetManager.AssetManagerServiceReference.AuthenticateResponse)(base.EndInvoke("Authenticate", _args, result)));
                return _result;
            }
        }
    }
}
