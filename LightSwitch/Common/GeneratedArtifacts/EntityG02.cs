

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AssetCategory : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the AssetCategory entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssetCategory()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssetCategory(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AssetCategory> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.AssetCategory.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategory_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategory_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int CategoryID
        {
            get
            {
                return global::LightSwitchApplication.AssetCategory.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.CategoryID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CategoryID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CategoryID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CategoryID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.AssetCategory.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.AssetCategory.DetailsClass.SetValue(this, global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AssetName> AssetNames
        {
            get
            {
                return global::LightSwitchApplication.AssetCategory.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.AssetNames);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AssetName> AssetNamesQuery
        {
            get
            {
                return global::LightSwitchApplication.AssetCategory.DetailsClass.GetQuery(this, global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.AssetNames);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.AssetCategory,
                global::LightSwitchApplication.AssetCategory.DetailsClass,
                global::LightSwitchApplication.AssetCategory.DetailsClass.IImplementation,
                global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.CategoryID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass>.Entry
                __AssetCategoryEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass>.Entry(
                    global::LightSwitchApplication.AssetCategory.DetailsClass.__AssetCategory_CreateNew,
                    global::LightSwitchApplication.AssetCategory.DetailsClass.__AssetCategory_Created,
                    global::LightSwitchApplication.AssetCategory.DetailsClass.__AssetCategory_AllowSaveWithErrors);
            private static global::LightSwitchApplication.AssetCategory __AssetCategory_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AssetCategory> es)
            {
                return new global::LightSwitchApplication.AssetCategory(es);
            }
            private static void __AssetCategory_Created(global::LightSwitchApplication.AssetCategory e)
            {
                e.AssetCategory_Created();
            }
            private static bool __AssetCategory_AllowSaveWithErrors(global::LightSwitchApplication.AssetCategory e)
            {
                bool result = false;
                e.AssetCategory_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, int> CategoryID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.CategoryID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, global::LightSwitchApplication.AssetName> AssetNames
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.AssetNames) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, global::LightSwitchApplication.AssetName>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int CategoryID { get; }
                new string Name { get; set; }
                new global::System.Collections.IEnumerable AssetNames { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, int>.Entry
                    CategoryID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, int>.Entry(
                        "CategoryID",
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._CategoryID_Stub,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._CategoryID_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._CategoryID_Validate,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._CategoryID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._CategoryID_OnValueChanged);
                private static void _CategoryID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetCategory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, int>.Data> c, global::LightSwitchApplication.AssetCategory.DetailsClass d, object sf)
                {
                    c(d, ref d._CategoryID, sf);
                }
                private static bool _CategoryID_ComputeIsReadOnly(global::LightSwitchApplication.AssetCategory e)
                {
                    bool result = false;
                    e.CategoryID_IsReadOnly(ref result);
                    return result;
                }
                private static void _CategoryID_Validate(global::LightSwitchApplication.AssetCategory e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CategoryID_Validate(r);
                }
                private static int _CategoryID_GetImplementationValue(global::LightSwitchApplication.AssetCategory.DetailsClass d)
                {
                    return d.ImplementationEntity.CategoryID;
                }
                private static void _CategoryID_OnValueChanged(global::LightSwitchApplication.AssetCategory e)
                {
                    e.CategoryID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetCategory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, string>.Data> c, global::LightSwitchApplication.AssetCategory.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.AssetCategory e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.AssetCategory e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.AssetCategory.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.AssetCategory.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.AssetCategory e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, global::LightSwitchApplication.AssetName>.Entry
                    AssetNames = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, global::LightSwitchApplication.AssetName>.Entry(
                        "AssetNames",
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._AssetNames_Stub,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._AssetNames_GetReferencedEntities,
                        global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties._AssetNames_GetEntityCollection);
                private static void _AssetNames_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetCategory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, global::LightSwitchApplication.AssetName>.Data> c, global::LightSwitchApplication.AssetCategory.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetNames, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssetName> _AssetNames_GetReferencedEntities(global::LightSwitchApplication.AssetCategory.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>(global::LightSwitchApplication.AssetCategory.DetailsClass.PropertySetProperties.AssetNames, ref d._AssetNames);
                }
                private static global::System.Collections.IEnumerable _AssetNames_GetEntityCollection(global::LightSwitchApplication.AssetCategory.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetNames;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, int>.Data _CategoryID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass, global::LightSwitchApplication.AssetName>.Data _AssetNames;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class AssetName : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the AssetName entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssetName()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssetName(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AssetName> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.AssetName.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetName_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetName_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long AssetNameID
        {
            get
            {
                return global::LightSwitchApplication.AssetName.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetNameID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNameID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNameID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNameID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.AssetName.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.AssetName.DetailsClass.SetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Descritpion
        {
            get
            {
                return global::LightSwitchApplication.AssetName.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Descritpion);
            }
            set
            {
                global::LightSwitchApplication.AssetName.DetailsClass.SetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Descritpion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Descritpion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Descritpion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Descritpion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Asset> Assets
        {
            get
            {
                return global::LightSwitchApplication.AssetName.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Assets);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Asset> AssetsQuery
        {
            get
            {
                return global::LightSwitchApplication.AssetName.DetailsClass.GetQuery(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Assets);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AssetCategory AssetCategory
        {
            get
            {
                return global::LightSwitchApplication.AssetName.DetailsClass.GetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetCategory);
            }
            set
            {
                global::LightSwitchApplication.AssetName.DetailsClass.SetValue(this, global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetCategory, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategory_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategory_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategory_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.AssetName,
                global::LightSwitchApplication.AssetName.DetailsClass,
                global::LightSwitchApplication.AssetName.DetailsClass.IImplementation,
                global::LightSwitchApplication.AssetName.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetNameID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>.Entry
                __AssetNameEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>.Entry(
                    global::LightSwitchApplication.AssetName.DetailsClass.__AssetName_CreateNew,
                    global::LightSwitchApplication.AssetName.DetailsClass.__AssetName_Created,
                    global::LightSwitchApplication.AssetName.DetailsClass.__AssetName_AllowSaveWithErrors);
            private static global::LightSwitchApplication.AssetName __AssetName_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AssetName> es)
            {
                return new global::LightSwitchApplication.AssetName(es);
            }
            private static void __AssetName_Created(global::LightSwitchApplication.AssetName e)
            {
                e.AssetName_Created();
            }
            private static bool __AssetName_AllowSaveWithErrors(global::LightSwitchApplication.AssetName e)
            {
                bool result = false;
                e.AssetName_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.AssetName.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, long> AssetNameID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetNameID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string> Descritpion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Descritpion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.Asset> Assets
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Assets) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.Asset>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.AssetCategory> AssetCategory
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetCategory) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.AssetCategory>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new long AssetNameID { get; }
                new string Name { get; set; }
                new string Descritpion { get; set; }
                new global::System.Collections.IEnumerable Assets { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssetCategory { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, long>.Entry
                    AssetNameID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, long>.Entry(
                        "AssetNameID",
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetNameID_Stub,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetNameID_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetNameID_Validate,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetNameID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetNameID_OnValueChanged);
                private static void _AssetNameID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, long>.Data> c, global::LightSwitchApplication.AssetName.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetNameID, sf);
                }
                private static bool _AssetNameID_ComputeIsReadOnly(global::LightSwitchApplication.AssetName e)
                {
                    bool result = false;
                    e.AssetNameID_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetNameID_Validate(global::LightSwitchApplication.AssetName e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetNameID_Validate(r);
                }
                private static long _AssetNameID_GetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetNameID;
                }
                private static void _AssetNameID_OnValueChanged(global::LightSwitchApplication.AssetName e)
                {
                    e.AssetNameID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Data> c, global::LightSwitchApplication.AssetName.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.AssetName e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.AssetName e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.AssetName e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Entry
                    Descritpion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Entry(
                        "Descritpion",
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Descritpion_Stub,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Descritpion_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Descritpion_Validate,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Descritpion_GetImplementationValue,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Descritpion_SetImplementationValue,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Descritpion_OnValueChanged);
                private static void _Descritpion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Data> c, global::LightSwitchApplication.AssetName.DetailsClass d, object sf)
                {
                    c(d, ref d._Descritpion, sf);
                }
                private static bool _Descritpion_ComputeIsReadOnly(global::LightSwitchApplication.AssetName e)
                {
                    bool result = false;
                    e.Descritpion_IsReadOnly(ref result);
                    return result;
                }
                private static void _Descritpion_Validate(global::LightSwitchApplication.AssetName e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Descritpion_Validate(r);
                }
                private static string _Descritpion_GetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    return d.ImplementationEntity.Descritpion;
                }
                private static void _Descritpion_SetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Descritpion = v;
                }
                private static void _Descritpion_OnValueChanged(global::LightSwitchApplication.AssetName e)
                {
                    e.Descritpion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.Asset>.Entry
                    Assets = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.Asset>.Entry(
                        "Assets",
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Assets_Stub,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Assets_GetReferencedEntities,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._Assets_GetEntityCollection);
                private static void _Assets_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.Asset>.Data> c, global::LightSwitchApplication.AssetName.DetailsClass d, object sf)
                {
                    c(d, ref d._Assets, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Asset> _Assets_GetReferencedEntities(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.Assets, ref d._Assets);
                }
                private static global::System.Collections.IEnumerable _Assets_GetEntityCollection(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    return d.ImplementationEntity.Assets;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.AssetCategory>.Entry
                    AssetCategory = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.AssetCategory>.Entry(
                        "AssetCategory",
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_Stub,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_Validate,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_GetCoreImplementationValue,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_GetImplementationValue,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_SetImplementationValue,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_Refresh,
                        global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties._AssetCategory_OnValueChanged);
                private static void _AssetCategory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssetName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.AssetCategory>.Data> c, global::LightSwitchApplication.AssetName.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetCategory, sf);
                }
                private static bool _AssetCategory_ComputeIsReadOnly(global::LightSwitchApplication.AssetName e)
                {
                    bool result = false;
                    e.AssetCategory_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetCategory_Validate(global::LightSwitchApplication.AssetName e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetCategory_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssetCategory_GetCoreImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetCategory;
                }
                private static global::LightSwitchApplication.AssetCategory _AssetCategory_GetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AssetCategory, global::LightSwitchApplication.AssetCategory.DetailsClass>(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetCategory, ref d._AssetCategory);
                }
                private static void _AssetCategory_SetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass d, global::LightSwitchApplication.AssetCategory v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetCategory, ref d._AssetCategory, (i, ev) => i.AssetCategory = ev, v);
                }
                private static void _AssetCategory_Refresh(global::LightSwitchApplication.AssetName.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.AssetName.DetailsClass.PropertySetProperties.AssetCategory, ref d._AssetCategory);
                }
                private static void _AssetCategory_OnValueChanged(global::LightSwitchApplication.AssetName e)
                {
                    e.AssetCategory_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, long>.Data _AssetNameID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, string>.Data _Descritpion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.Asset>.Data _Assets;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass, global::LightSwitchApplication.AssetCategory>.Data _AssetCategory;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class BrandName : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the BrandName entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BrandName()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BrandName(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.BrandName> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.BrandName.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandName_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandName_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int BrandNameID
        {
            get
            {
                return global::LightSwitchApplication.BrandName.DetailsClass.GetValue(this, global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.BrandNameID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNameID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNameID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNameID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.BrandName.DetailsClass.GetValue(this, global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.BrandName.DetailsClass.SetValue(this, global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Asset> Assets
        {
            get
            {
                return global::LightSwitchApplication.BrandName.DetailsClass.GetValue(this, global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.Assets);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Asset> AssetsQuery
        {
            get
            {
                return global::LightSwitchApplication.BrandName.DetailsClass.GetQuery(this, global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.Assets);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.BrandName,
                global::LightSwitchApplication.BrandName.DetailsClass,
                global::LightSwitchApplication.BrandName.DetailsClass.IImplementation,
                global::LightSwitchApplication.BrandName.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.BrandNameID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass>.Entry
                __BrandNameEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass>.Entry(
                    global::LightSwitchApplication.BrandName.DetailsClass.__BrandName_CreateNew,
                    global::LightSwitchApplication.BrandName.DetailsClass.__BrandName_Created,
                    global::LightSwitchApplication.BrandName.DetailsClass.__BrandName_AllowSaveWithErrors);
            private static global::LightSwitchApplication.BrandName __BrandName_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.BrandName> es)
            {
                return new global::LightSwitchApplication.BrandName(es);
            }
            private static void __BrandName_Created(global::LightSwitchApplication.BrandName e)
            {
                e.BrandName_Created();
            }
            private static bool __BrandName_AllowSaveWithErrors(global::LightSwitchApplication.BrandName e)
            {
                bool result = false;
                e.BrandName_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.BrandName.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, int> BrandNameID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.BrandNameID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, global::LightSwitchApplication.Asset> Assets
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.Assets) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, global::LightSwitchApplication.Asset>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int BrandNameID { get; }
                new string Name { get; set; }
                new global::System.Collections.IEnumerable Assets { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, int>.Entry
                    BrandNameID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, int>.Entry(
                        "BrandNameID",
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._BrandNameID_Stub,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._BrandNameID_ComputeIsReadOnly,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._BrandNameID_Validate,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._BrandNameID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._BrandNameID_OnValueChanged);
                private static void _BrandNameID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BrandName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, int>.Data> c, global::LightSwitchApplication.BrandName.DetailsClass d, object sf)
                {
                    c(d, ref d._BrandNameID, sf);
                }
                private static bool _BrandNameID_ComputeIsReadOnly(global::LightSwitchApplication.BrandName e)
                {
                    bool result = false;
                    e.BrandNameID_IsReadOnly(ref result);
                    return result;
                }
                private static void _BrandNameID_Validate(global::LightSwitchApplication.BrandName e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BrandNameID_Validate(r);
                }
                private static int _BrandNameID_GetImplementationValue(global::LightSwitchApplication.BrandName.DetailsClass d)
                {
                    return d.ImplementationEntity.BrandNameID;
                }
                private static void _BrandNameID_OnValueChanged(global::LightSwitchApplication.BrandName e)
                {
                    e.BrandNameID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BrandName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, string>.Data> c, global::LightSwitchApplication.BrandName.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.BrandName e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.BrandName e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.BrandName.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.BrandName.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.BrandName e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, global::LightSwitchApplication.Asset>.Entry
                    Assets = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, global::LightSwitchApplication.Asset>.Entry(
                        "Assets",
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Assets_Stub,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Assets_GetReferencedEntities,
                        global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties._Assets_GetEntityCollection);
                private static void _Assets_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BrandName.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, global::LightSwitchApplication.Asset>.Data> c, global::LightSwitchApplication.BrandName.DetailsClass d, object sf)
                {
                    c(d, ref d._Assets, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Asset> _Assets_GetReferencedEntities(global::LightSwitchApplication.BrandName.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>(global::LightSwitchApplication.BrandName.DetailsClass.PropertySetProperties.Assets, ref d._Assets);
                }
                private static global::System.Collections.IEnumerable _Assets_GetEntityCollection(global::LightSwitchApplication.BrandName.DetailsClass d)
                {
                    return d.ImplementationEntity.Assets;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, int>.Data _BrandNameID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass, global::LightSwitchApplication.Asset>.Data _Assets;
            
        }
    
        #endregion
    }
    
    #endregion
}
