

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Approval : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Approval entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Approval()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Approval(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Approval> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Approval.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approval_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approval_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long ApprovalID
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> IsApproved
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.IsApproved);
            }
            set
            {
                global::LightSwitchApplication.Approval.DetailsClass.SetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.IsApproved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comments
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Comments);
            }
            set
            {
                global::LightSwitchApplication.Approval.DetailsClass.SetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Comments, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ApprovalEntityType ApprovalEntityType
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalEntityType);
            }
            set
            {
                global::LightSwitchApplication.Approval.DetailsClass.SetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalEntityType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Order Order
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Order);
            }
            set
            {
                global::LightSwitchApplication.Approval.DetailsClass.SetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Order, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.DyeingJO> DyeingJOes
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.DyeingJOes);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.DyeingJO> DyeingJOesQuery
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetQuery(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.DyeingJOes);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.KnittingJO> KnittingJOes
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.KnittingJOes);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.KnittingJO> KnittingJOesQuery
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetQuery(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.KnittingJOes);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.OrderProduct> OrderProducts
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.OrderProducts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.OrderProduct> OrderProductsQuery
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetQuery(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.OrderProducts);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ProductMaterial> ProductMaterials
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ProductMaterials);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProductMaterial> ProductMaterialsQuery
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetQuery(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ProductMaterials);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetValue(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PurchaseOrder> PurchaseOrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Approval.DetailsClass.GetQuery(this, global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Approval,
                global::LightSwitchApplication.Approval.DetailsClass,
                global::LightSwitchApplication.Approval.DetailsClass.IImplementation,
                global::LightSwitchApplication.Approval.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass>.Entry
                __ApprovalEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass>.Entry(
                    global::LightSwitchApplication.Approval.DetailsClass.__Approval_CreateNew,
                    global::LightSwitchApplication.Approval.DetailsClass.__Approval_Created,
                    global::LightSwitchApplication.Approval.DetailsClass.__Approval_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Approval __Approval_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Approval> es)
            {
                return new global::LightSwitchApplication.Approval(es);
            }
            private static void __Approval_Created(global::LightSwitchApplication.Approval e)
            {
                e.Approval_Created();
            }
            private static bool __Approval_AllowSaveWithErrors(global::LightSwitchApplication.Approval e)
            {
                bool result = false;
                e.Approval_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Approval.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, long> ApprovalID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::System.Nullable<bool>> IsApproved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.IsApproved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, string> Comments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Comments) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ApprovalEntityType> ApprovalEntityType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalEntityType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ApprovalEntityType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.Order> Order
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Order) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.Order>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.DyeingJO> DyeingJOes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.DyeingJOes) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.DyeingJO>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.KnittingJO> KnittingJOes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.KnittingJOes) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.KnittingJO>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.OrderProduct> OrderProducts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.OrderProducts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.OrderProduct>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ProductMaterial> ProductMaterials
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ProductMaterials) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ProductMaterial>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.PurchaseOrders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.PurchaseOrder>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new long ApprovalID { get; }
                new global::System.Nullable<bool> IsApproved { get; set; }
                new string Comments { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ApprovalEntityType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Order { get; set; }
                new global::System.Collections.IEnumerable DyeingJOes { get; }
                new global::System.Collections.IEnumerable KnittingJOes { get; }
                new global::System.Collections.IEnumerable OrderProducts { get; }
                new global::System.Collections.IEnumerable ProductMaterials { get; }
                new global::System.Collections.IEnumerable PurchaseOrders { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, long>.Entry
                    ApprovalID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, long>.Entry(
                        "ApprovalID",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalID_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalID_Validate,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalID_OnValueChanged);
                private static void _ApprovalID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, long>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._ApprovalID, sf);
                }
                private static bool _ApprovalID_ComputeIsReadOnly(global::LightSwitchApplication.Approval e)
                {
                    bool result = false;
                    e.ApprovalID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApprovalID_Validate(global::LightSwitchApplication.Approval e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApprovalID_Validate(r);
                }
                private static long _ApprovalID_GetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.ApprovalID;
                }
                private static void _ApprovalID_OnValueChanged(global::LightSwitchApplication.Approval e)
                {
                    e.ApprovalID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::System.Nullable<bool>>.Entry
                    IsApproved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "IsApproved",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._IsApproved_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._IsApproved_ComputeIsReadOnly,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._IsApproved_Validate,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._IsApproved_GetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._IsApproved_SetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._IsApproved_OnValueChanged);
                private static void _IsApproved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._IsApproved, sf);
                }
                private static bool _IsApproved_ComputeIsReadOnly(global::LightSwitchApplication.Approval e)
                {
                    bool result = false;
                    e.IsApproved_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsApproved_Validate(global::LightSwitchApplication.Approval e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsApproved_Validate(r);
                }
                private static global::System.Nullable<bool> _IsApproved_GetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.IsApproved;
                }
                private static void _IsApproved_SetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.IsApproved = v;
                }
                private static void _IsApproved_OnValueChanged(global::LightSwitchApplication.Approval e)
                {
                    e.IsApproved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, string>.Entry
                    Comments = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, string>.Entry(
                        "Comments",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Comments_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Comments_ComputeIsReadOnly,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Comments_Validate,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Comments_GetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Comments_SetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Comments_OnValueChanged);
                private static void _Comments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, string>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._Comments, sf);
                }
                private static bool _Comments_ComputeIsReadOnly(global::LightSwitchApplication.Approval e)
                {
                    bool result = false;
                    e.Comments_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comments_Validate(global::LightSwitchApplication.Approval e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comments_Validate(r);
                }
                private static string _Comments_GetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.Comments;
                }
                private static void _Comments_SetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comments = v;
                }
                private static void _Comments_OnValueChanged(global::LightSwitchApplication.Approval e)
                {
                    e.Comments_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ApprovalEntityType>.Entry
                    ApprovalEntityType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ApprovalEntityType>.Entry(
                        "ApprovalEntityType",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_Validate,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_GetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_SetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_Refresh,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ApprovalEntityType_OnValueChanged);
                private static void _ApprovalEntityType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ApprovalEntityType>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._ApprovalEntityType, sf);
                }
                private static bool _ApprovalEntityType_ComputeIsReadOnly(global::LightSwitchApplication.Approval e)
                {
                    bool result = false;
                    e.ApprovalEntityType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApprovalEntityType_Validate(global::LightSwitchApplication.Approval e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApprovalEntityType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ApprovalEntityType_GetCoreImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.ApprovalEntityType;
                }
                private static global::LightSwitchApplication.ApprovalEntityType _ApprovalEntityType_GetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass>(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalEntityType, ref d._ApprovalEntityType);
                }
                private static void _ApprovalEntityType_SetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d, global::LightSwitchApplication.ApprovalEntityType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalEntityType, ref d._ApprovalEntityType, (i, ev) => i.ApprovalEntityType = ev, v);
                }
                private static void _ApprovalEntityType_Refresh(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ApprovalEntityType, ref d._ApprovalEntityType);
                }
                private static void _ApprovalEntityType_OnValueChanged(global::LightSwitchApplication.Approval e)
                {
                    e.ApprovalEntityType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.Order>.Entry
                    Order = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.Order>.Entry(
                        "Order",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_ComputeIsReadOnly,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_Validate,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_GetCoreImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_GetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_SetImplementationValue,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_Refresh,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._Order_OnValueChanged);
                private static void _Order_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.Order>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._Order, sf);
                }
                private static bool _Order_ComputeIsReadOnly(global::LightSwitchApplication.Approval e)
                {
                    bool result = false;
                    e.Order_IsReadOnly(ref result);
                    return result;
                }
                private static void _Order_Validate(global::LightSwitchApplication.Approval e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Order_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Order_GetCoreImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.Order;
                }
                private static global::LightSwitchApplication.Order _Order_GetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Order, ref d._Order);
                }
                private static void _Order_SetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass d, global::LightSwitchApplication.Order v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Order, ref d._Order, (i, ev) => i.Order = ev, v);
                }
                private static void _Order_Refresh(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.Order, ref d._Order);
                }
                private static void _Order_OnValueChanged(global::LightSwitchApplication.Approval e)
                {
                    e.Order_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.DyeingJO>.Entry
                    DyeingJOes = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.DyeingJO>.Entry(
                        "DyeingJOes",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._DyeingJOes_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._DyeingJOes_GetReferencedEntities,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._DyeingJOes_GetEntityCollection);
                private static void _DyeingJOes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.DyeingJO>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._DyeingJOes, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DyeingJO> _DyeingJOes_GetReferencedEntities(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.DyeingJO, global::LightSwitchApplication.DyeingJO.DetailsClass>(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.DyeingJOes, ref d._DyeingJOes);
                }
                private static global::System.Collections.IEnumerable _DyeingJOes_GetEntityCollection(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.DyeingJOes;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.KnittingJO>.Entry
                    KnittingJOes = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.KnittingJO>.Entry(
                        "KnittingJOes",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._KnittingJOes_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._KnittingJOes_GetReferencedEntities,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._KnittingJOes_GetEntityCollection);
                private static void _KnittingJOes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.KnittingJO>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._KnittingJOes, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.KnittingJO> _KnittingJOes_GetReferencedEntities(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.KnittingJO, global::LightSwitchApplication.KnittingJO.DetailsClass>(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.KnittingJOes, ref d._KnittingJOes);
                }
                private static global::System.Collections.IEnumerable _KnittingJOes_GetEntityCollection(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.KnittingJOes;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.OrderProduct>.Entry
                    OrderProducts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.OrderProduct>.Entry(
                        "OrderProducts",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._OrderProducts_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._OrderProducts_GetReferencedEntities,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._OrderProducts_GetEntityCollection);
                private static void _OrderProducts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.OrderProduct>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderProducts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.OrderProduct> _OrderProducts_GetReferencedEntities(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.OrderProduct, global::LightSwitchApplication.OrderProduct.DetailsClass>(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.OrderProducts, ref d._OrderProducts);
                }
                private static global::System.Collections.IEnumerable _OrderProducts_GetEntityCollection(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderProducts;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ProductMaterial>.Entry
                    ProductMaterials = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ProductMaterial>.Entry(
                        "ProductMaterials",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ProductMaterials_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ProductMaterials_GetReferencedEntities,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._ProductMaterials_GetEntityCollection);
                private static void _ProductMaterials_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ProductMaterial>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductMaterials, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductMaterial> _ProductMaterials_GetReferencedEntities(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ProductMaterial, global::LightSwitchApplication.ProductMaterial.DetailsClass>(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.ProductMaterials, ref d._ProductMaterials);
                }
                private static global::System.Collections.IEnumerable _ProductMaterials_GetEntityCollection(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductMaterials;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry
                    PurchaseOrders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry(
                        "PurchaseOrders",
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._PurchaseOrders_Stub,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._PurchaseOrders_GetReferencedEntities,
                        global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties._PurchaseOrders_GetEntityCollection);
                private static void _PurchaseOrders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Approval.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data> c, global::LightSwitchApplication.Approval.DetailsClass d, object sf)
                {
                    c(d, ref d._PurchaseOrders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder> _PurchaseOrders_GetReferencedEntities(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.PurchaseOrder, global::LightSwitchApplication.PurchaseOrder.DetailsClass>(global::LightSwitchApplication.Approval.DetailsClass.PropertySetProperties.PurchaseOrders, ref d._PurchaseOrders);
                }
                private static global::System.Collections.IEnumerable _PurchaseOrders_GetEntityCollection(global::LightSwitchApplication.Approval.DetailsClass d)
                {
                    return d.ImplementationEntity.PurchaseOrders;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, long>.Data _ApprovalID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::System.Nullable<bool>>.Data _IsApproved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, string>.Data _Comments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ApprovalEntityType>.Data _ApprovalEntityType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.Order>.Data _Order;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.DyeingJO>.Data _DyeingJOes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.KnittingJO>.Data _KnittingJOes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.OrderProduct>.Data _OrderProducts;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.ProductMaterial>.Data _ProductMaterials;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data _PurchaseOrders;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class ApprovalEntityType : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ApprovalEntityType entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApprovalEntityType()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApprovalEntityType(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ApprovalEntityType> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ApprovalEntityType.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityType_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityType_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte ApprovalEntityTypeID
        {
            get
            {
                return global::LightSwitchApplication.ApprovalEntityType.DetailsClass.GetValue(this, global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.ApprovalEntityTypeID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypeID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypeID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypeID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TypeName
        {
            get
            {
                return global::LightSwitchApplication.ApprovalEntityType.DetailsClass.GetValue(this, global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.TypeName);
            }
            set
            {
                global::LightSwitchApplication.ApprovalEntityType.DetailsClass.SetValue(this, global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.TypeName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TypeName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Approval> Approvals
        {
            get
            {
                return global::LightSwitchApplication.ApprovalEntityType.DetailsClass.GetValue(this, global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.Approvals);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Approval> ApprovalsQuery
        {
            get
            {
                return global::LightSwitchApplication.ApprovalEntityType.DetailsClass.GetQuery(this, global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.Approvals);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ApprovalEntityType,
                global::LightSwitchApplication.ApprovalEntityType.DetailsClass,
                global::LightSwitchApplication.ApprovalEntityType.DetailsClass.IImplementation,
                global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.ApprovalEntityTypeID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass>.Entry
                __ApprovalEntityTypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass>.Entry(
                    global::LightSwitchApplication.ApprovalEntityType.DetailsClass.__ApprovalEntityType_CreateNew,
                    global::LightSwitchApplication.ApprovalEntityType.DetailsClass.__ApprovalEntityType_Created,
                    global::LightSwitchApplication.ApprovalEntityType.DetailsClass.__ApprovalEntityType_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ApprovalEntityType __ApprovalEntityType_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ApprovalEntityType> es)
            {
                return new global::LightSwitchApplication.ApprovalEntityType(es);
            }
            private static void __ApprovalEntityType_Created(global::LightSwitchApplication.ApprovalEntityType e)
            {
                e.ApprovalEntityType_Created();
            }
            private static bool __ApprovalEntityType_AllowSaveWithErrors(global::LightSwitchApplication.ApprovalEntityType e)
            {
                bool result = false;
                e.ApprovalEntityType_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, byte> ApprovalEntityTypeID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.ApprovalEntityTypeID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, byte>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, string> TypeName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.TypeName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::LightSwitchApplication.Approval> Approvals
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.Approvals) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::LightSwitchApplication.Approval>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new byte ApprovalEntityTypeID { get; }
                new string TypeName { get; set; }
                new global::System.Collections.IEnumerable Approvals { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, byte>.Entry
                    ApprovalEntityTypeID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, byte>.Entry(
                        "ApprovalEntityTypeID",
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._ApprovalEntityTypeID_Stub,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._ApprovalEntityTypeID_ComputeIsReadOnly,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._ApprovalEntityTypeID_Validate,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._ApprovalEntityTypeID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._ApprovalEntityTypeID_OnValueChanged);
                private static void _ApprovalEntityTypeID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, byte>.Data> c, global::LightSwitchApplication.ApprovalEntityType.DetailsClass d, object sf)
                {
                    c(d, ref d._ApprovalEntityTypeID, sf);
                }
                private static bool _ApprovalEntityTypeID_ComputeIsReadOnly(global::LightSwitchApplication.ApprovalEntityType e)
                {
                    bool result = false;
                    e.ApprovalEntityTypeID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApprovalEntityTypeID_Validate(global::LightSwitchApplication.ApprovalEntityType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApprovalEntityTypeID_Validate(r);
                }
                private static byte _ApprovalEntityTypeID_GetImplementationValue(global::LightSwitchApplication.ApprovalEntityType.DetailsClass d)
                {
                    return d.ImplementationEntity.ApprovalEntityTypeID;
                }
                private static void _ApprovalEntityTypeID_OnValueChanged(global::LightSwitchApplication.ApprovalEntityType e)
                {
                    e.ApprovalEntityTypeID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, string>.Entry
                    TypeName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, string>.Entry(
                        "TypeName",
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._TypeName_Stub,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._TypeName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._TypeName_Validate,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._TypeName_GetImplementationValue,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._TypeName_SetImplementationValue,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._TypeName_OnValueChanged);
                private static void _TypeName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, string>.Data> c, global::LightSwitchApplication.ApprovalEntityType.DetailsClass d, object sf)
                {
                    c(d, ref d._TypeName, sf);
                }
                private static bool _TypeName_ComputeIsReadOnly(global::LightSwitchApplication.ApprovalEntityType e)
                {
                    bool result = false;
                    e.TypeName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TypeName_Validate(global::LightSwitchApplication.ApprovalEntityType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TypeName_Validate(r);
                }
                private static string _TypeName_GetImplementationValue(global::LightSwitchApplication.ApprovalEntityType.DetailsClass d)
                {
                    return d.ImplementationEntity.TypeName;
                }
                private static void _TypeName_SetImplementationValue(global::LightSwitchApplication.ApprovalEntityType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TypeName = v;
                }
                private static void _TypeName_OnValueChanged(global::LightSwitchApplication.ApprovalEntityType e)
                {
                    e.TypeName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::LightSwitchApplication.Approval>.Entry
                    Approvals = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::LightSwitchApplication.Approval>.Entry(
                        "Approvals",
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._Approvals_Stub,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._Approvals_GetReferencedEntities,
                        global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties._Approvals_GetEntityCollection);
                private static void _Approvals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::LightSwitchApplication.Approval>.Data> c, global::LightSwitchApplication.ApprovalEntityType.DetailsClass d, object sf)
                {
                    c(d, ref d._Approvals, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Approval> _Approvals_GetReferencedEntities(global::LightSwitchApplication.ApprovalEntityType.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Approval, global::LightSwitchApplication.Approval.DetailsClass>(global::LightSwitchApplication.ApprovalEntityType.DetailsClass.PropertySetProperties.Approvals, ref d._Approvals);
                }
                private static global::System.Collections.IEnumerable _Approvals_GetEntityCollection(global::LightSwitchApplication.ApprovalEntityType.DetailsClass d)
                {
                    return d.ImplementationEntity.Approvals;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, byte>.Data _ApprovalEntityTypeID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, string>.Data _TypeName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ApprovalEntityType, global::LightSwitchApplication.ApprovalEntityType.DetailsClass, global::LightSwitchApplication.Approval>.Data _Approvals;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Asset : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Asset entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Asset()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Asset(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Asset> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Asset.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Asset_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Asset_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long AssetID
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InvoiceDate);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InvoiceDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string InvoiceNumber
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InvoiceNumber);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InvoiceNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ValueInINR
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.ValueInINR);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.ValueInINR, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ValueInINR_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ValueInINR_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ValueInINR_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Quantity
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Quantity);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Quantity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AssetName AssetName
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetName);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.BrandName BrandName
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.BrandName);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.BrandName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Company Company
        {
            get
            {
                return global::LightSwitchApplication.Asset.DetailsClass.GetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Company);
            }
            set
            {
                global::LightSwitchApplication.Asset.DetailsClass.SetValue(this, global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Company, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Asset,
                global::LightSwitchApplication.Asset.DetailsClass,
                global::LightSwitchApplication.Asset.DetailsClass.IImplementation,
                global::LightSwitchApplication.Asset.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>.Entry
                __AssetEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>.Entry(
                    global::LightSwitchApplication.Asset.DetailsClass.__Asset_CreateNew,
                    global::LightSwitchApplication.Asset.DetailsClass.__Asset_Created,
                    global::LightSwitchApplication.Asset.DetailsClass.__Asset_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Asset __Asset_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Asset> es)
            {
                return new global::LightSwitchApplication.Asset(es);
            }
            private static void __Asset_Created(global::LightSwitchApplication.Asset e)
            {
                e.Asset_Created();
            }
            private static bool __Asset_AllowSaveWithErrors(global::LightSwitchApplication.Asset e)
            {
                bool result = false;
                e.Asset_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Asset.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, long> AssetID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>> InvoiceDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InvoiceDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string> InvoiceNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.InvoiceNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal> ValueInINR
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.ValueInINR) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal> Quantity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Quantity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetName> AssetName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetName) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetName>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.BrandName> BrandName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.BrandName) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.BrandName>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.Company> Company
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Company) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.Company>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new long AssetID { get; }
                new global::System.Nullable<global::System.DateTime> InvoiceDate { get; set; }
                new string InvoiceNumber { get; set; }
                new decimal ValueInINR { get; set; }
                new decimal Quantity { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssetName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation BrandName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Company { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, long>.Entry
                    AssetID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, long>.Entry(
                        "AssetID",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetID_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetID_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetID_OnValueChanged);
                private static void _AssetID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, long>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetID, sf);
                }
                private static bool _AssetID_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.AssetID_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetID_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetID_Validate(r);
                }
                private static long _AssetID_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetID;
                }
                private static void _AssetID_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.AssetID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    InvoiceDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "InvoiceDate",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceDate_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceDate_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceDate_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceDate_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceDate_OnValueChanged);
                private static void _InvoiceDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._InvoiceDate, sf);
                }
                private static bool _InvoiceDate_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.InvoiceDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _InvoiceDate_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InvoiceDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _InvoiceDate_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.InvoiceDate;
                }
                private static void _InvoiceDate_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.InvoiceDate = global::LightSwitchApplication.Asset.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _InvoiceDate_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.InvoiceDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry
                    InvoiceNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Entry(
                        "InvoiceNumber",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceNumber_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceNumber_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceNumber_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceNumber_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._InvoiceNumber_OnValueChanged);
                private static void _InvoiceNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._InvoiceNumber, sf);
                }
                private static bool _InvoiceNumber_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.InvoiceNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _InvoiceNumber_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InvoiceNumber_Validate(r);
                }
                private static string _InvoiceNumber_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.InvoiceNumber;
                }
                private static void _InvoiceNumber_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, string v)
                {
                    d.ImplementationEntity.InvoiceNumber = v;
                }
                private static void _InvoiceNumber_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.InvoiceNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Entry
                    ValueInINR = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Entry(
                        "ValueInINR",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ValueInINR_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ValueInINR_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ValueInINR_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ValueInINR_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ValueInINR_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._ValueInINR_OnValueChanged);
                private static void _ValueInINR_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._ValueInINR, sf);
                }
                private static bool _ValueInINR_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.ValueInINR_IsReadOnly(ref result);
                    return result;
                }
                private static void _ValueInINR_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ValueInINR_Validate(r);
                }
                private static decimal _ValueInINR_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.ValueInINR;
                }
                private static void _ValueInINR_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.ValueInINR = v;
                }
                private static void _ValueInINR_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.ValueInINR_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Entry
                    Quantity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Entry(
                        "Quantity",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Quantity_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Quantity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Quantity_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Quantity_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Quantity_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Quantity_OnValueChanged);
                private static void _Quantity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Quantity, sf);
                }
                private static bool _Quantity_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Quantity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Quantity_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Quantity_Validate(r);
                }
                private static decimal _Quantity_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Quantity;
                }
                private static void _Quantity_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.Quantity = v;
                }
                private static void _Quantity_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Quantity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetName>.Entry
                    AssetName = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetName>.Entry(
                        "AssetName",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_GetCoreImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_Refresh,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._AssetName_OnValueChanged);
                private static void _AssetName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetName>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._AssetName, sf);
                }
                private static bool _AssetName_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.AssetName_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssetName_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssetName_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssetName_GetCoreImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.AssetName;
                }
                private static global::LightSwitchApplication.AssetName _AssetName_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AssetName, global::LightSwitchApplication.AssetName.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetName, ref d._AssetName);
                }
                private static void _AssetName_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::LightSwitchApplication.AssetName v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetName, ref d._AssetName, (i, ev) => i.AssetName = ev, v);
                }
                private static void _AssetName_Refresh(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.AssetName, ref d._AssetName);
                }
                private static void _AssetName_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.AssetName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.BrandName>.Entry
                    BrandName = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.BrandName>.Entry(
                        "BrandName",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_GetCoreImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_Refresh,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._BrandName_OnValueChanged);
                private static void _BrandName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.BrandName>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._BrandName, sf);
                }
                private static bool _BrandName_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.BrandName_IsReadOnly(ref result);
                    return result;
                }
                private static void _BrandName_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BrandName_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _BrandName_GetCoreImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.BrandName;
                }
                private static global::LightSwitchApplication.BrandName _BrandName_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.BrandName, global::LightSwitchApplication.BrandName.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.BrandName, ref d._BrandName);
                }
                private static void _BrandName_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::LightSwitchApplication.BrandName v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.BrandName, ref d._BrandName, (i, ev) => i.BrandName = ev, v);
                }
                private static void _BrandName_Refresh(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.BrandName, ref d._BrandName);
                }
                private static void _BrandName_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.BrandName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.Company>.Entry
                    Company = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.Company>.Entry(
                        "Company",
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_Stub,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_ComputeIsReadOnly,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_Validate,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_GetCoreImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_GetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_SetImplementationValue,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_Refresh,
                        global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties._Company_OnValueChanged);
                private static void _Company_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Asset.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.Company>.Data> c, global::LightSwitchApplication.Asset.DetailsClass d, object sf)
                {
                    c(d, ref d._Company, sf);
                }
                private static bool _Company_ComputeIsReadOnly(global::LightSwitchApplication.Asset e)
                {
                    bool result = false;
                    e.Company_IsReadOnly(ref result);
                    return result;
                }
                private static void _Company_Validate(global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Company_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Company_GetCoreImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.ImplementationEntity.Company;
                }
                private static global::LightSwitchApplication.Company _Company_GetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass d, global::LightSwitchApplication.Company v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Company, ref d._Company, (i, ev) => i.Company = ev, v);
                }
                private static void _Company_Refresh(global::LightSwitchApplication.Asset.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Asset.DetailsClass.PropertySetProperties.Company, ref d._Company);
                }
                private static void _Company_OnValueChanged(global::LightSwitchApplication.Asset e)
                {
                    e.Company_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, long>.Data _AssetID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _InvoiceDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, string>.Data _InvoiceNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Data _ValueInINR;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, decimal>.Data _Quantity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.AssetName>.Data _AssetName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.BrandName>.Data _BrandName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass, global::LightSwitchApplication.Company>.Data _Company;
            
        }
    
        #endregion
    }
    
    #endregion
}
