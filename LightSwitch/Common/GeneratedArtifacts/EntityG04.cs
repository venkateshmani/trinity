

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Company : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Company entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Company()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Company(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Company> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Company.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int CompanyID
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string c_Alias
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.c_Alias);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.c_Alias, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Alias_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Alias_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void c_Alias_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address1);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address2);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string State
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.State);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.State, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Country
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Country);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Country, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ZipCode
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ZipCode);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ZipCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZipCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Telephone
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Telephone);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Telephone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fax
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Mobile
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Mobile);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Mobile, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mobile_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mobile_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mobile_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmaiID
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.EmaiID);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.EmaiID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmaiID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmaiID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmaiID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TIN
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.TIN);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.TIN, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TIN_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TIN_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TIN_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CST
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CST);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CST, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CST_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CST_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CST_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Asset> Assets
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Assets);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Asset> AssetsQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Assets);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.CompanyType CompanyType
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.DyeingJO> DyeingJOes
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DyeingJOes);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.DyeingJO> DyeingJOesQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DyeingJOes);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Invoice> Invoices
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Invoices);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Invoice> InvoicesQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Invoices);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.JobOrder> JobOrders
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobOrders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.JobOrder> JobOrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobOrders);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.KnittingJO> KnittingJOes
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.KnittingJOes);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.KnittingJO> KnittingJOesQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.KnittingJOes);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Order> Orders
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Order> OrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Order> Orders1
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders1);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Order> Orders1Query
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders1);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ProductMaterialItem> ProductMaterialItems
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ProductMaterialItems);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProductMaterialItem> ProductMaterialItemsQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ProductMaterialItems);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PurchaseOrder> PurchaseOrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Company,
                global::LightSwitchApplication.Company.DetailsClass,
                global::LightSwitchApplication.Company.DetailsClass.IImplementation,
                global::LightSwitchApplication.Company.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>.Entry
                __CompanyEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>.Entry(
                    global::LightSwitchApplication.Company.DetailsClass.__Company_CreateNew,
                    global::LightSwitchApplication.Company.DetailsClass.__Company_Created,
                    global::LightSwitchApplication.Company.DetailsClass.__Company_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Company __Company_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Company> es)
            {
                return new global::LightSwitchApplication.Company(es);
            }
            private static void __Company_Created(global::LightSwitchApplication.Company e)
            {
                e.Company_Created();
            }
            private static bool __Company_AllowSaveWithErrors(global::LightSwitchApplication.Company e)
            {
                bool result = false;
                e.Company_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Company.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int> CompanyID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> c_Alias
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.c_Alias) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Address1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Address2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Address2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.State) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Country
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Country) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> ZipCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ZipCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Telephone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Telephone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Mobile
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Mobile) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> EmaiID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.EmaiID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> TIN
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.TIN) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> CST
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CST) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Asset> Assets
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Assets) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Asset>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.CompanyType> CompanyType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.CompanyType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.DyeingJO> DyeingJOes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DyeingJOes) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.DyeingJO>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Invoice> Invoices
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Invoices) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Invoice>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobOrder> JobOrders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobOrders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobOrder>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.KnittingJO> KnittingJOes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.KnittingJOes) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.KnittingJO>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order> Orders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order> Orders1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders1) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.ProductMaterialItem> ProductMaterialItems
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ProductMaterialItems) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.ProductMaterialItem>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder> PurchaseOrders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int CompanyID { get; }
                new string Name { get; set; }
                new string c_Alias { get; set; }
                new string Address1 { get; set; }
                new string Address2 { get; set; }
                new string City { get; set; }
                new string State { get; set; }
                new string Country { get; set; }
                new string ZipCode { get; set; }
                new string Telephone { get; set; }
                new string Fax { get; set; }
                new string Mobile { get; set; }
                new string EmaiID { get; set; }
                new string TIN { get; set; }
                new string CST { get; set; }
                new global::System.Collections.IEnumerable Assets { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation CompanyType { get; set; }
                new global::System.Collections.IEnumerable DyeingJOes { get; }
                new global::System.Collections.IEnumerable Invoices { get; }
                new global::System.Collections.IEnumerable JobOrders { get; }
                new global::System.Collections.IEnumerable KnittingJOes { get; }
                new global::System.Collections.IEnumerable Orders { get; }
                new global::System.Collections.IEnumerable Orders1 { get; }
                new global::System.Collections.IEnumerable ProductMaterialItems { get; }
                new global::System.Collections.IEnumerable PurchaseOrders { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Entry
                    CompanyID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Entry(
                        "CompanyID",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyID_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyID_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyID_OnValueChanged);
                private static void _CompanyID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._CompanyID, sf);
                }
                private static bool _CompanyID_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.CompanyID_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompanyID_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompanyID_Validate(r);
                }
                private static int _CompanyID_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.CompanyID;
                }
                private static void _CompanyID_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.CompanyID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    c_Alias = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "c_Alias",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._c_Alias_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._c_Alias_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._c_Alias_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._c_Alias_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._c_Alias_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._c_Alias_OnValueChanged);
                private static void _c_Alias_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._c_Alias, sf);
                }
                private static bool _c_Alias_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.c_Alias_IsReadOnly(ref result);
                    return result;
                }
                private static void _c_Alias_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.c_Alias_Validate(r);
                }
                private static string _c_Alias_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.c_Alias;
                }
                private static void _c_Alias_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.c_Alias = v;
                }
                private static void _c_Alias_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.c_Alias_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Address1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Address1",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address1_OnValueChanged);
                private static void _Address1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1, sf);
                }
                private static bool _Address1_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Address1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Validate(r);
                }
                private static string _Address1_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1;
                }
                private static void _Address1_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1 = v;
                }
                private static void _Address1_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Address1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Address2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Address2",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Address2_OnValueChanged);
                private static void _Address2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2, sf);
                }
                private static bool _Address2_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Address2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Validate(r);
                }
                private static string _Address2_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2;
                }
                private static void _Address2_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2 = v;
                }
                private static void _Address2_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Address2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    State = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "State",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._State_OnValueChanged);
                private static void _State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._State, sf);
                }
                private static bool _State_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.State_IsReadOnly(ref result);
                    return result;
                }
                private static void _State_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.State_Validate(r);
                }
                private static string _State_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.State;
                }
                private static void _State_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.State = v;
                }
                private static void _State_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.State_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Country = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Country",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Country_OnValueChanged);
                private static void _Country_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Country, sf);
                }
                private static bool _Country_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Country_IsReadOnly(ref result);
                    return result;
                }
                private static void _Country_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Country_Validate(r);
                }
                private static string _Country_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Country;
                }
                private static void _Country_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Country = v;
                }
                private static void _Country_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Country_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    ZipCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "ZipCode",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ZipCode_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ZipCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ZipCode_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ZipCode_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ZipCode_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ZipCode_OnValueChanged);
                private static void _ZipCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._ZipCode, sf);
                }
                private static bool _ZipCode_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.ZipCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _ZipCode_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ZipCode_Validate(r);
                }
                private static string _ZipCode_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.ZipCode;
                }
                private static void _ZipCode_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ZipCode = v;
                }
                private static void _ZipCode_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.ZipCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Telephone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Telephone",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Telephone_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Telephone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Telephone_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Telephone_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Telephone_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Telephone_OnValueChanged);
                private static void _Telephone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Telephone, sf);
                }
                private static bool _Telephone_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Telephone_IsReadOnly(ref result);
                    return result;
                }
                private static void _Telephone_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Telephone_Validate(r);
                }
                private static string _Telephone_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Telephone;
                }
                private static void _Telephone_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Telephone = v;
                }
                private static void _Telephone_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Telephone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Fax",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_OnValueChanged);
                private static void _Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Fax, sf);
                }
                private static bool _Fax_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Fax_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Fax_Validate(r);
                }
                private static string _Fax_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Fax;
                }
                private static void _Fax_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Fax = v;
                }
                private static void _Fax_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Mobile = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Mobile",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Mobile_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Mobile_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Mobile_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Mobile_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Mobile_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Mobile_OnValueChanged);
                private static void _Mobile_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Mobile, sf);
                }
                private static bool _Mobile_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Mobile_IsReadOnly(ref result);
                    return result;
                }
                private static void _Mobile_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Mobile_Validate(r);
                }
                private static string _Mobile_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Mobile;
                }
                private static void _Mobile_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Mobile = v;
                }
                private static void _Mobile_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Mobile_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    EmaiID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "EmaiID",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._EmaiID_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._EmaiID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._EmaiID_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._EmaiID_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._EmaiID_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._EmaiID_OnValueChanged);
                private static void _EmaiID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._EmaiID, sf);
                }
                private static bool _EmaiID_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.EmaiID_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmaiID_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmaiID_Validate(r);
                }
                private static string _EmaiID_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.EmaiID;
                }
                private static void _EmaiID_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EmaiID = v;
                }
                private static void _EmaiID_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.EmaiID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    TIN = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "TIN",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TIN_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TIN_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TIN_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TIN_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TIN_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TIN_OnValueChanged);
                private static void _TIN_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._TIN, sf);
                }
                private static bool _TIN_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.TIN_IsReadOnly(ref result);
                    return result;
                }
                private static void _TIN_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TIN_Validate(r);
                }
                private static string _TIN_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.TIN;
                }
                private static void _TIN_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TIN = v;
                }
                private static void _TIN_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.TIN_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    CST = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "CST",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CST_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CST_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CST_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CST_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CST_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CST_OnValueChanged);
                private static void _CST_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._CST, sf);
                }
                private static bool _CST_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.CST_IsReadOnly(ref result);
                    return result;
                }
                private static void _CST_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CST_Validate(r);
                }
                private static string _CST_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.CST;
                }
                private static void _CST_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CST = v;
                }
                private static void _CST_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.CST_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Asset>.Entry
                    Assets = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Asset>.Entry(
                        "Assets",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Assets_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Assets_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Assets_GetEntityCollection);
                private static void _Assets_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Asset>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Assets, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Asset> _Assets_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Asset, global::LightSwitchApplication.Asset.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Assets, ref d._Assets);
                }
                private static global::System.Collections.IEnumerable _Assets_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Assets;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.CompanyType>.Entry
                    CompanyType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.CompanyType>.Entry(
                        "CompanyType",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_Refresh,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyType_OnValueChanged);
                private static void _CompanyType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.CompanyType>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._CompanyType, sf);
                }
                private static bool _CompanyType_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.CompanyType_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompanyType_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompanyType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _CompanyType_GetCoreImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.CompanyType;
                }
                private static global::LightSwitchApplication.CompanyType _CompanyType_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType, ref d._CompanyType);
                }
                private static void _CompanyType_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::LightSwitchApplication.CompanyType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType, ref d._CompanyType, (i, ev) => i.CompanyType = ev, v);
                }
                private static void _CompanyType_Refresh(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyType, ref d._CompanyType);
                }
                private static void _CompanyType_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.CompanyType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.DyeingJO>.Entry
                    DyeingJOes = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.DyeingJO>.Entry(
                        "DyeingJOes",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DyeingJOes_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DyeingJOes_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._DyeingJOes_GetEntityCollection);
                private static void _DyeingJOes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.DyeingJO>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._DyeingJOes, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DyeingJO> _DyeingJOes_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.DyeingJO, global::LightSwitchApplication.DyeingJO.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.DyeingJOes, ref d._DyeingJOes);
                }
                private static global::System.Collections.IEnumerable _DyeingJOes_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.DyeingJOes;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Invoice>.Entry
                    Invoices = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Invoice>.Entry(
                        "Invoices",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Invoices_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Invoices_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Invoices_GetEntityCollection);
                private static void _Invoices_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Invoice>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Invoices, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> _Invoices_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Invoice, global::LightSwitchApplication.Invoice.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Invoices, ref d._Invoices);
                }
                private static global::System.Collections.IEnumerable _Invoices_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Invoices;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobOrder>.Entry
                    JobOrders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobOrder>.Entry(
                        "JobOrders",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._JobOrders_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._JobOrders_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._JobOrders_GetEntityCollection);
                private static void _JobOrders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobOrder>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._JobOrders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.JobOrder> _JobOrders_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.JobOrder, global::LightSwitchApplication.JobOrder.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.JobOrders, ref d._JobOrders);
                }
                private static global::System.Collections.IEnumerable _JobOrders_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.JobOrders;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.KnittingJO>.Entry
                    KnittingJOes = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.KnittingJO>.Entry(
                        "KnittingJOes",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._KnittingJOes_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._KnittingJOes_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._KnittingJOes_GetEntityCollection);
                private static void _KnittingJOes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.KnittingJO>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._KnittingJOes, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.KnittingJO> _KnittingJOes_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.KnittingJO, global::LightSwitchApplication.KnittingJO.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.KnittingJOes, ref d._KnittingJOes);
                }
                private static global::System.Collections.IEnumerable _KnittingJOes_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.KnittingJOes;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Entry
                    Orders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Entry(
                        "Orders",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Orders_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Orders_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Orders_GetEntityCollection);
                private static void _Orders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Orders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> _Orders_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders, ref d._Orders);
                }
                private static global::System.Collections.IEnumerable _Orders_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Orders;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Entry
                    Orders1 = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Entry(
                        "Orders1",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Orders1_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Orders1_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Orders1_GetEntityCollection);
                private static void _Orders1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Orders1, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> _Orders1_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Orders1, ref d._Orders1);
                }
                private static global::System.Collections.IEnumerable _Orders1_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Orders1;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.ProductMaterialItem>.Entry
                    ProductMaterialItems = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.ProductMaterialItem>.Entry(
                        "ProductMaterialItems",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ProductMaterialItems_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ProductMaterialItems_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ProductMaterialItems_GetEntityCollection);
                private static void _ProductMaterialItems_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.ProductMaterialItem>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductMaterialItems, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductMaterialItem> _ProductMaterialItems_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ProductMaterialItem, global::LightSwitchApplication.ProductMaterialItem.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ProductMaterialItems, ref d._ProductMaterialItems);
                }
                private static global::System.Collections.IEnumerable _ProductMaterialItems_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductMaterialItems;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry
                    PurchaseOrders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Entry(
                        "PurchaseOrders",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._PurchaseOrders_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._PurchaseOrders_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._PurchaseOrders_GetEntityCollection);
                private static void _PurchaseOrders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._PurchaseOrders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder> _PurchaseOrders_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.PurchaseOrder, global::LightSwitchApplication.PurchaseOrder.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.PurchaseOrders, ref d._PurchaseOrders);
                }
                private static global::System.Collections.IEnumerable _PurchaseOrders_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.PurchaseOrders;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Data _CompanyID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _c_Alias;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Address1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Address2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Country;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _ZipCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Telephone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Mobile;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _EmaiID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _TIN;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _CST;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Asset>.Data _Assets;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.CompanyType>.Data _CompanyType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.DyeingJO>.Data _DyeingJOes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Invoice>.Data _Invoices;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.JobOrder>.Data _JobOrders;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.KnittingJO>.Data _KnittingJOes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Data _Orders;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Order>.Data _Orders1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.ProductMaterialItem>.Data _ProductMaterialItems;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.PurchaseOrder>.Data _PurchaseOrders;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CompanyType : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the CompanyType entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CompanyType()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CompanyType(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CompanyType> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.CompanyType.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyType_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public short CompanyTypeID
        {
            get
            {
                return global::LightSwitchApplication.CompanyType.DetailsClass.GetValue(this, global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.CompanyTypeID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypeID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypeID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypeID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.CompanyType.DetailsClass.GetValue(this, global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.CompanyType.DetailsClass.SetValue(this, global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Company> Companies
        {
            get
            {
                return global::LightSwitchApplication.CompanyType.DetailsClass.GetValue(this, global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.Companies);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Company> CompaniesQuery
        {
            get
            {
                return global::LightSwitchApplication.CompanyType.DetailsClass.GetQuery(this, global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.Companies);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.CompanyType,
                global::LightSwitchApplication.CompanyType.DetailsClass,
                global::LightSwitchApplication.CompanyType.DetailsClass.IImplementation,
                global::LightSwitchApplication.CompanyType.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.CompanyTypeID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass>.Entry
                __CompanyTypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass>.Entry(
                    global::LightSwitchApplication.CompanyType.DetailsClass.__CompanyType_CreateNew,
                    global::LightSwitchApplication.CompanyType.DetailsClass.__CompanyType_Created,
                    global::LightSwitchApplication.CompanyType.DetailsClass.__CompanyType_AllowSaveWithErrors);
            private static global::LightSwitchApplication.CompanyType __CompanyType_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CompanyType> es)
            {
                return new global::LightSwitchApplication.CompanyType(es);
            }
            private static void __CompanyType_Created(global::LightSwitchApplication.CompanyType e)
            {
                e.CompanyType_Created();
            }
            private static bool __CompanyType_AllowSaveWithErrors(global::LightSwitchApplication.CompanyType e)
            {
                bool result = false;
                e.CompanyType_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.CompanyType.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, short> CompanyTypeID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.CompanyTypeID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, short>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, global::LightSwitchApplication.Company> Companies
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.Companies) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, global::LightSwitchApplication.Company>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new short CompanyTypeID { get; }
                new string Type { get; set; }
                new global::System.Collections.IEnumerable Companies { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, short>.Entry
                    CompanyTypeID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, short>.Entry(
                        "CompanyTypeID",
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._CompanyTypeID_Stub,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._CompanyTypeID_ComputeIsReadOnly,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._CompanyTypeID_Validate,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._CompanyTypeID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._CompanyTypeID_OnValueChanged);
                private static void _CompanyTypeID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CompanyType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, short>.Data> c, global::LightSwitchApplication.CompanyType.DetailsClass d, object sf)
                {
                    c(d, ref d._CompanyTypeID, sf);
                }
                private static bool _CompanyTypeID_ComputeIsReadOnly(global::LightSwitchApplication.CompanyType e)
                {
                    bool result = false;
                    e.CompanyTypeID_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompanyTypeID_Validate(global::LightSwitchApplication.CompanyType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompanyTypeID_Validate(r);
                }
                private static short _CompanyTypeID_GetImplementationValue(global::LightSwitchApplication.CompanyType.DetailsClass d)
                {
                    return d.ImplementationEntity.CompanyTypeID;
                }
                private static void _CompanyTypeID_OnValueChanged(global::LightSwitchApplication.CompanyType e)
                {
                    e.CompanyTypeID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CompanyType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, string>.Data> c, global::LightSwitchApplication.CompanyType.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.CompanyType e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.CompanyType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.CompanyType.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.CompanyType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.CompanyType e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, global::LightSwitchApplication.Company>.Entry
                    Companies = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, global::LightSwitchApplication.Company>.Entry(
                        "Companies",
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Companies_Stub,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Companies_GetReferencedEntities,
                        global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties._Companies_GetEntityCollection);
                private static void _Companies_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CompanyType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, global::LightSwitchApplication.Company>.Data> c, global::LightSwitchApplication.CompanyType.DetailsClass d, object sf)
                {
                    c(d, ref d._Companies, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> _Companies_GetReferencedEntities(global::LightSwitchApplication.CompanyType.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>(global::LightSwitchApplication.CompanyType.DetailsClass.PropertySetProperties.Companies, ref d._Companies);
                }
                private static global::System.Collections.IEnumerable _Companies_GetEntityCollection(global::LightSwitchApplication.CompanyType.DetailsClass d)
                {
                    return d.ImplementationEntity.Companies;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, short>.Data _CompanyTypeID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.CompanyType, global::LightSwitchApplication.CompanyType.DetailsClass, global::LightSwitchApplication.Company>.Data _Companies;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Country : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Country entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Country()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Country(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Country> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Country.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int CountryID
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetValue(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.CountryID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetValue(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Country.DetailsClass.SetValue(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Invoice> Invoices
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetValue(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Invoice> InvoicesQuery
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetQuery(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Invoice> Invoices1
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetValue(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices1);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Invoice> Invoices1Query
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetQuery(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices1);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ProductCountryWiseBreakUp> ProductCountryWiseBreakUps
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetValue(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.ProductCountryWiseBreakUps);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProductCountryWiseBreakUp> ProductCountryWiseBreakUpsQuery
        {
            get
            {
                return global::LightSwitchApplication.Country.DetailsClass.GetQuery(this, global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.ProductCountryWiseBreakUps);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Country,
                global::LightSwitchApplication.Country.DetailsClass,
                global::LightSwitchApplication.Country.DetailsClass.IImplementation,
                global::LightSwitchApplication.Country.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.CountryID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass>.Entry
                __CountryEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass>.Entry(
                    global::LightSwitchApplication.Country.DetailsClass.__Country_CreateNew,
                    global::LightSwitchApplication.Country.DetailsClass.__Country_Created,
                    global::LightSwitchApplication.Country.DetailsClass.__Country_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Country __Country_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Country> es)
            {
                return new global::LightSwitchApplication.Country(es);
            }
            private static void __Country_Created(global::LightSwitchApplication.Country e)
            {
                e.Country_Created();
            }
            private static bool __Country_AllowSaveWithErrors(global::LightSwitchApplication.Country e)
            {
                bool result = false;
                e.Country_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Country.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, int> CountryID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.CountryID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice> Invoices
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice> Invoices1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices1) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.ProductCountryWiseBreakUp> ProductCountryWiseBreakUps
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.ProductCountryWiseBreakUps) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.ProductCountryWiseBreakUp>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int CountryID { get; }
                new string Name { get; set; }
                new global::System.Collections.IEnumerable Invoices { get; }
                new global::System.Collections.IEnumerable Invoices1 { get; }
                new global::System.Collections.IEnumerable ProductCountryWiseBreakUps { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, int>.Entry
                    CountryID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, int>.Entry(
                        "CountryID",
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._CountryID_Stub,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._CountryID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._CountryID_Validate,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._CountryID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._CountryID_OnValueChanged);
                private static void _CountryID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Country.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, int>.Data> c, global::LightSwitchApplication.Country.DetailsClass d, object sf)
                {
                    c(d, ref d._CountryID, sf);
                }
                private static bool _CountryID_ComputeIsReadOnly(global::LightSwitchApplication.Country e)
                {
                    bool result = false;
                    e.CountryID_IsReadOnly(ref result);
                    return result;
                }
                private static void _CountryID_Validate(global::LightSwitchApplication.Country e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CountryID_Validate(r);
                }
                private static int _CountryID_GetImplementationValue(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.ImplementationEntity.CountryID;
                }
                private static void _CountryID_OnValueChanged(global::LightSwitchApplication.Country e)
                {
                    e.CountryID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Country.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, string>.Data> c, global::LightSwitchApplication.Country.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Country e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Country e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Country.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Country e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Entry
                    Invoices = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Entry(
                        "Invoices",
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Invoices_Stub,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Invoices_GetReferencedEntities,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Invoices_GetEntityCollection);
                private static void _Invoices_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Country.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Data> c, global::LightSwitchApplication.Country.DetailsClass d, object sf)
                {
                    c(d, ref d._Invoices, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> _Invoices_GetReferencedEntities(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Invoice, global::LightSwitchApplication.Invoice.DetailsClass>(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices, ref d._Invoices);
                }
                private static global::System.Collections.IEnumerable _Invoices_GetEntityCollection(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.ImplementationEntity.Invoices;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Entry
                    Invoices1 = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Entry(
                        "Invoices1",
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Invoices1_Stub,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Invoices1_GetReferencedEntities,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._Invoices1_GetEntityCollection);
                private static void _Invoices1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Country.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Data> c, global::LightSwitchApplication.Country.DetailsClass d, object sf)
                {
                    c(d, ref d._Invoices1, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Invoice> _Invoices1_GetReferencedEntities(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Invoice, global::LightSwitchApplication.Invoice.DetailsClass>(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.Invoices1, ref d._Invoices1);
                }
                private static global::System.Collections.IEnumerable _Invoices1_GetEntityCollection(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.ImplementationEntity.Invoices1;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.ProductCountryWiseBreakUp>.Entry
                    ProductCountryWiseBreakUps = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.ProductCountryWiseBreakUp>.Entry(
                        "ProductCountryWiseBreakUps",
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._ProductCountryWiseBreakUps_Stub,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._ProductCountryWiseBreakUps_GetReferencedEntities,
                        global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties._ProductCountryWiseBreakUps_GetEntityCollection);
                private static void _ProductCountryWiseBreakUps_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Country.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.ProductCountryWiseBreakUp>.Data> c, global::LightSwitchApplication.Country.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductCountryWiseBreakUps, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductCountryWiseBreakUp> _ProductCountryWiseBreakUps_GetReferencedEntities(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ProductCountryWiseBreakUp, global::LightSwitchApplication.ProductCountryWiseBreakUp.DetailsClass>(global::LightSwitchApplication.Country.DetailsClass.PropertySetProperties.ProductCountryWiseBreakUps, ref d._ProductCountryWiseBreakUps);
                }
                private static global::System.Collections.IEnumerable _ProductCountryWiseBreakUps_GetEntityCollection(global::LightSwitchApplication.Country.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductCountryWiseBreakUps;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, int>.Data _CountryID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Data _Invoices;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.Invoice>.Data _Invoices1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass, global::LightSwitchApplication.ProductCountryWiseBreakUp>.Data _ProductCountryWiseBreakUps;
            
        }
    
        #endregion
    }
    
    #endregion
}
