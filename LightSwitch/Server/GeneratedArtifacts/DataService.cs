//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the OrderManagerDBData datasource.
    /// </summary>
    public sealed partial class OrderManagerDBDataService
        : global::LightSwitchApplication.OrderManagerDBData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderManagerDBDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Inserting(global::LightSwitchApplication.Approval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Inserted(global::LightSwitchApplication.Approval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Updating(global::LightSwitchApplication.Approval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Updated(global::LightSwitchApplication.Approval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Deleting(global::LightSwitchApplication.Approval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Deleted(global::LightSwitchApplication.Approval entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Validate(global::LightSwitchApplication.Approval entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Approvals_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Approval, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Inserting(global::LightSwitchApplication.ApprovalEntityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Inserted(global::LightSwitchApplication.ApprovalEntityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Updating(global::LightSwitchApplication.ApprovalEntityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Updated(global::LightSwitchApplication.ApprovalEntityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Deleting(global::LightSwitchApplication.ApprovalEntityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Deleted(global::LightSwitchApplication.ApprovalEntityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Validate(global::LightSwitchApplication.ApprovalEntityType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovalEntityTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ApprovalEntityType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Inserting(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Inserted(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Updating(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Updated(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Deleting(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Deleted(global::LightSwitchApplication.Asset entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Validate(global::LightSwitchApplication.Asset entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Assets_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Asset, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Inserting(global::LightSwitchApplication.AssetCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Inserted(global::LightSwitchApplication.AssetCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Updating(global::LightSwitchApplication.AssetCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Updated(global::LightSwitchApplication.AssetCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Deleting(global::LightSwitchApplication.AssetCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Deleted(global::LightSwitchApplication.AssetCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Validate(global::LightSwitchApplication.AssetCategory entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetCategories_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetCategory, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Inserting(global::LightSwitchApplication.AssetName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Inserted(global::LightSwitchApplication.AssetName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Updating(global::LightSwitchApplication.AssetName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Updated(global::LightSwitchApplication.AssetName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Deleting(global::LightSwitchApplication.AssetName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Deleted(global::LightSwitchApplication.AssetName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Validate(global::LightSwitchApplication.AssetName entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssetNames_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetName, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Inserting(global::LightSwitchApplication.BrandName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Inserted(global::LightSwitchApplication.BrandName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Updating(global::LightSwitchApplication.BrandName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Updated(global::LightSwitchApplication.BrandName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Deleting(global::LightSwitchApplication.BrandName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Deleted(global::LightSwitchApplication.BrandName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Validate(global::LightSwitchApplication.BrandName entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrandNames_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BrandName, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Inserting(global::LightSwitchApplication.CartonBox entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Inserted(global::LightSwitchApplication.CartonBox entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Updating(global::LightSwitchApplication.CartonBox entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Updated(global::LightSwitchApplication.CartonBox entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Deleting(global::LightSwitchApplication.CartonBox entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Deleted(global::LightSwitchApplication.CartonBox entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Validate(global::LightSwitchApplication.CartonBox entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CartonBoxes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CartonBox, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Inserting(global::LightSwitchApplication.Color entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Inserted(global::LightSwitchApplication.Color entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Updating(global::LightSwitchApplication.Color entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Updated(global::LightSwitchApplication.Color entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Deleting(global::LightSwitchApplication.Color entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Deleted(global::LightSwitchApplication.Color entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Validate(global::LightSwitchApplication.Color entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Colors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Color, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Inserting(global::LightSwitchApplication.CommissionValueType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Inserted(global::LightSwitchApplication.CommissionValueType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Updating(global::LightSwitchApplication.CommissionValueType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Updated(global::LightSwitchApplication.CommissionValueType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Deleting(global::LightSwitchApplication.CommissionValueType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Deleted(global::LightSwitchApplication.CommissionValueType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Validate(global::LightSwitchApplication.CommissionValueType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommissionValueTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CommissionValueType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updating(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updated(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Validate(global::LightSwitchApplication.Company entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Inserting(global::LightSwitchApplication.CompanyType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Inserted(global::LightSwitchApplication.CompanyType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Updating(global::LightSwitchApplication.CompanyType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Updated(global::LightSwitchApplication.CompanyType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Deleting(global::LightSwitchApplication.CompanyType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Deleted(global::LightSwitchApplication.CompanyType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Validate(global::LightSwitchApplication.CompanyType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CompanyType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Inserting(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Inserted(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Updating(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Updated(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Deleting(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Deleted(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Validate(global::LightSwitchApplication.Country entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Country, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Inserting(global::LightSwitchApplication.Currency entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Inserted(global::LightSwitchApplication.Currency entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Updating(global::LightSwitchApplication.Currency entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Updated(global::LightSwitchApplication.Currency entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Deleting(global::LightSwitchApplication.Currency entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Deleted(global::LightSwitchApplication.Currency entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Validate(global::LightSwitchApplication.Currency entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currencies_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Currency, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Inserting(global::LightSwitchApplication.DyeingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Inserted(global::LightSwitchApplication.DyeingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Updating(global::LightSwitchApplication.DyeingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Updated(global::LightSwitchApplication.DyeingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Deleting(global::LightSwitchApplication.DyeingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Deleted(global::LightSwitchApplication.DyeingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Validate(global::LightSwitchApplication.DyeingJO entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJOes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DyeingJO, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Inserting(global::LightSwitchApplication.DyeingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Inserted(global::LightSwitchApplication.DyeingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Updating(global::LightSwitchApplication.DyeingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Updated(global::LightSwitchApplication.DyeingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Deleting(global::LightSwitchApplication.DyeingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Deleted(global::LightSwitchApplication.DyeingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Validate(global::LightSwitchApplication.DyeingJoItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DyeingJoItems_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DyeingJoItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Inserting(global::LightSwitchApplication.GRNReciept entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Inserted(global::LightSwitchApplication.GRNReciept entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Updating(global::LightSwitchApplication.GRNReciept entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Updated(global::LightSwitchApplication.GRNReciept entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Deleting(global::LightSwitchApplication.GRNReciept entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Deleted(global::LightSwitchApplication.GRNReciept entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Validate(global::LightSwitchApplication.GRNReciept entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GRNReciepts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GRNReciept, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Inserting(global::LightSwitchApplication.History entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Inserted(global::LightSwitchApplication.History entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Updating(global::LightSwitchApplication.History entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Updated(global::LightSwitchApplication.History entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Deleting(global::LightSwitchApplication.History entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Deleted(global::LightSwitchApplication.History entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Validate(global::LightSwitchApplication.History entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Histories_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.History, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Inserted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updating(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Updated(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Deleted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Validate(global::LightSwitchApplication.Invoice entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Invoices_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Inserting(global::LightSwitchApplication.JobOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Inserted(global::LightSwitchApplication.JobOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Updating(global::LightSwitchApplication.JobOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Updated(global::LightSwitchApplication.JobOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Deleting(global::LightSwitchApplication.JobOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Deleted(global::LightSwitchApplication.JobOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Validate(global::LightSwitchApplication.JobOrder entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrder, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Inserting(global::LightSwitchApplication.JobOrderReceipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Inserted(global::LightSwitchApplication.JobOrderReceipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Updating(global::LightSwitchApplication.JobOrderReceipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Updated(global::LightSwitchApplication.JobOrderReceipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Deleting(global::LightSwitchApplication.JobOrderReceipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Deleted(global::LightSwitchApplication.JobOrderReceipt entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Validate(global::LightSwitchApplication.JobOrderReceipt entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderReceipts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderReceipt, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Inserting(global::LightSwitchApplication.JobOrderTolerance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Inserted(global::LightSwitchApplication.JobOrderTolerance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Updating(global::LightSwitchApplication.JobOrderTolerance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Updated(global::LightSwitchApplication.JobOrderTolerance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Deleting(global::LightSwitchApplication.JobOrderTolerance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Deleted(global::LightSwitchApplication.JobOrderTolerance entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Validate(global::LightSwitchApplication.JobOrderTolerance entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTolerances_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderTolerance, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Inserting(global::LightSwitchApplication.JobOrderToleranceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Inserted(global::LightSwitchApplication.JobOrderToleranceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Updating(global::LightSwitchApplication.JobOrderToleranceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Updated(global::LightSwitchApplication.JobOrderToleranceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Deleting(global::LightSwitchApplication.JobOrderToleranceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Deleted(global::LightSwitchApplication.JobOrderToleranceType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Validate(global::LightSwitchApplication.JobOrderToleranceType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderToleranceTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderToleranceType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Inserting(global::LightSwitchApplication.JobOrderType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Inserted(global::LightSwitchApplication.JobOrderType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Updating(global::LightSwitchApplication.JobOrderType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Updated(global::LightSwitchApplication.JobOrderType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Deleting(global::LightSwitchApplication.JobOrderType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Deleted(global::LightSwitchApplication.JobOrderType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Validate(global::LightSwitchApplication.JobOrderType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JobOrderTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Inserting(global::LightSwitchApplication.KnittingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Inserted(global::LightSwitchApplication.KnittingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Updating(global::LightSwitchApplication.KnittingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Updated(global::LightSwitchApplication.KnittingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Deleting(global::LightSwitchApplication.KnittingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Deleted(global::LightSwitchApplication.KnittingJO entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Validate(global::LightSwitchApplication.KnittingJO entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJOes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.KnittingJO, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Inserting(global::LightSwitchApplication.KnittingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Inserted(global::LightSwitchApplication.KnittingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Updating(global::LightSwitchApplication.KnittingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Updated(global::LightSwitchApplication.KnittingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Deleting(global::LightSwitchApplication.KnittingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Deleted(global::LightSwitchApplication.KnittingJoItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Validate(global::LightSwitchApplication.KnittingJoItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnittingJoItems_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.KnittingJoItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Inserting(global::LightSwitchApplication.MaterialName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Inserted(global::LightSwitchApplication.MaterialName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Updating(global::LightSwitchApplication.MaterialName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Updated(global::LightSwitchApplication.MaterialName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Deleting(global::LightSwitchApplication.MaterialName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Deleted(global::LightSwitchApplication.MaterialName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Validate(global::LightSwitchApplication.MaterialName entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialNames_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialName, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Inserting(global::LightSwitchApplication.MaterialsFromStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Inserted(global::LightSwitchApplication.MaterialsFromStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Updating(global::LightSwitchApplication.MaterialsFromStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Updated(global::LightSwitchApplication.MaterialsFromStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Deleting(global::LightSwitchApplication.MaterialsFromStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Deleted(global::LightSwitchApplication.MaterialsFromStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Validate(global::LightSwitchApplication.MaterialsFromStock entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialsFromStocks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialsFromStock, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Inserting(global::LightSwitchApplication.MaterialStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Inserted(global::LightSwitchApplication.MaterialStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Updating(global::LightSwitchApplication.MaterialStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Updated(global::LightSwitchApplication.MaterialStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Deleting(global::LightSwitchApplication.MaterialStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Deleted(global::LightSwitchApplication.MaterialStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Validate(global::LightSwitchApplication.MaterialStock entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaterialStocks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialStock, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updating(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updated(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Validate(global::LightSwitchApplication.Order entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Order, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Inserting(global::LightSwitchApplication.OrderCurrencyConversion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Inserted(global::LightSwitchApplication.OrderCurrencyConversion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Updating(global::LightSwitchApplication.OrderCurrencyConversion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Updated(global::LightSwitchApplication.OrderCurrencyConversion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Deleting(global::LightSwitchApplication.OrderCurrencyConversion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Deleted(global::LightSwitchApplication.OrderCurrencyConversion entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Validate(global::LightSwitchApplication.OrderCurrencyConversion entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderCurrencyConversions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderCurrencyConversion, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Inserting(global::LightSwitchApplication.OrderedItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Inserted(global::LightSwitchApplication.OrderedItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Updating(global::LightSwitchApplication.OrderedItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Updated(global::LightSwitchApplication.OrderedItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Deleting(global::LightSwitchApplication.OrderedItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Deleted(global::LightSwitchApplication.OrderedItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Validate(global::LightSwitchApplication.OrderedItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderedItems_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderedItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Inserting(global::LightSwitchApplication.OrderProduct entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Inserted(global::LightSwitchApplication.OrderProduct entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Updating(global::LightSwitchApplication.OrderProduct entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Updated(global::LightSwitchApplication.OrderProduct entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Deleting(global::LightSwitchApplication.OrderProduct entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Deleted(global::LightSwitchApplication.OrderProduct entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Validate(global::LightSwitchApplication.OrderProduct entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProducts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderProduct, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Inserting(global::LightSwitchApplication.OrderReportCard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Inserted(global::LightSwitchApplication.OrderReportCard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Updating(global::LightSwitchApplication.OrderReportCard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Updated(global::LightSwitchApplication.OrderReportCard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Deleting(global::LightSwitchApplication.OrderReportCard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Deleted(global::LightSwitchApplication.OrderReportCard entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Validate(global::LightSwitchApplication.OrderReportCard entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCards_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderReportCard, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Inserting(global::LightSwitchApplication.OrderReportCardType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Inserted(global::LightSwitchApplication.OrderReportCardType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Updating(global::LightSwitchApplication.OrderReportCardType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Updated(global::LightSwitchApplication.OrderReportCardType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Deleting(global::LightSwitchApplication.OrderReportCardType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Deleted(global::LightSwitchApplication.OrderReportCardType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Validate(global::LightSwitchApplication.OrderReportCardType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderReportCardTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderReportCardType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Inserting(global::LightSwitchApplication.OrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Inserted(global::LightSwitchApplication.OrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Updating(global::LightSwitchApplication.OrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Updated(global::LightSwitchApplication.OrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Deleting(global::LightSwitchApplication.OrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Deleted(global::LightSwitchApplication.OrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Validate(global::LightSwitchApplication.OrderStatu entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderStatus_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderStatu, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Inserting(global::LightSwitchApplication.OrderThrough entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Inserted(global::LightSwitchApplication.OrderThrough entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Updating(global::LightSwitchApplication.OrderThrough entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Updated(global::LightSwitchApplication.OrderThrough entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Deleting(global::LightSwitchApplication.OrderThrough entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Deleted(global::LightSwitchApplication.OrderThrough entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Validate(global::LightSwitchApplication.OrderThrough entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderThroughs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderThrough, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Inserting(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Inserted(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Updating(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Updated(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Deleting(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Deleted(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Validate(global::LightSwitchApplication.Package entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Inserting(global::LightSwitchApplication.ProductBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Inserted(global::LightSwitchApplication.ProductBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Updating(global::LightSwitchApplication.ProductBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Updated(global::LightSwitchApplication.ProductBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Deleting(global::LightSwitchApplication.ProductBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Deleted(global::LightSwitchApplication.ProductBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Validate(global::LightSwitchApplication.ProductBreakUp entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUps_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductBreakUp, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Inserting(global::LightSwitchApplication.ProductBreakUpSummary entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Inserted(global::LightSwitchApplication.ProductBreakUpSummary entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Updating(global::LightSwitchApplication.ProductBreakUpSummary entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Updated(global::LightSwitchApplication.ProductBreakUpSummary entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Deleting(global::LightSwitchApplication.ProductBreakUpSummary entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Deleted(global::LightSwitchApplication.ProductBreakUpSummary entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Validate(global::LightSwitchApplication.ProductBreakUpSummary entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductBreakUpSummaries_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductBreakUpSummary, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Inserting(global::LightSwitchApplication.ProductCountryWiseBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Inserted(global::LightSwitchApplication.ProductCountryWiseBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Updating(global::LightSwitchApplication.ProductCountryWiseBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Updated(global::LightSwitchApplication.ProductCountryWiseBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Deleting(global::LightSwitchApplication.ProductCountryWiseBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Deleted(global::LightSwitchApplication.ProductCountryWiseBreakUp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Validate(global::LightSwitchApplication.ProductCountryWiseBreakUp entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCountryWiseBreakUps_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCountryWiseBreakUp, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Inserting(global::LightSwitchApplication.ProductCutting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Inserted(global::LightSwitchApplication.ProductCutting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Updating(global::LightSwitchApplication.ProductCutting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Updated(global::LightSwitchApplication.ProductCutting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Deleting(global::LightSwitchApplication.ProductCutting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Deleted(global::LightSwitchApplication.ProductCutting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Validate(global::LightSwitchApplication.ProductCutting entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCuttings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCutting, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Inserting(global::LightSwitchApplication.ProductExtraCost entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Inserted(global::LightSwitchApplication.ProductExtraCost entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Updating(global::LightSwitchApplication.ProductExtraCost entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Updated(global::LightSwitchApplication.ProductExtraCost entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Deleting(global::LightSwitchApplication.ProductExtraCost entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Deleted(global::LightSwitchApplication.ProductExtraCost entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Validate(global::LightSwitchApplication.ProductExtraCost entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCosts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductExtraCost, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Inserting(global::LightSwitchApplication.ProductExtraCostType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Inserted(global::LightSwitchApplication.ProductExtraCostType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Updating(global::LightSwitchApplication.ProductExtraCostType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Updated(global::LightSwitchApplication.ProductExtraCostType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Deleting(global::LightSwitchApplication.ProductExtraCostType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Deleted(global::LightSwitchApplication.ProductExtraCostType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Validate(global::LightSwitchApplication.ProductExtraCostType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductExtraCostTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductExtraCostType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Inserting(global::LightSwitchApplication.Production entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Inserted(global::LightSwitchApplication.Production entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Updating(global::LightSwitchApplication.Production entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Updated(global::LightSwitchApplication.Production entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Deleting(global::LightSwitchApplication.Production entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Deleted(global::LightSwitchApplication.Production entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Validate(global::LightSwitchApplication.Production entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Productions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Production, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Inserting(global::LightSwitchApplication.ProductMaterialItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Inserted(global::LightSwitchApplication.ProductMaterialItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Updating(global::LightSwitchApplication.ProductMaterialItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Updated(global::LightSwitchApplication.ProductMaterialItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Deleting(global::LightSwitchApplication.ProductMaterialItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Deleted(global::LightSwitchApplication.ProductMaterialItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Validate(global::LightSwitchApplication.ProductMaterialItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterialItems_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductMaterialItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Inserting(global::LightSwitchApplication.ProductMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Inserted(global::LightSwitchApplication.ProductMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Updating(global::LightSwitchApplication.ProductMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Updated(global::LightSwitchApplication.ProductMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Deleting(global::LightSwitchApplication.ProductMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Deleted(global::LightSwitchApplication.ProductMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Validate(global::LightSwitchApplication.ProductMaterial entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductMaterials_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductMaterial, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Inserting(global::LightSwitchApplication.ProductName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Inserted(global::LightSwitchApplication.ProductName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Updating(global::LightSwitchApplication.ProductName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Updated(global::LightSwitchApplication.ProductName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Deleting(global::LightSwitchApplication.ProductName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Deleted(global::LightSwitchApplication.ProductName entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Validate(global::LightSwitchApplication.ProductName entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductNames_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductName, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Inserting(global::LightSwitchApplication.ProductSize entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Inserted(global::LightSwitchApplication.ProductSize entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Updating(global::LightSwitchApplication.ProductSize entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Updated(global::LightSwitchApplication.ProductSize entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Deleting(global::LightSwitchApplication.ProductSize entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Deleted(global::LightSwitchApplication.ProductSize entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Validate(global::LightSwitchApplication.ProductSize entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSizes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductSize, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Inserting(global::LightSwitchApplication.ProductStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Inserted(global::LightSwitchApplication.ProductStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Updating(global::LightSwitchApplication.ProductStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Updated(global::LightSwitchApplication.ProductStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Deleting(global::LightSwitchApplication.ProductStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Deleted(global::LightSwitchApplication.ProductStock entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Validate(global::LightSwitchApplication.ProductStock entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductStocks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductStock, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Inserting(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Inserted(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Updating(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Updated(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Deleting(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Deleted(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Validate(global::LightSwitchApplication.PurchaseOrder entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Inserting(global::LightSwitchApplication.PurchaseOrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Inserted(global::LightSwitchApplication.PurchaseOrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Updating(global::LightSwitchApplication.PurchaseOrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Updated(global::LightSwitchApplication.PurchaseOrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Deleting(global::LightSwitchApplication.PurchaseOrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Deleted(global::LightSwitchApplication.PurchaseOrderStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Validate(global::LightSwitchApplication.PurchaseOrderStatu entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderStatus_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderStatu, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Inserting(global::LightSwitchApplication.Quality entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Inserted(global::LightSwitchApplication.Quality entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Updating(global::LightSwitchApplication.Quality entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Updated(global::LightSwitchApplication.Quality entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Deleting(global::LightSwitchApplication.Quality entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Deleted(global::LightSwitchApplication.Quality entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Validate(global::LightSwitchApplication.Quality entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Qualities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Quality, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Inserting(global::LightSwitchApplication.ReceiptStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Inserted(global::LightSwitchApplication.ReceiptStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Updating(global::LightSwitchApplication.ReceiptStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Updated(global::LightSwitchApplication.ReceiptStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Deleting(global::LightSwitchApplication.ReceiptStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Deleted(global::LightSwitchApplication.ReceiptStatu entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Validate(global::LightSwitchApplication.ReceiptStatu entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiptStatus_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiptStatu, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Inserting(global::LightSwitchApplication.Shipment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Inserted(global::LightSwitchApplication.Shipment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Updating(global::LightSwitchApplication.Shipment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Updated(global::LightSwitchApplication.Shipment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Deleting(global::LightSwitchApplication.Shipment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Deleted(global::LightSwitchApplication.Shipment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Validate(global::LightSwitchApplication.Shipment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shipments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Shipment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Inserting(global::LightSwitchApplication.ShipmentMode entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Inserted(global::LightSwitchApplication.ShipmentMode entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Updating(global::LightSwitchApplication.ShipmentMode entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Updated(global::LightSwitchApplication.ShipmentMode entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Deleting(global::LightSwitchApplication.ShipmentMode entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Deleted(global::LightSwitchApplication.ShipmentMode entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Validate(global::LightSwitchApplication.ShipmentMode entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShipmentModes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ShipmentMode, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Inserting(global::LightSwitchApplication.SubMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Inserted(global::LightSwitchApplication.SubMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Updating(global::LightSwitchApplication.SubMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Updated(global::LightSwitchApplication.SubMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Deleting(global::LightSwitchApplication.SubMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Deleted(global::LightSwitchApplication.SubMaterial entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Validate(global::LightSwitchApplication.SubMaterial entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubMaterials_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubMaterial, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Inserting(global::LightSwitchApplication.UnitsOfMeasurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Inserted(global::LightSwitchApplication.UnitsOfMeasurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Updating(global::LightSwitchApplication.UnitsOfMeasurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Updated(global::LightSwitchApplication.UnitsOfMeasurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Deleting(global::LightSwitchApplication.UnitsOfMeasurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Deleted(global::LightSwitchApplication.UnitsOfMeasurement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Validate(global::LightSwitchApplication.UnitsOfMeasurement entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitsOfMeasurements_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnitsOfMeasurement, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updating(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updated(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Inserting(global::LightSwitchApplication.UserRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Inserted(global::LightSwitchApplication.UserRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Updating(global::LightSwitchApplication.UserRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Updated(global::LightSwitchApplication.UserRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Deleting(global::LightSwitchApplication.UserRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Deleted(global::LightSwitchApplication.UserRole entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Validate(global::LightSwitchApplication.UserRole entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserRoles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserRole, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Approval>
                __ApprovalsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Approval>(
                    "Approvals",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Approvals_Filter);
            private static bool __Approvals_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Approvals_CanInsert(ref result);
                return result;
            }
            private static bool __Approvals_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Approvals_CanUpdate(ref result);
                return result;
            }
            private static bool __Approvals_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Approvals_CanDelete(ref result);
                return result;
            }
            private static bool __Approvals_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Approvals_CanRead(ref result);
                return result;
            }
            private static void __Approvals_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Approval e)
            {
                d.Approvals_Inserting(e);
            }
            private static void __Approvals_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Approval e)
            {
                d.Approvals_Inserted(e);
            }
            private static void __Approvals_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Approval e)
            {
                d.Approvals_Updating(e);
            }
            private static void __Approvals_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Approval e)
            {
                d.Approvals_Updated(e);
            }
            private static void __Approvals_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Approval e)
            {
                d.Approvals_Deleting(e);
            }
            private static void __Approvals_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Approval e)
            {
                d.Approvals_Deleted(e);
            }
            private static void __Approvals_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Approval e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Approvals_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Approval, bool>> __Approvals_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Approval, bool>> filter = null;
                d.Approvals_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ApprovalEntityType>
                __ApprovalEntityTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ApprovalEntityType>(
                    "ApprovalEntityTypes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ApprovalEntityTypes_Filter);
            private static bool __ApprovalEntityTypes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ApprovalEntityTypes_CanInsert(ref result);
                return result;
            }
            private static bool __ApprovalEntityTypes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ApprovalEntityTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __ApprovalEntityTypes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ApprovalEntityTypes_CanDelete(ref result);
                return result;
            }
            private static bool __ApprovalEntityTypes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ApprovalEntityTypes_CanRead(ref result);
                return result;
            }
            private static void __ApprovalEntityTypes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ApprovalEntityType e)
            {
                d.ApprovalEntityTypes_Inserting(e);
            }
            private static void __ApprovalEntityTypes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ApprovalEntityType e)
            {
                d.ApprovalEntityTypes_Inserted(e);
            }
            private static void __ApprovalEntityTypes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ApprovalEntityType e)
            {
                d.ApprovalEntityTypes_Updating(e);
            }
            private static void __ApprovalEntityTypes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ApprovalEntityType e)
            {
                d.ApprovalEntityTypes_Updated(e);
            }
            private static void __ApprovalEntityTypes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ApprovalEntityType e)
            {
                d.ApprovalEntityTypes_Deleting(e);
            }
            private static void __ApprovalEntityTypes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ApprovalEntityType e)
            {
                d.ApprovalEntityTypes_Deleted(e);
            }
            private static void __ApprovalEntityTypes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ApprovalEntityType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ApprovalEntityTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ApprovalEntityType, bool>> __ApprovalEntityTypes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ApprovalEntityType, bool>> filter = null;
                d.ApprovalEntityTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Asset>
                __AssetsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Asset>(
                    "Assets",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Assets_Filter);
            private static bool __Assets_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Assets_CanInsert(ref result);
                return result;
            }
            private static bool __Assets_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Assets_CanUpdate(ref result);
                return result;
            }
            private static bool __Assets_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Assets_CanDelete(ref result);
                return result;
            }
            private static bool __Assets_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Assets_CanRead(ref result);
                return result;
            }
            private static void __Assets_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Inserting(e);
            }
            private static void __Assets_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Inserted(e);
            }
            private static void __Assets_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Updating(e);
            }
            private static void __Assets_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Updated(e);
            }
            private static void __Assets_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Deleting(e);
            }
            private static void __Assets_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Asset e)
            {
                d.Assets_Deleted(e);
            }
            private static void __Assets_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Asset e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Assets_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Asset, bool>> __Assets_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Asset, bool>> filter = null;
                d.Assets_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.AssetCategory>
                __AssetCategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.AssetCategory>(
                    "AssetCategories",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetCategories_Filter);
            private static bool __AssetCategories_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetCategories_CanInsert(ref result);
                return result;
            }
            private static bool __AssetCategories_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetCategories_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetCategories_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetCategories_CanDelete(ref result);
                return result;
            }
            private static bool __AssetCategories_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetCategories_CanRead(ref result);
                return result;
            }
            private static void __AssetCategories_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetCategory e)
            {
                d.AssetCategories_Inserting(e);
            }
            private static void __AssetCategories_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetCategory e)
            {
                d.AssetCategories_Inserted(e);
            }
            private static void __AssetCategories_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetCategory e)
            {
                d.AssetCategories_Updating(e);
            }
            private static void __AssetCategories_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetCategory e)
            {
                d.AssetCategories_Updated(e);
            }
            private static void __AssetCategories_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetCategory e)
            {
                d.AssetCategories_Deleting(e);
            }
            private static void __AssetCategories_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetCategory e)
            {
                d.AssetCategories_Deleted(e);
            }
            private static void __AssetCategories_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetCategory e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetCategories_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetCategory, bool>> __AssetCategories_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetCategory, bool>> filter = null;
                d.AssetCategories_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.AssetName>
                __AssetNamesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.AssetName>(
                    "AssetNames",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__AssetNames_Filter);
            private static bool __AssetNames_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetNames_CanInsert(ref result);
                return result;
            }
            private static bool __AssetNames_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetNames_CanUpdate(ref result);
                return result;
            }
            private static bool __AssetNames_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetNames_CanDelete(ref result);
                return result;
            }
            private static bool __AssetNames_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.AssetNames_CanRead(ref result);
                return result;
            }
            private static void __AssetNames_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetName e)
            {
                d.AssetNames_Inserting(e);
            }
            private static void __AssetNames_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetName e)
            {
                d.AssetNames_Inserted(e);
            }
            private static void __AssetNames_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetName e)
            {
                d.AssetNames_Updating(e);
            }
            private static void __AssetNames_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetName e)
            {
                d.AssetNames_Updated(e);
            }
            private static void __AssetNames_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetName e)
            {
                d.AssetNames_Deleting(e);
            }
            private static void __AssetNames_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetName e)
            {
                d.AssetNames_Deleted(e);
            }
            private static void __AssetNames_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.AssetName e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssetNames_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetName, bool>> __AssetNames_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssetName, bool>> filter = null;
                d.AssetNames_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.BrandName>
                __BrandNamesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.BrandName>(
                    "BrandNames",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__BrandNames_Filter);
            private static bool __BrandNames_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.BrandNames_CanInsert(ref result);
                return result;
            }
            private static bool __BrandNames_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.BrandNames_CanUpdate(ref result);
                return result;
            }
            private static bool __BrandNames_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.BrandNames_CanDelete(ref result);
                return result;
            }
            private static bool __BrandNames_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.BrandNames_CanRead(ref result);
                return result;
            }
            private static void __BrandNames_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.BrandName e)
            {
                d.BrandNames_Inserting(e);
            }
            private static void __BrandNames_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.BrandName e)
            {
                d.BrandNames_Inserted(e);
            }
            private static void __BrandNames_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.BrandName e)
            {
                d.BrandNames_Updating(e);
            }
            private static void __BrandNames_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.BrandName e)
            {
                d.BrandNames_Updated(e);
            }
            private static void __BrandNames_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.BrandName e)
            {
                d.BrandNames_Deleting(e);
            }
            private static void __BrandNames_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.BrandName e)
            {
                d.BrandNames_Deleted(e);
            }
            private static void __BrandNames_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.BrandName e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BrandNames_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BrandName, bool>> __BrandNames_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BrandName, bool>> filter = null;
                d.BrandNames_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.CartonBox>
                __CartonBoxesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.CartonBox>(
                    "CartonBoxes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CartonBoxes_Filter);
            private static bool __CartonBoxes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CartonBoxes_CanInsert(ref result);
                return result;
            }
            private static bool __CartonBoxes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CartonBoxes_CanUpdate(ref result);
                return result;
            }
            private static bool __CartonBoxes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CartonBoxes_CanDelete(ref result);
                return result;
            }
            private static bool __CartonBoxes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CartonBoxes_CanRead(ref result);
                return result;
            }
            private static void __CartonBoxes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CartonBox e)
            {
                d.CartonBoxes_Inserting(e);
            }
            private static void __CartonBoxes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CartonBox e)
            {
                d.CartonBoxes_Inserted(e);
            }
            private static void __CartonBoxes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CartonBox e)
            {
                d.CartonBoxes_Updating(e);
            }
            private static void __CartonBoxes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CartonBox e)
            {
                d.CartonBoxes_Updated(e);
            }
            private static void __CartonBoxes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CartonBox e)
            {
                d.CartonBoxes_Deleting(e);
            }
            private static void __CartonBoxes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CartonBox e)
            {
                d.CartonBoxes_Deleted(e);
            }
            private static void __CartonBoxes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CartonBox e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CartonBoxes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CartonBox, bool>> __CartonBoxes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CartonBox, bool>> filter = null;
                d.CartonBoxes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Color>
                __ColorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Color>(
                    "Colors",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Colors_Filter);
            private static bool __Colors_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Colors_CanInsert(ref result);
                return result;
            }
            private static bool __Colors_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Colors_CanUpdate(ref result);
                return result;
            }
            private static bool __Colors_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Colors_CanDelete(ref result);
                return result;
            }
            private static bool __Colors_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Colors_CanRead(ref result);
                return result;
            }
            private static void __Colors_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Color e)
            {
                d.Colors_Inserting(e);
            }
            private static void __Colors_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Color e)
            {
                d.Colors_Inserted(e);
            }
            private static void __Colors_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Color e)
            {
                d.Colors_Updating(e);
            }
            private static void __Colors_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Color e)
            {
                d.Colors_Updated(e);
            }
            private static void __Colors_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Color e)
            {
                d.Colors_Deleting(e);
            }
            private static void __Colors_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Color e)
            {
                d.Colors_Deleted(e);
            }
            private static void __Colors_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Color e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Colors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Color, bool>> __Colors_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Color, bool>> filter = null;
                d.Colors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.CommissionValueType>
                __CommissionValueTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.CommissionValueType>(
                    "CommissionValueTypes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CommissionValueTypes_Filter);
            private static bool __CommissionValueTypes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CommissionValueTypes_CanInsert(ref result);
                return result;
            }
            private static bool __CommissionValueTypes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CommissionValueTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __CommissionValueTypes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CommissionValueTypes_CanDelete(ref result);
                return result;
            }
            private static bool __CommissionValueTypes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CommissionValueTypes_CanRead(ref result);
                return result;
            }
            private static void __CommissionValueTypes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CommissionValueType e)
            {
                d.CommissionValueTypes_Inserting(e);
            }
            private static void __CommissionValueTypes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CommissionValueType e)
            {
                d.CommissionValueTypes_Inserted(e);
            }
            private static void __CommissionValueTypes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CommissionValueType e)
            {
                d.CommissionValueTypes_Updating(e);
            }
            private static void __CommissionValueTypes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CommissionValueType e)
            {
                d.CommissionValueTypes_Updated(e);
            }
            private static void __CommissionValueTypes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CommissionValueType e)
            {
                d.CommissionValueTypes_Deleting(e);
            }
            private static void __CommissionValueTypes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CommissionValueType e)
            {
                d.CommissionValueTypes_Deleted(e);
            }
            private static void __CommissionValueTypes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CommissionValueType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CommissionValueTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CommissionValueType, bool>> __CommissionValueTypes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CommissionValueType, bool>> filter = null;
                d.CommissionValueTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Company>
                __CompaniesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Company>(
                    "Companies",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Companies_Filter);
            private static bool __Companies_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Companies_CanInsert(ref result);
                return result;
            }
            private static bool __Companies_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Companies_CanUpdate(ref result);
                return result;
            }
            private static bool __Companies_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Companies_CanDelete(ref result);
                return result;
            }
            private static bool __Companies_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Companies_CanRead(ref result);
                return result;
            }
            private static void __Companies_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserting(e);
            }
            private static void __Companies_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserted(e);
            }
            private static void __Companies_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updating(e);
            }
            private static void __Companies_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updated(e);
            }
            private static void __Companies_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleting(e);
            }
            private static void __Companies_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleted(e);
            }
            private static void __Companies_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Companies_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> __Companies_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter = null;
                d.Companies_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.CompanyType>
                __CompanyTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.CompanyType>(
                    "CompanyTypes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__CompanyTypes_Filter);
            private static bool __CompanyTypes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CompanyTypes_CanInsert(ref result);
                return result;
            }
            private static bool __CompanyTypes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CompanyTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __CompanyTypes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CompanyTypes_CanDelete(ref result);
                return result;
            }
            private static bool __CompanyTypes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.CompanyTypes_CanRead(ref result);
                return result;
            }
            private static void __CompanyTypes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CompanyType e)
            {
                d.CompanyTypes_Inserting(e);
            }
            private static void __CompanyTypes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CompanyType e)
            {
                d.CompanyTypes_Inserted(e);
            }
            private static void __CompanyTypes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CompanyType e)
            {
                d.CompanyTypes_Updating(e);
            }
            private static void __CompanyTypes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CompanyType e)
            {
                d.CompanyTypes_Updated(e);
            }
            private static void __CompanyTypes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CompanyType e)
            {
                d.CompanyTypes_Deleting(e);
            }
            private static void __CompanyTypes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CompanyType e)
            {
                d.CompanyTypes_Deleted(e);
            }
            private static void __CompanyTypes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.CompanyType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CompanyTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CompanyType, bool>> __CompanyTypes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CompanyType, bool>> filter = null;
                d.CompanyTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Country>
                __CountriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Country>(
                    "Countries",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Countries_Filter);
            private static bool __Countries_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Countries_CanInsert(ref result);
                return result;
            }
            private static bool __Countries_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Countries_CanUpdate(ref result);
                return result;
            }
            private static bool __Countries_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Countries_CanDelete(ref result);
                return result;
            }
            private static bool __Countries_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Countries_CanRead(ref result);
                return result;
            }
            private static void __Countries_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Inserting(e);
            }
            private static void __Countries_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Inserted(e);
            }
            private static void __Countries_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Updating(e);
            }
            private static void __Countries_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Updated(e);
            }
            private static void __Countries_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Deleting(e);
            }
            private static void __Countries_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Deleted(e);
            }
            private static void __Countries_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Country e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Countries_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Country, bool>> __Countries_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Country, bool>> filter = null;
                d.Countries_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Currency>
                __CurrenciesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Currency>(
                    "Currencies",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Currencies_Filter);
            private static bool __Currencies_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Currencies_CanInsert(ref result);
                return result;
            }
            private static bool __Currencies_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Currencies_CanUpdate(ref result);
                return result;
            }
            private static bool __Currencies_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Currencies_CanDelete(ref result);
                return result;
            }
            private static bool __Currencies_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Currencies_CanRead(ref result);
                return result;
            }
            private static void __Currencies_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Currency e)
            {
                d.Currencies_Inserting(e);
            }
            private static void __Currencies_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Currency e)
            {
                d.Currencies_Inserted(e);
            }
            private static void __Currencies_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Currency e)
            {
                d.Currencies_Updating(e);
            }
            private static void __Currencies_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Currency e)
            {
                d.Currencies_Updated(e);
            }
            private static void __Currencies_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Currency e)
            {
                d.Currencies_Deleting(e);
            }
            private static void __Currencies_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Currency e)
            {
                d.Currencies_Deleted(e);
            }
            private static void __Currencies_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Currency e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Currencies_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Currency, bool>> __Currencies_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Currency, bool>> filter = null;
                d.Currencies_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.DyeingJO>
                __DyeingJOesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.DyeingJO>(
                    "DyeingJOes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJOes_Filter);
            private static bool __DyeingJOes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJOes_CanInsert(ref result);
                return result;
            }
            private static bool __DyeingJOes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJOes_CanUpdate(ref result);
                return result;
            }
            private static bool __DyeingJOes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJOes_CanDelete(ref result);
                return result;
            }
            private static bool __DyeingJOes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJOes_CanRead(ref result);
                return result;
            }
            private static void __DyeingJOes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJO e)
            {
                d.DyeingJOes_Inserting(e);
            }
            private static void __DyeingJOes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJO e)
            {
                d.DyeingJOes_Inserted(e);
            }
            private static void __DyeingJOes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJO e)
            {
                d.DyeingJOes_Updating(e);
            }
            private static void __DyeingJOes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJO e)
            {
                d.DyeingJOes_Updated(e);
            }
            private static void __DyeingJOes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJO e)
            {
                d.DyeingJOes_Deleting(e);
            }
            private static void __DyeingJOes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJO e)
            {
                d.DyeingJOes_Deleted(e);
            }
            private static void __DyeingJOes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJO e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DyeingJOes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DyeingJO, bool>> __DyeingJOes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DyeingJO, bool>> filter = null;
                d.DyeingJOes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.DyeingJoItem>
                __DyeingJoItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.DyeingJoItem>(
                    "DyeingJoItems",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__DyeingJoItems_Filter);
            private static bool __DyeingJoItems_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJoItems_CanInsert(ref result);
                return result;
            }
            private static bool __DyeingJoItems_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJoItems_CanUpdate(ref result);
                return result;
            }
            private static bool __DyeingJoItems_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJoItems_CanDelete(ref result);
                return result;
            }
            private static bool __DyeingJoItems_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.DyeingJoItems_CanRead(ref result);
                return result;
            }
            private static void __DyeingJoItems_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJoItem e)
            {
                d.DyeingJoItems_Inserting(e);
            }
            private static void __DyeingJoItems_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJoItem e)
            {
                d.DyeingJoItems_Inserted(e);
            }
            private static void __DyeingJoItems_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJoItem e)
            {
                d.DyeingJoItems_Updating(e);
            }
            private static void __DyeingJoItems_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJoItem e)
            {
                d.DyeingJoItems_Updated(e);
            }
            private static void __DyeingJoItems_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJoItem e)
            {
                d.DyeingJoItems_Deleting(e);
            }
            private static void __DyeingJoItems_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJoItem e)
            {
                d.DyeingJoItems_Deleted(e);
            }
            private static void __DyeingJoItems_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.DyeingJoItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DyeingJoItems_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DyeingJoItem, bool>> __DyeingJoItems_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.DyeingJoItem, bool>> filter = null;
                d.DyeingJoItems_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.GRNReciept>
                __GRNRecieptsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.GRNReciept>(
                    "GRNReciepts",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__GRNReciepts_Filter);
            private static bool __GRNReciepts_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.GRNReciepts_CanInsert(ref result);
                return result;
            }
            private static bool __GRNReciepts_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.GRNReciepts_CanUpdate(ref result);
                return result;
            }
            private static bool __GRNReciepts_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.GRNReciepts_CanDelete(ref result);
                return result;
            }
            private static bool __GRNReciepts_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.GRNReciepts_CanRead(ref result);
                return result;
            }
            private static void __GRNReciepts_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.GRNReciept e)
            {
                d.GRNReciepts_Inserting(e);
            }
            private static void __GRNReciepts_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.GRNReciept e)
            {
                d.GRNReciepts_Inserted(e);
            }
            private static void __GRNReciepts_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.GRNReciept e)
            {
                d.GRNReciepts_Updating(e);
            }
            private static void __GRNReciepts_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.GRNReciept e)
            {
                d.GRNReciepts_Updated(e);
            }
            private static void __GRNReciepts_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.GRNReciept e)
            {
                d.GRNReciepts_Deleting(e);
            }
            private static void __GRNReciepts_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.GRNReciept e)
            {
                d.GRNReciepts_Deleted(e);
            }
            private static void __GRNReciepts_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.GRNReciept e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GRNReciepts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GRNReciept, bool>> __GRNReciepts_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GRNReciept, bool>> filter = null;
                d.GRNReciepts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.History>
                __HistoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.History>(
                    "Histories",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Histories_Filter);
            private static bool __Histories_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Histories_CanInsert(ref result);
                return result;
            }
            private static bool __Histories_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Histories_CanUpdate(ref result);
                return result;
            }
            private static bool __Histories_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Histories_CanDelete(ref result);
                return result;
            }
            private static bool __Histories_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Histories_CanRead(ref result);
                return result;
            }
            private static void __Histories_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.History e)
            {
                d.Histories_Inserting(e);
            }
            private static void __Histories_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.History e)
            {
                d.Histories_Inserted(e);
            }
            private static void __Histories_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.History e)
            {
                d.Histories_Updating(e);
            }
            private static void __Histories_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.History e)
            {
                d.Histories_Updated(e);
            }
            private static void __Histories_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.History e)
            {
                d.Histories_Deleting(e);
            }
            private static void __Histories_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.History e)
            {
                d.Histories_Deleted(e);
            }
            private static void __Histories_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.History e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Histories_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.History, bool>> __Histories_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.History, bool>> filter = null;
                d.Histories_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Invoice>
                __InvoicesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Invoice>(
                    "Invoices",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Invoices_Filter);
            private static bool __Invoices_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Invoices_CanInsert(ref result);
                return result;
            }
            private static bool __Invoices_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Invoices_CanUpdate(ref result);
                return result;
            }
            private static bool __Invoices_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Invoices_CanDelete(ref result);
                return result;
            }
            private static bool __Invoices_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Invoices_CanRead(ref result);
                return result;
            }
            private static void __Invoices_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserting(e);
            }
            private static void __Invoices_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Inserted(e);
            }
            private static void __Invoices_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updating(e);
            }
            private static void __Invoices_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Updated(e);
            }
            private static void __Invoices_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleting(e);
            }
            private static void __Invoices_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.Invoices_Deleted(e);
            }
            private static void __Invoices_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Invoice e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Invoices_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> __Invoices_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> filter = null;
                d.Invoices_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrder>
                __JobOrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrder>(
                    "JobOrders",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrders_Filter);
            private static bool __JobOrders_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrders_CanInsert(ref result);
                return result;
            }
            private static bool __JobOrders_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrders_CanUpdate(ref result);
                return result;
            }
            private static bool __JobOrders_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrders_CanDelete(ref result);
                return result;
            }
            private static bool __JobOrders_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrders_CanRead(ref result);
                return result;
            }
            private static void __JobOrders_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrder e)
            {
                d.JobOrders_Inserting(e);
            }
            private static void __JobOrders_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrder e)
            {
                d.JobOrders_Inserted(e);
            }
            private static void __JobOrders_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrder e)
            {
                d.JobOrders_Updating(e);
            }
            private static void __JobOrders_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrder e)
            {
                d.JobOrders_Updated(e);
            }
            private static void __JobOrders_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrder e)
            {
                d.JobOrders_Deleting(e);
            }
            private static void __JobOrders_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrder e)
            {
                d.JobOrders_Deleted(e);
            }
            private static void __JobOrders_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrder e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobOrders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrder, bool>> __JobOrders_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrder, bool>> filter = null;
                d.JobOrders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderReceipt>
                __JobOrderReceiptsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderReceipt>(
                    "JobOrderReceipts",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderReceipts_Filter);
            private static bool __JobOrderReceipts_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderReceipts_CanInsert(ref result);
                return result;
            }
            private static bool __JobOrderReceipts_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderReceipts_CanUpdate(ref result);
                return result;
            }
            private static bool __JobOrderReceipts_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderReceipts_CanDelete(ref result);
                return result;
            }
            private static bool __JobOrderReceipts_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderReceipts_CanRead(ref result);
                return result;
            }
            private static void __JobOrderReceipts_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderReceipt e)
            {
                d.JobOrderReceipts_Inserting(e);
            }
            private static void __JobOrderReceipts_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderReceipt e)
            {
                d.JobOrderReceipts_Inserted(e);
            }
            private static void __JobOrderReceipts_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderReceipt e)
            {
                d.JobOrderReceipts_Updating(e);
            }
            private static void __JobOrderReceipts_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderReceipt e)
            {
                d.JobOrderReceipts_Updated(e);
            }
            private static void __JobOrderReceipts_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderReceipt e)
            {
                d.JobOrderReceipts_Deleting(e);
            }
            private static void __JobOrderReceipts_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderReceipt e)
            {
                d.JobOrderReceipts_Deleted(e);
            }
            private static void __JobOrderReceipts_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderReceipt e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobOrderReceipts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderReceipt, bool>> __JobOrderReceipts_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderReceipt, bool>> filter = null;
                d.JobOrderReceipts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderTolerance>
                __JobOrderTolerancesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderTolerance>(
                    "JobOrderTolerances",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTolerances_Filter);
            private static bool __JobOrderTolerances_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTolerances_CanInsert(ref result);
                return result;
            }
            private static bool __JobOrderTolerances_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTolerances_CanUpdate(ref result);
                return result;
            }
            private static bool __JobOrderTolerances_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTolerances_CanDelete(ref result);
                return result;
            }
            private static bool __JobOrderTolerances_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTolerances_CanRead(ref result);
                return result;
            }
            private static void __JobOrderTolerances_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderTolerance e)
            {
                d.JobOrderTolerances_Inserting(e);
            }
            private static void __JobOrderTolerances_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderTolerance e)
            {
                d.JobOrderTolerances_Inserted(e);
            }
            private static void __JobOrderTolerances_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderTolerance e)
            {
                d.JobOrderTolerances_Updating(e);
            }
            private static void __JobOrderTolerances_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderTolerance e)
            {
                d.JobOrderTolerances_Updated(e);
            }
            private static void __JobOrderTolerances_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderTolerance e)
            {
                d.JobOrderTolerances_Deleting(e);
            }
            private static void __JobOrderTolerances_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderTolerance e)
            {
                d.JobOrderTolerances_Deleted(e);
            }
            private static void __JobOrderTolerances_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderTolerance e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobOrderTolerances_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderTolerance, bool>> __JobOrderTolerances_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderTolerance, bool>> filter = null;
                d.JobOrderTolerances_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderToleranceType>
                __JobOrderToleranceTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderToleranceType>(
                    "JobOrderToleranceTypes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderToleranceTypes_Filter);
            private static bool __JobOrderToleranceTypes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderToleranceTypes_CanInsert(ref result);
                return result;
            }
            private static bool __JobOrderToleranceTypes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderToleranceTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __JobOrderToleranceTypes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderToleranceTypes_CanDelete(ref result);
                return result;
            }
            private static bool __JobOrderToleranceTypes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderToleranceTypes_CanRead(ref result);
                return result;
            }
            private static void __JobOrderToleranceTypes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderToleranceType e)
            {
                d.JobOrderToleranceTypes_Inserting(e);
            }
            private static void __JobOrderToleranceTypes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderToleranceType e)
            {
                d.JobOrderToleranceTypes_Inserted(e);
            }
            private static void __JobOrderToleranceTypes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderToleranceType e)
            {
                d.JobOrderToleranceTypes_Updating(e);
            }
            private static void __JobOrderToleranceTypes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderToleranceType e)
            {
                d.JobOrderToleranceTypes_Updated(e);
            }
            private static void __JobOrderToleranceTypes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderToleranceType e)
            {
                d.JobOrderToleranceTypes_Deleting(e);
            }
            private static void __JobOrderToleranceTypes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderToleranceType e)
            {
                d.JobOrderToleranceTypes_Deleted(e);
            }
            private static void __JobOrderToleranceTypes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderToleranceType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobOrderToleranceTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderToleranceType, bool>> __JobOrderToleranceTypes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderToleranceType, bool>> filter = null;
                d.JobOrderToleranceTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderType>
                __JobOrderTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.JobOrderType>(
                    "JobOrderTypes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__JobOrderTypes_Filter);
            private static bool __JobOrderTypes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTypes_CanInsert(ref result);
                return result;
            }
            private static bool __JobOrderTypes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __JobOrderTypes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTypes_CanDelete(ref result);
                return result;
            }
            private static bool __JobOrderTypes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.JobOrderTypes_CanRead(ref result);
                return result;
            }
            private static void __JobOrderTypes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderType e)
            {
                d.JobOrderTypes_Inserting(e);
            }
            private static void __JobOrderTypes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderType e)
            {
                d.JobOrderTypes_Inserted(e);
            }
            private static void __JobOrderTypes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderType e)
            {
                d.JobOrderTypes_Updating(e);
            }
            private static void __JobOrderTypes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderType e)
            {
                d.JobOrderTypes_Updated(e);
            }
            private static void __JobOrderTypes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderType e)
            {
                d.JobOrderTypes_Deleting(e);
            }
            private static void __JobOrderTypes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderType e)
            {
                d.JobOrderTypes_Deleted(e);
            }
            private static void __JobOrderTypes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.JobOrderType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.JobOrderTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderType, bool>> __JobOrderTypes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.JobOrderType, bool>> filter = null;
                d.JobOrderTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.KnittingJO>
                __KnittingJOesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.KnittingJO>(
                    "KnittingJOes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJOes_Filter);
            private static bool __KnittingJOes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJOes_CanInsert(ref result);
                return result;
            }
            private static bool __KnittingJOes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJOes_CanUpdate(ref result);
                return result;
            }
            private static bool __KnittingJOes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJOes_CanDelete(ref result);
                return result;
            }
            private static bool __KnittingJOes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJOes_CanRead(ref result);
                return result;
            }
            private static void __KnittingJOes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJO e)
            {
                d.KnittingJOes_Inserting(e);
            }
            private static void __KnittingJOes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJO e)
            {
                d.KnittingJOes_Inserted(e);
            }
            private static void __KnittingJOes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJO e)
            {
                d.KnittingJOes_Updating(e);
            }
            private static void __KnittingJOes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJO e)
            {
                d.KnittingJOes_Updated(e);
            }
            private static void __KnittingJOes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJO e)
            {
                d.KnittingJOes_Deleting(e);
            }
            private static void __KnittingJOes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJO e)
            {
                d.KnittingJOes_Deleted(e);
            }
            private static void __KnittingJOes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJO e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.KnittingJOes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.KnittingJO, bool>> __KnittingJOes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.KnittingJO, bool>> filter = null;
                d.KnittingJOes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.KnittingJoItem>
                __KnittingJoItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.KnittingJoItem>(
                    "KnittingJoItems",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__KnittingJoItems_Filter);
            private static bool __KnittingJoItems_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJoItems_CanInsert(ref result);
                return result;
            }
            private static bool __KnittingJoItems_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJoItems_CanUpdate(ref result);
                return result;
            }
            private static bool __KnittingJoItems_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJoItems_CanDelete(ref result);
                return result;
            }
            private static bool __KnittingJoItems_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.KnittingJoItems_CanRead(ref result);
                return result;
            }
            private static void __KnittingJoItems_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJoItem e)
            {
                d.KnittingJoItems_Inserting(e);
            }
            private static void __KnittingJoItems_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJoItem e)
            {
                d.KnittingJoItems_Inserted(e);
            }
            private static void __KnittingJoItems_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJoItem e)
            {
                d.KnittingJoItems_Updating(e);
            }
            private static void __KnittingJoItems_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJoItem e)
            {
                d.KnittingJoItems_Updated(e);
            }
            private static void __KnittingJoItems_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJoItem e)
            {
                d.KnittingJoItems_Deleting(e);
            }
            private static void __KnittingJoItems_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJoItem e)
            {
                d.KnittingJoItems_Deleted(e);
            }
            private static void __KnittingJoItems_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.KnittingJoItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.KnittingJoItems_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.KnittingJoItem, bool>> __KnittingJoItems_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.KnittingJoItem, bool>> filter = null;
                d.KnittingJoItems_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.MaterialName>
                __MaterialNamesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.MaterialName>(
                    "MaterialNames",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialNames_Filter);
            private static bool __MaterialNames_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialNames_CanInsert(ref result);
                return result;
            }
            private static bool __MaterialNames_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialNames_CanUpdate(ref result);
                return result;
            }
            private static bool __MaterialNames_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialNames_CanDelete(ref result);
                return result;
            }
            private static bool __MaterialNames_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialNames_CanRead(ref result);
                return result;
            }
            private static void __MaterialNames_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialName e)
            {
                d.MaterialNames_Inserting(e);
            }
            private static void __MaterialNames_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialName e)
            {
                d.MaterialNames_Inserted(e);
            }
            private static void __MaterialNames_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialName e)
            {
                d.MaterialNames_Updating(e);
            }
            private static void __MaterialNames_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialName e)
            {
                d.MaterialNames_Updated(e);
            }
            private static void __MaterialNames_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialName e)
            {
                d.MaterialNames_Deleting(e);
            }
            private static void __MaterialNames_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialName e)
            {
                d.MaterialNames_Deleted(e);
            }
            private static void __MaterialNames_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialName e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MaterialNames_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialName, bool>> __MaterialNames_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialName, bool>> filter = null;
                d.MaterialNames_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.MaterialsFromStock>
                __MaterialsFromStocksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.MaterialsFromStock>(
                    "MaterialsFromStocks",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialsFromStocks_Filter);
            private static bool __MaterialsFromStocks_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialsFromStocks_CanInsert(ref result);
                return result;
            }
            private static bool __MaterialsFromStocks_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialsFromStocks_CanUpdate(ref result);
                return result;
            }
            private static bool __MaterialsFromStocks_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialsFromStocks_CanDelete(ref result);
                return result;
            }
            private static bool __MaterialsFromStocks_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialsFromStocks_CanRead(ref result);
                return result;
            }
            private static void __MaterialsFromStocks_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialsFromStock e)
            {
                d.MaterialsFromStocks_Inserting(e);
            }
            private static void __MaterialsFromStocks_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialsFromStock e)
            {
                d.MaterialsFromStocks_Inserted(e);
            }
            private static void __MaterialsFromStocks_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialsFromStock e)
            {
                d.MaterialsFromStocks_Updating(e);
            }
            private static void __MaterialsFromStocks_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialsFromStock e)
            {
                d.MaterialsFromStocks_Updated(e);
            }
            private static void __MaterialsFromStocks_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialsFromStock e)
            {
                d.MaterialsFromStocks_Deleting(e);
            }
            private static void __MaterialsFromStocks_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialsFromStock e)
            {
                d.MaterialsFromStocks_Deleted(e);
            }
            private static void __MaterialsFromStocks_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialsFromStock e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MaterialsFromStocks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialsFromStock, bool>> __MaterialsFromStocks_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialsFromStock, bool>> filter = null;
                d.MaterialsFromStocks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.MaterialStock>
                __MaterialStocksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.MaterialStock>(
                    "MaterialStocks",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__MaterialStocks_Filter);
            private static bool __MaterialStocks_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialStocks_CanInsert(ref result);
                return result;
            }
            private static bool __MaterialStocks_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialStocks_CanUpdate(ref result);
                return result;
            }
            private static bool __MaterialStocks_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialStocks_CanDelete(ref result);
                return result;
            }
            private static bool __MaterialStocks_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.MaterialStocks_CanRead(ref result);
                return result;
            }
            private static void __MaterialStocks_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialStock e)
            {
                d.MaterialStocks_Inserting(e);
            }
            private static void __MaterialStocks_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialStock e)
            {
                d.MaterialStocks_Inserted(e);
            }
            private static void __MaterialStocks_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialStock e)
            {
                d.MaterialStocks_Updating(e);
            }
            private static void __MaterialStocks_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialStock e)
            {
                d.MaterialStocks_Updated(e);
            }
            private static void __MaterialStocks_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialStock e)
            {
                d.MaterialStocks_Deleting(e);
            }
            private static void __MaterialStocks_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialStock e)
            {
                d.MaterialStocks_Deleted(e);
            }
            private static void __MaterialStocks_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.MaterialStock e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MaterialStocks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialStock, bool>> __MaterialStocks_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.MaterialStock, bool>> filter = null;
                d.MaterialStocks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Order>
                __OrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Order>(
                    "Orders",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Orders_Filter);
            private static bool __Orders_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Orders_CanInsert(ref result);
                return result;
            }
            private static bool __Orders_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Orders_CanUpdate(ref result);
                return result;
            }
            private static bool __Orders_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Orders_CanDelete(ref result);
                return result;
            }
            private static bool __Orders_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Orders_CanRead(ref result);
                return result;
            }
            private static void __Orders_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserting(e);
            }
            private static void __Orders_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserted(e);
            }
            private static void __Orders_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updating(e);
            }
            private static void __Orders_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updated(e);
            }
            private static void __Orders_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleting(e);
            }
            private static void __Orders_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleted(e);
            }
            private static void __Orders_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Orders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Order, bool>> __Orders_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Order, bool>> filter = null;
                d.Orders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderCurrencyConversion>
                __OrderCurrencyConversionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderCurrencyConversion>(
                    "OrderCurrencyConversions",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderCurrencyConversions_Filter);
            private static bool __OrderCurrencyConversions_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderCurrencyConversions_CanInsert(ref result);
                return result;
            }
            private static bool __OrderCurrencyConversions_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderCurrencyConversions_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderCurrencyConversions_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderCurrencyConversions_CanDelete(ref result);
                return result;
            }
            private static bool __OrderCurrencyConversions_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderCurrencyConversions_CanRead(ref result);
                return result;
            }
            private static void __OrderCurrencyConversions_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderCurrencyConversion e)
            {
                d.OrderCurrencyConversions_Inserting(e);
            }
            private static void __OrderCurrencyConversions_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderCurrencyConversion e)
            {
                d.OrderCurrencyConversions_Inserted(e);
            }
            private static void __OrderCurrencyConversions_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderCurrencyConversion e)
            {
                d.OrderCurrencyConversions_Updating(e);
            }
            private static void __OrderCurrencyConversions_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderCurrencyConversion e)
            {
                d.OrderCurrencyConversions_Updated(e);
            }
            private static void __OrderCurrencyConversions_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderCurrencyConversion e)
            {
                d.OrderCurrencyConversions_Deleting(e);
            }
            private static void __OrderCurrencyConversions_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderCurrencyConversion e)
            {
                d.OrderCurrencyConversions_Deleted(e);
            }
            private static void __OrderCurrencyConversions_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderCurrencyConversion e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderCurrencyConversions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderCurrencyConversion, bool>> __OrderCurrencyConversions_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderCurrencyConversion, bool>> filter = null;
                d.OrderCurrencyConversions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderedItem>
                __OrderedItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderedItem>(
                    "OrderedItems",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderedItems_Filter);
            private static bool __OrderedItems_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderedItems_CanInsert(ref result);
                return result;
            }
            private static bool __OrderedItems_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderedItems_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderedItems_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderedItems_CanDelete(ref result);
                return result;
            }
            private static bool __OrderedItems_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderedItems_CanRead(ref result);
                return result;
            }
            private static void __OrderedItems_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderedItem e)
            {
                d.OrderedItems_Inserting(e);
            }
            private static void __OrderedItems_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderedItem e)
            {
                d.OrderedItems_Inserted(e);
            }
            private static void __OrderedItems_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderedItem e)
            {
                d.OrderedItems_Updating(e);
            }
            private static void __OrderedItems_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderedItem e)
            {
                d.OrderedItems_Updated(e);
            }
            private static void __OrderedItems_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderedItem e)
            {
                d.OrderedItems_Deleting(e);
            }
            private static void __OrderedItems_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderedItem e)
            {
                d.OrderedItems_Deleted(e);
            }
            private static void __OrderedItems_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderedItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderedItems_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderedItem, bool>> __OrderedItems_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderedItem, bool>> filter = null;
                d.OrderedItems_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderProduct>
                __OrderProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderProduct>(
                    "OrderProducts",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderProducts_Filter);
            private static bool __OrderProducts_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderProducts_CanInsert(ref result);
                return result;
            }
            private static bool __OrderProducts_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderProducts_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderProducts_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderProducts_CanDelete(ref result);
                return result;
            }
            private static bool __OrderProducts_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderProducts_CanRead(ref result);
                return result;
            }
            private static void __OrderProducts_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderProduct e)
            {
                d.OrderProducts_Inserting(e);
            }
            private static void __OrderProducts_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderProduct e)
            {
                d.OrderProducts_Inserted(e);
            }
            private static void __OrderProducts_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderProduct e)
            {
                d.OrderProducts_Updating(e);
            }
            private static void __OrderProducts_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderProduct e)
            {
                d.OrderProducts_Updated(e);
            }
            private static void __OrderProducts_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderProduct e)
            {
                d.OrderProducts_Deleting(e);
            }
            private static void __OrderProducts_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderProduct e)
            {
                d.OrderProducts_Deleted(e);
            }
            private static void __OrderProducts_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderProduct e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderProducts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderProduct, bool>> __OrderProducts_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderProduct, bool>> filter = null;
                d.OrderProducts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderReportCard>
                __OrderReportCardsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderReportCard>(
                    "OrderReportCards",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCards_Filter);
            private static bool __OrderReportCards_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCards_CanInsert(ref result);
                return result;
            }
            private static bool __OrderReportCards_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCards_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderReportCards_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCards_CanDelete(ref result);
                return result;
            }
            private static bool __OrderReportCards_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCards_CanRead(ref result);
                return result;
            }
            private static void __OrderReportCards_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCard e)
            {
                d.OrderReportCards_Inserting(e);
            }
            private static void __OrderReportCards_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCard e)
            {
                d.OrderReportCards_Inserted(e);
            }
            private static void __OrderReportCards_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCard e)
            {
                d.OrderReportCards_Updating(e);
            }
            private static void __OrderReportCards_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCard e)
            {
                d.OrderReportCards_Updated(e);
            }
            private static void __OrderReportCards_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCard e)
            {
                d.OrderReportCards_Deleting(e);
            }
            private static void __OrderReportCards_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCard e)
            {
                d.OrderReportCards_Deleted(e);
            }
            private static void __OrderReportCards_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCard e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderReportCards_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderReportCard, bool>> __OrderReportCards_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderReportCard, bool>> filter = null;
                d.OrderReportCards_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderReportCardType>
                __OrderReportCardTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderReportCardType>(
                    "OrderReportCardTypes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderReportCardTypes_Filter);
            private static bool __OrderReportCardTypes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCardTypes_CanInsert(ref result);
                return result;
            }
            private static bool __OrderReportCardTypes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCardTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderReportCardTypes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCardTypes_CanDelete(ref result);
                return result;
            }
            private static bool __OrderReportCardTypes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderReportCardTypes_CanRead(ref result);
                return result;
            }
            private static void __OrderReportCardTypes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCardType e)
            {
                d.OrderReportCardTypes_Inserting(e);
            }
            private static void __OrderReportCardTypes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCardType e)
            {
                d.OrderReportCardTypes_Inserted(e);
            }
            private static void __OrderReportCardTypes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCardType e)
            {
                d.OrderReportCardTypes_Updating(e);
            }
            private static void __OrderReportCardTypes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCardType e)
            {
                d.OrderReportCardTypes_Updated(e);
            }
            private static void __OrderReportCardTypes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCardType e)
            {
                d.OrderReportCardTypes_Deleting(e);
            }
            private static void __OrderReportCardTypes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCardType e)
            {
                d.OrderReportCardTypes_Deleted(e);
            }
            private static void __OrderReportCardTypes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderReportCardType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderReportCardTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderReportCardType, bool>> __OrderReportCardTypes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderReportCardType, bool>> filter = null;
                d.OrderReportCardTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderStatu>
                __OrderStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderStatu>(
                    "OrderStatus",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderStatus_Filter);
            private static bool __OrderStatus_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderStatus_CanInsert(ref result);
                return result;
            }
            private static bool __OrderStatus_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderStatus_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderStatus_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderStatus_CanDelete(ref result);
                return result;
            }
            private static bool __OrderStatus_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderStatus_CanRead(ref result);
                return result;
            }
            private static void __OrderStatus_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderStatu e)
            {
                d.OrderStatus_Inserting(e);
            }
            private static void __OrderStatus_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderStatu e)
            {
                d.OrderStatus_Inserted(e);
            }
            private static void __OrderStatus_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderStatu e)
            {
                d.OrderStatus_Updating(e);
            }
            private static void __OrderStatus_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderStatu e)
            {
                d.OrderStatus_Updated(e);
            }
            private static void __OrderStatus_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderStatu e)
            {
                d.OrderStatus_Deleting(e);
            }
            private static void __OrderStatus_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderStatu e)
            {
                d.OrderStatus_Deleted(e);
            }
            private static void __OrderStatus_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderStatu e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderStatus_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderStatu, bool>> __OrderStatus_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderStatu, bool>> filter = null;
                d.OrderStatus_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderThrough>
                __OrderThroughsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.OrderThrough>(
                    "OrderThroughs",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__OrderThroughs_Filter);
            private static bool __OrderThroughs_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderThroughs_CanInsert(ref result);
                return result;
            }
            private static bool __OrderThroughs_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderThroughs_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderThroughs_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderThroughs_CanDelete(ref result);
                return result;
            }
            private static bool __OrderThroughs_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.OrderThroughs_CanRead(ref result);
                return result;
            }
            private static void __OrderThroughs_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderThrough e)
            {
                d.OrderThroughs_Inserting(e);
            }
            private static void __OrderThroughs_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderThrough e)
            {
                d.OrderThroughs_Inserted(e);
            }
            private static void __OrderThroughs_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderThrough e)
            {
                d.OrderThroughs_Updating(e);
            }
            private static void __OrderThroughs_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderThrough e)
            {
                d.OrderThroughs_Updated(e);
            }
            private static void __OrderThroughs_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderThrough e)
            {
                d.OrderThroughs_Deleting(e);
            }
            private static void __OrderThroughs_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderThrough e)
            {
                d.OrderThroughs_Deleted(e);
            }
            private static void __OrderThroughs_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.OrderThrough e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderThroughs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderThrough, bool>> __OrderThroughs_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderThrough, bool>> filter = null;
                d.OrderThroughs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Package>
                __PackagesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Package>(
                    "Packages",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Packages_Filter);
            private static bool __Packages_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Packages_CanInsert(ref result);
                return result;
            }
            private static bool __Packages_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Packages_CanUpdate(ref result);
                return result;
            }
            private static bool __Packages_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Packages_CanDelete(ref result);
                return result;
            }
            private static bool __Packages_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Packages_CanRead(ref result);
                return result;
            }
            private static void __Packages_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Inserting(e);
            }
            private static void __Packages_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Inserted(e);
            }
            private static void __Packages_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Updating(e);
            }
            private static void __Packages_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Updated(e);
            }
            private static void __Packages_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Deleting(e);
            }
            private static void __Packages_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Deleted(e);
            }
            private static void __Packages_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Package e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Packages_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> __Packages_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> filter = null;
                d.Packages_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductBreakUp>
                __ProductBreakUpsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductBreakUp>(
                    "ProductBreakUps",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUps_Filter);
            private static bool __ProductBreakUps_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUps_CanInsert(ref result);
                return result;
            }
            private static bool __ProductBreakUps_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUps_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductBreakUps_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUps_CanDelete(ref result);
                return result;
            }
            private static bool __ProductBreakUps_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUps_CanRead(ref result);
                return result;
            }
            private static void __ProductBreakUps_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUp e)
            {
                d.ProductBreakUps_Inserting(e);
            }
            private static void __ProductBreakUps_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUp e)
            {
                d.ProductBreakUps_Inserted(e);
            }
            private static void __ProductBreakUps_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUp e)
            {
                d.ProductBreakUps_Updating(e);
            }
            private static void __ProductBreakUps_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUp e)
            {
                d.ProductBreakUps_Updated(e);
            }
            private static void __ProductBreakUps_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUp e)
            {
                d.ProductBreakUps_Deleting(e);
            }
            private static void __ProductBreakUps_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUp e)
            {
                d.ProductBreakUps_Deleted(e);
            }
            private static void __ProductBreakUps_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUp e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductBreakUps_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductBreakUp, bool>> __ProductBreakUps_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductBreakUp, bool>> filter = null;
                d.ProductBreakUps_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductBreakUpSummary>
                __ProductBreakUpSummariesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductBreakUpSummary>(
                    "ProductBreakUpSummaries",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductBreakUpSummaries_Filter);
            private static bool __ProductBreakUpSummaries_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUpSummaries_CanInsert(ref result);
                return result;
            }
            private static bool __ProductBreakUpSummaries_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUpSummaries_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductBreakUpSummaries_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUpSummaries_CanDelete(ref result);
                return result;
            }
            private static bool __ProductBreakUpSummaries_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductBreakUpSummaries_CanRead(ref result);
                return result;
            }
            private static void __ProductBreakUpSummaries_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUpSummary e)
            {
                d.ProductBreakUpSummaries_Inserting(e);
            }
            private static void __ProductBreakUpSummaries_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUpSummary e)
            {
                d.ProductBreakUpSummaries_Inserted(e);
            }
            private static void __ProductBreakUpSummaries_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUpSummary e)
            {
                d.ProductBreakUpSummaries_Updating(e);
            }
            private static void __ProductBreakUpSummaries_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUpSummary e)
            {
                d.ProductBreakUpSummaries_Updated(e);
            }
            private static void __ProductBreakUpSummaries_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUpSummary e)
            {
                d.ProductBreakUpSummaries_Deleting(e);
            }
            private static void __ProductBreakUpSummaries_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUpSummary e)
            {
                d.ProductBreakUpSummaries_Deleted(e);
            }
            private static void __ProductBreakUpSummaries_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductBreakUpSummary e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductBreakUpSummaries_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductBreakUpSummary, bool>> __ProductBreakUpSummaries_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductBreakUpSummary, bool>> filter = null;
                d.ProductBreakUpSummaries_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductCountryWiseBreakUp>
                __ProductCountryWiseBreakUpsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductCountryWiseBreakUp>(
                    "ProductCountryWiseBreakUps",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCountryWiseBreakUps_Filter);
            private static bool __ProductCountryWiseBreakUps_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCountryWiseBreakUps_CanInsert(ref result);
                return result;
            }
            private static bool __ProductCountryWiseBreakUps_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCountryWiseBreakUps_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductCountryWiseBreakUps_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCountryWiseBreakUps_CanDelete(ref result);
                return result;
            }
            private static bool __ProductCountryWiseBreakUps_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCountryWiseBreakUps_CanRead(ref result);
                return result;
            }
            private static void __ProductCountryWiseBreakUps_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCountryWiseBreakUp e)
            {
                d.ProductCountryWiseBreakUps_Inserting(e);
            }
            private static void __ProductCountryWiseBreakUps_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCountryWiseBreakUp e)
            {
                d.ProductCountryWiseBreakUps_Inserted(e);
            }
            private static void __ProductCountryWiseBreakUps_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCountryWiseBreakUp e)
            {
                d.ProductCountryWiseBreakUps_Updating(e);
            }
            private static void __ProductCountryWiseBreakUps_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCountryWiseBreakUp e)
            {
                d.ProductCountryWiseBreakUps_Updated(e);
            }
            private static void __ProductCountryWiseBreakUps_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCountryWiseBreakUp e)
            {
                d.ProductCountryWiseBreakUps_Deleting(e);
            }
            private static void __ProductCountryWiseBreakUps_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCountryWiseBreakUp e)
            {
                d.ProductCountryWiseBreakUps_Deleted(e);
            }
            private static void __ProductCountryWiseBreakUps_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCountryWiseBreakUp e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductCountryWiseBreakUps_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCountryWiseBreakUp, bool>> __ProductCountryWiseBreakUps_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCountryWiseBreakUp, bool>> filter = null;
                d.ProductCountryWiseBreakUps_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductCutting>
                __ProductCuttingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductCutting>(
                    "ProductCuttings",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductCuttings_Filter);
            private static bool __ProductCuttings_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCuttings_CanInsert(ref result);
                return result;
            }
            private static bool __ProductCuttings_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCuttings_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductCuttings_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCuttings_CanDelete(ref result);
                return result;
            }
            private static bool __ProductCuttings_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductCuttings_CanRead(ref result);
                return result;
            }
            private static void __ProductCuttings_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCutting e)
            {
                d.ProductCuttings_Inserting(e);
            }
            private static void __ProductCuttings_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCutting e)
            {
                d.ProductCuttings_Inserted(e);
            }
            private static void __ProductCuttings_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCutting e)
            {
                d.ProductCuttings_Updating(e);
            }
            private static void __ProductCuttings_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCutting e)
            {
                d.ProductCuttings_Updated(e);
            }
            private static void __ProductCuttings_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCutting e)
            {
                d.ProductCuttings_Deleting(e);
            }
            private static void __ProductCuttings_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCutting e)
            {
                d.ProductCuttings_Deleted(e);
            }
            private static void __ProductCuttings_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductCutting e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductCuttings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCutting, bool>> __ProductCuttings_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCutting, bool>> filter = null;
                d.ProductCuttings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductExtraCost>
                __ProductExtraCostsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductExtraCost>(
                    "ProductExtraCosts",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCosts_Filter);
            private static bool __ProductExtraCosts_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCosts_CanInsert(ref result);
                return result;
            }
            private static bool __ProductExtraCosts_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCosts_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductExtraCosts_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCosts_CanDelete(ref result);
                return result;
            }
            private static bool __ProductExtraCosts_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCosts_CanRead(ref result);
                return result;
            }
            private static void __ProductExtraCosts_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCost e)
            {
                d.ProductExtraCosts_Inserting(e);
            }
            private static void __ProductExtraCosts_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCost e)
            {
                d.ProductExtraCosts_Inserted(e);
            }
            private static void __ProductExtraCosts_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCost e)
            {
                d.ProductExtraCosts_Updating(e);
            }
            private static void __ProductExtraCosts_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCost e)
            {
                d.ProductExtraCosts_Updated(e);
            }
            private static void __ProductExtraCosts_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCost e)
            {
                d.ProductExtraCosts_Deleting(e);
            }
            private static void __ProductExtraCosts_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCost e)
            {
                d.ProductExtraCosts_Deleted(e);
            }
            private static void __ProductExtraCosts_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCost e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductExtraCosts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductExtraCost, bool>> __ProductExtraCosts_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductExtraCost, bool>> filter = null;
                d.ProductExtraCosts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductExtraCostType>
                __ProductExtraCostTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductExtraCostType>(
                    "ProductExtraCostTypes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductExtraCostTypes_Filter);
            private static bool __ProductExtraCostTypes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCostTypes_CanInsert(ref result);
                return result;
            }
            private static bool __ProductExtraCostTypes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCostTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductExtraCostTypes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCostTypes_CanDelete(ref result);
                return result;
            }
            private static bool __ProductExtraCostTypes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductExtraCostTypes_CanRead(ref result);
                return result;
            }
            private static void __ProductExtraCostTypes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCostType e)
            {
                d.ProductExtraCostTypes_Inserting(e);
            }
            private static void __ProductExtraCostTypes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCostType e)
            {
                d.ProductExtraCostTypes_Inserted(e);
            }
            private static void __ProductExtraCostTypes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCostType e)
            {
                d.ProductExtraCostTypes_Updating(e);
            }
            private static void __ProductExtraCostTypes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCostType e)
            {
                d.ProductExtraCostTypes_Updated(e);
            }
            private static void __ProductExtraCostTypes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCostType e)
            {
                d.ProductExtraCostTypes_Deleting(e);
            }
            private static void __ProductExtraCostTypes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCostType e)
            {
                d.ProductExtraCostTypes_Deleted(e);
            }
            private static void __ProductExtraCostTypes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductExtraCostType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductExtraCostTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductExtraCostType, bool>> __ProductExtraCostTypes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductExtraCostType, bool>> filter = null;
                d.ProductExtraCostTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Production>
                __ProductionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Production>(
                    "Productions",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Productions_Filter);
            private static bool __Productions_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Productions_CanInsert(ref result);
                return result;
            }
            private static bool __Productions_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Productions_CanUpdate(ref result);
                return result;
            }
            private static bool __Productions_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Productions_CanDelete(ref result);
                return result;
            }
            private static bool __Productions_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Productions_CanRead(ref result);
                return result;
            }
            private static void __Productions_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Production e)
            {
                d.Productions_Inserting(e);
            }
            private static void __Productions_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Production e)
            {
                d.Productions_Inserted(e);
            }
            private static void __Productions_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Production e)
            {
                d.Productions_Updating(e);
            }
            private static void __Productions_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Production e)
            {
                d.Productions_Updated(e);
            }
            private static void __Productions_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Production e)
            {
                d.Productions_Deleting(e);
            }
            private static void __Productions_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Production e)
            {
                d.Productions_Deleted(e);
            }
            private static void __Productions_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Production e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Productions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Production, bool>> __Productions_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Production, bool>> filter = null;
                d.Productions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductMaterialItem>
                __ProductMaterialItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductMaterialItem>(
                    "ProductMaterialItems",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterialItems_Filter);
            private static bool __ProductMaterialItems_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterialItems_CanInsert(ref result);
                return result;
            }
            private static bool __ProductMaterialItems_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterialItems_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductMaterialItems_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterialItems_CanDelete(ref result);
                return result;
            }
            private static bool __ProductMaterialItems_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterialItems_CanRead(ref result);
                return result;
            }
            private static void __ProductMaterialItems_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterialItem e)
            {
                d.ProductMaterialItems_Inserting(e);
            }
            private static void __ProductMaterialItems_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterialItem e)
            {
                d.ProductMaterialItems_Inserted(e);
            }
            private static void __ProductMaterialItems_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterialItem e)
            {
                d.ProductMaterialItems_Updating(e);
            }
            private static void __ProductMaterialItems_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterialItem e)
            {
                d.ProductMaterialItems_Updated(e);
            }
            private static void __ProductMaterialItems_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterialItem e)
            {
                d.ProductMaterialItems_Deleting(e);
            }
            private static void __ProductMaterialItems_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterialItem e)
            {
                d.ProductMaterialItems_Deleted(e);
            }
            private static void __ProductMaterialItems_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterialItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductMaterialItems_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductMaterialItem, bool>> __ProductMaterialItems_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductMaterialItem, bool>> filter = null;
                d.ProductMaterialItems_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductMaterial>
                __ProductMaterialsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductMaterial>(
                    "ProductMaterials",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductMaterials_Filter);
            private static bool __ProductMaterials_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterials_CanInsert(ref result);
                return result;
            }
            private static bool __ProductMaterials_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterials_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductMaterials_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterials_CanDelete(ref result);
                return result;
            }
            private static bool __ProductMaterials_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductMaterials_CanRead(ref result);
                return result;
            }
            private static void __ProductMaterials_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterial e)
            {
                d.ProductMaterials_Inserting(e);
            }
            private static void __ProductMaterials_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterial e)
            {
                d.ProductMaterials_Inserted(e);
            }
            private static void __ProductMaterials_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterial e)
            {
                d.ProductMaterials_Updating(e);
            }
            private static void __ProductMaterials_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterial e)
            {
                d.ProductMaterials_Updated(e);
            }
            private static void __ProductMaterials_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterial e)
            {
                d.ProductMaterials_Deleting(e);
            }
            private static void __ProductMaterials_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterial e)
            {
                d.ProductMaterials_Deleted(e);
            }
            private static void __ProductMaterials_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductMaterial e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductMaterials_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductMaterial, bool>> __ProductMaterials_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductMaterial, bool>> filter = null;
                d.ProductMaterials_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductName>
                __ProductNamesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductName>(
                    "ProductNames",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductNames_Filter);
            private static bool __ProductNames_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductNames_CanInsert(ref result);
                return result;
            }
            private static bool __ProductNames_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductNames_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductNames_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductNames_CanDelete(ref result);
                return result;
            }
            private static bool __ProductNames_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductNames_CanRead(ref result);
                return result;
            }
            private static void __ProductNames_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductName e)
            {
                d.ProductNames_Inserting(e);
            }
            private static void __ProductNames_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductName e)
            {
                d.ProductNames_Inserted(e);
            }
            private static void __ProductNames_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductName e)
            {
                d.ProductNames_Updating(e);
            }
            private static void __ProductNames_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductName e)
            {
                d.ProductNames_Updated(e);
            }
            private static void __ProductNames_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductName e)
            {
                d.ProductNames_Deleting(e);
            }
            private static void __ProductNames_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductName e)
            {
                d.ProductNames_Deleted(e);
            }
            private static void __ProductNames_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductName e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductNames_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductName, bool>> __ProductNames_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductName, bool>> filter = null;
                d.ProductNames_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductSize>
                __ProductSizesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductSize>(
                    "ProductSizes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductSizes_Filter);
            private static bool __ProductSizes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductSizes_CanInsert(ref result);
                return result;
            }
            private static bool __ProductSizes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductSizes_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductSizes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductSizes_CanDelete(ref result);
                return result;
            }
            private static bool __ProductSizes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductSizes_CanRead(ref result);
                return result;
            }
            private static void __ProductSizes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductSize e)
            {
                d.ProductSizes_Inserting(e);
            }
            private static void __ProductSizes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductSize e)
            {
                d.ProductSizes_Inserted(e);
            }
            private static void __ProductSizes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductSize e)
            {
                d.ProductSizes_Updating(e);
            }
            private static void __ProductSizes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductSize e)
            {
                d.ProductSizes_Updated(e);
            }
            private static void __ProductSizes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductSize e)
            {
                d.ProductSizes_Deleting(e);
            }
            private static void __ProductSizes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductSize e)
            {
                d.ProductSizes_Deleted(e);
            }
            private static void __ProductSizes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductSize e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductSizes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductSize, bool>> __ProductSizes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductSize, bool>> filter = null;
                d.ProductSizes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductStock>
                __ProductStocksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ProductStock>(
                    "ProductStocks",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ProductStocks_Filter);
            private static bool __ProductStocks_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductStocks_CanInsert(ref result);
                return result;
            }
            private static bool __ProductStocks_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductStocks_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductStocks_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductStocks_CanDelete(ref result);
                return result;
            }
            private static bool __ProductStocks_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ProductStocks_CanRead(ref result);
                return result;
            }
            private static void __ProductStocks_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductStock e)
            {
                d.ProductStocks_Inserting(e);
            }
            private static void __ProductStocks_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductStock e)
            {
                d.ProductStocks_Inserted(e);
            }
            private static void __ProductStocks_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductStock e)
            {
                d.ProductStocks_Updating(e);
            }
            private static void __ProductStocks_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductStock e)
            {
                d.ProductStocks_Updated(e);
            }
            private static void __ProductStocks_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductStock e)
            {
                d.ProductStocks_Deleting(e);
            }
            private static void __ProductStocks_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductStock e)
            {
                d.ProductStocks_Deleted(e);
            }
            private static void __ProductStocks_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ProductStock e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductStocks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductStock, bool>> __ProductStocks_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductStock, bool>> filter = null;
                d.ProductStocks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.PurchaseOrder>
                __PurchaseOrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.PurchaseOrder>(
                    "PurchaseOrders",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrders_Filter);
            private static bool __PurchaseOrders_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanInsert(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanUpdate(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanDelete(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanRead(ref result);
                return result;
            }
            private static void __PurchaseOrders_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Inserting(e);
            }
            private static void __PurchaseOrders_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Inserted(e);
            }
            private static void __PurchaseOrders_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Updating(e);
            }
            private static void __PurchaseOrders_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Updated(e);
            }
            private static void __PurchaseOrders_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Deleting(e);
            }
            private static void __PurchaseOrders_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Deleted(e);
            }
            private static void __PurchaseOrders_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrder e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PurchaseOrders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> __PurchaseOrders_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> filter = null;
                d.PurchaseOrders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.PurchaseOrderStatu>
                __PurchaseOrderStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.PurchaseOrderStatu>(
                    "PurchaseOrderStatus",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__PurchaseOrderStatus_Filter);
            private static bool __PurchaseOrderStatus_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatus_CanInsert(ref result);
                return result;
            }
            private static bool __PurchaseOrderStatus_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatus_CanUpdate(ref result);
                return result;
            }
            private static bool __PurchaseOrderStatus_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatus_CanDelete(ref result);
                return result;
            }
            private static bool __PurchaseOrderStatus_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.PurchaseOrderStatus_CanRead(ref result);
                return result;
            }
            private static void __PurchaseOrderStatus_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrderStatu e)
            {
                d.PurchaseOrderStatus_Inserting(e);
            }
            private static void __PurchaseOrderStatus_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrderStatu e)
            {
                d.PurchaseOrderStatus_Inserted(e);
            }
            private static void __PurchaseOrderStatus_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrderStatu e)
            {
                d.PurchaseOrderStatus_Updating(e);
            }
            private static void __PurchaseOrderStatus_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrderStatu e)
            {
                d.PurchaseOrderStatus_Updated(e);
            }
            private static void __PurchaseOrderStatus_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrderStatu e)
            {
                d.PurchaseOrderStatus_Deleting(e);
            }
            private static void __PurchaseOrderStatus_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrderStatu e)
            {
                d.PurchaseOrderStatus_Deleted(e);
            }
            private static void __PurchaseOrderStatus_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.PurchaseOrderStatu e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PurchaseOrderStatus_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderStatu, bool>> __PurchaseOrderStatus_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderStatu, bool>> filter = null;
                d.PurchaseOrderStatus_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Quality>
                __QualitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Quality>(
                    "Qualities",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Qualities_Filter);
            private static bool __Qualities_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Qualities_CanInsert(ref result);
                return result;
            }
            private static bool __Qualities_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Qualities_CanUpdate(ref result);
                return result;
            }
            private static bool __Qualities_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Qualities_CanDelete(ref result);
                return result;
            }
            private static bool __Qualities_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Qualities_CanRead(ref result);
                return result;
            }
            private static void __Qualities_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Quality e)
            {
                d.Qualities_Inserting(e);
            }
            private static void __Qualities_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Quality e)
            {
                d.Qualities_Inserted(e);
            }
            private static void __Qualities_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Quality e)
            {
                d.Qualities_Updating(e);
            }
            private static void __Qualities_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Quality e)
            {
                d.Qualities_Updated(e);
            }
            private static void __Qualities_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Quality e)
            {
                d.Qualities_Deleting(e);
            }
            private static void __Qualities_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Quality e)
            {
                d.Qualities_Deleted(e);
            }
            private static void __Qualities_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Quality e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Qualities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Quality, bool>> __Qualities_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Quality, bool>> filter = null;
                d.Qualities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ReceiptStatu>
                __ReceiptStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ReceiptStatu>(
                    "ReceiptStatus",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ReceiptStatus_Filter);
            private static bool __ReceiptStatus_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ReceiptStatus_CanInsert(ref result);
                return result;
            }
            private static bool __ReceiptStatus_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ReceiptStatus_CanUpdate(ref result);
                return result;
            }
            private static bool __ReceiptStatus_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ReceiptStatus_CanDelete(ref result);
                return result;
            }
            private static bool __ReceiptStatus_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ReceiptStatus_CanRead(ref result);
                return result;
            }
            private static void __ReceiptStatus_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ReceiptStatu e)
            {
                d.ReceiptStatus_Inserting(e);
            }
            private static void __ReceiptStatus_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ReceiptStatu e)
            {
                d.ReceiptStatus_Inserted(e);
            }
            private static void __ReceiptStatus_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ReceiptStatu e)
            {
                d.ReceiptStatus_Updating(e);
            }
            private static void __ReceiptStatus_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ReceiptStatu e)
            {
                d.ReceiptStatus_Updated(e);
            }
            private static void __ReceiptStatus_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ReceiptStatu e)
            {
                d.ReceiptStatus_Deleting(e);
            }
            private static void __ReceiptStatus_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ReceiptStatu e)
            {
                d.ReceiptStatus_Deleted(e);
            }
            private static void __ReceiptStatus_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ReceiptStatu e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReceiptStatus_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiptStatu, bool>> __ReceiptStatus_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiptStatu, bool>> filter = null;
                d.ReceiptStatus_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Shipment>
                __ShipmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.Shipment>(
                    "Shipments",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Shipments_Filter);
            private static bool __Shipments_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Shipments_CanInsert(ref result);
                return result;
            }
            private static bool __Shipments_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Shipments_CanUpdate(ref result);
                return result;
            }
            private static bool __Shipments_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Shipments_CanDelete(ref result);
                return result;
            }
            private static bool __Shipments_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Shipments_CanRead(ref result);
                return result;
            }
            private static void __Shipments_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Shipment e)
            {
                d.Shipments_Inserting(e);
            }
            private static void __Shipments_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Shipment e)
            {
                d.Shipments_Inserted(e);
            }
            private static void __Shipments_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Shipment e)
            {
                d.Shipments_Updating(e);
            }
            private static void __Shipments_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Shipment e)
            {
                d.Shipments_Updated(e);
            }
            private static void __Shipments_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Shipment e)
            {
                d.Shipments_Deleting(e);
            }
            private static void __Shipments_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Shipment e)
            {
                d.Shipments_Deleted(e);
            }
            private static void __Shipments_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.Shipment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Shipments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Shipment, bool>> __Shipments_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Shipment, bool>> filter = null;
                d.Shipments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ShipmentMode>
                __ShipmentModesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.ShipmentMode>(
                    "ShipmentModes",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__ShipmentModes_Filter);
            private static bool __ShipmentModes_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ShipmentModes_CanInsert(ref result);
                return result;
            }
            private static bool __ShipmentModes_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ShipmentModes_CanUpdate(ref result);
                return result;
            }
            private static bool __ShipmentModes_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ShipmentModes_CanDelete(ref result);
                return result;
            }
            private static bool __ShipmentModes_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.ShipmentModes_CanRead(ref result);
                return result;
            }
            private static void __ShipmentModes_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ShipmentMode e)
            {
                d.ShipmentModes_Inserting(e);
            }
            private static void __ShipmentModes_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ShipmentMode e)
            {
                d.ShipmentModes_Inserted(e);
            }
            private static void __ShipmentModes_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ShipmentMode e)
            {
                d.ShipmentModes_Updating(e);
            }
            private static void __ShipmentModes_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ShipmentMode e)
            {
                d.ShipmentModes_Updated(e);
            }
            private static void __ShipmentModes_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ShipmentMode e)
            {
                d.ShipmentModes_Deleting(e);
            }
            private static void __ShipmentModes_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ShipmentMode e)
            {
                d.ShipmentModes_Deleted(e);
            }
            private static void __ShipmentModes_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.ShipmentMode e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ShipmentModes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ShipmentMode, bool>> __ShipmentModes_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ShipmentMode, bool>> filter = null;
                d.ShipmentModes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.SubMaterial>
                __SubMaterialsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.SubMaterial>(
                    "SubMaterials",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SubMaterials_Filter);
            private static bool __SubMaterials_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.SubMaterials_CanInsert(ref result);
                return result;
            }
            private static bool __SubMaterials_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.SubMaterials_CanUpdate(ref result);
                return result;
            }
            private static bool __SubMaterials_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.SubMaterials_CanDelete(ref result);
                return result;
            }
            private static bool __SubMaterials_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.SubMaterials_CanRead(ref result);
                return result;
            }
            private static void __SubMaterials_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.SubMaterial e)
            {
                d.SubMaterials_Inserting(e);
            }
            private static void __SubMaterials_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.SubMaterial e)
            {
                d.SubMaterials_Inserted(e);
            }
            private static void __SubMaterials_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.SubMaterial e)
            {
                d.SubMaterials_Updating(e);
            }
            private static void __SubMaterials_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.SubMaterial e)
            {
                d.SubMaterials_Updated(e);
            }
            private static void __SubMaterials_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.SubMaterial e)
            {
                d.SubMaterials_Deleting(e);
            }
            private static void __SubMaterials_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.SubMaterial e)
            {
                d.SubMaterials_Deleted(e);
            }
            private static void __SubMaterials_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.SubMaterial e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SubMaterials_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubMaterial, bool>> __SubMaterials_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SubMaterial, bool>> filter = null;
                d.SubMaterials_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.UnitsOfMeasurement>
                __UnitsOfMeasurementsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.UnitsOfMeasurement>(
                    "UnitsOfMeasurements",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UnitsOfMeasurements_Filter);
            private static bool __UnitsOfMeasurements_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UnitsOfMeasurements_CanInsert(ref result);
                return result;
            }
            private static bool __UnitsOfMeasurements_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UnitsOfMeasurements_CanUpdate(ref result);
                return result;
            }
            private static bool __UnitsOfMeasurements_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UnitsOfMeasurements_CanDelete(ref result);
                return result;
            }
            private static bool __UnitsOfMeasurements_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UnitsOfMeasurements_CanRead(ref result);
                return result;
            }
            private static void __UnitsOfMeasurements_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UnitsOfMeasurement e)
            {
                d.UnitsOfMeasurements_Inserting(e);
            }
            private static void __UnitsOfMeasurements_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UnitsOfMeasurement e)
            {
                d.UnitsOfMeasurements_Inserted(e);
            }
            private static void __UnitsOfMeasurements_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UnitsOfMeasurement e)
            {
                d.UnitsOfMeasurements_Updating(e);
            }
            private static void __UnitsOfMeasurements_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UnitsOfMeasurement e)
            {
                d.UnitsOfMeasurements_Updated(e);
            }
            private static void __UnitsOfMeasurements_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UnitsOfMeasurement e)
            {
                d.UnitsOfMeasurements_Deleting(e);
            }
            private static void __UnitsOfMeasurements_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UnitsOfMeasurement e)
            {
                d.UnitsOfMeasurements_Deleted(e);
            }
            private static void __UnitsOfMeasurements_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UnitsOfMeasurement e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UnitsOfMeasurements_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnitsOfMeasurement, bool>> __UnitsOfMeasurements_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnitsOfMeasurement, bool>> filter = null;
                d.UnitsOfMeasurements_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.User>(
                    "Users",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Users_Filter);
            private static bool __Users_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Users_CanInsert(ref result);
                return result;
            }
            private static bool __Users_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Users_CanUpdate(ref result);
                return result;
            }
            private static bool __Users_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Users_CanDelete(ref result);
                return result;
            }
            private static bool __Users_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserting(e);
            }
            private static void __Users_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserted(e);
            }
            private static void __Users_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updating(e);
            }
            private static void __Users_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updated(e);
            }
            private static void __Users_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleting(e);
            }
            private static void __Users_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleted(e);
            }
            private static void __Users_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> __Users_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter = null;
                d.Users_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.UserRole>
                __UserRolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.OrderManagerDBDataService, global::LightSwitchApplication.UserRole>(
                    "UserRoles",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_CanInsert,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_CanUpdate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_CanDelete,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_CanRead,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Inserting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Inserted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Updating,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Updated,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Deleting,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Deleted,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Validate,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__UserRoles_Filter);
            private static bool __UserRoles_CanInsert(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UserRoles_CanInsert(ref result);
                return result;
            }
            private static bool __UserRoles_CanUpdate(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UserRoles_CanUpdate(ref result);
                return result;
            }
            private static bool __UserRoles_CanDelete(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UserRoles_CanDelete(ref result);
                return result;
            }
            private static bool __UserRoles_CanRead(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                bool result = true;
                d.UserRoles_CanRead(ref result);
                return result;
            }
            private static void __UserRoles_Inserting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UserRole e)
            {
                d.UserRoles_Inserting(e);
            }
            private static void __UserRoles_Inserted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UserRole e)
            {
                d.UserRoles_Inserted(e);
            }
            private static void __UserRoles_Updating(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UserRole e)
            {
                d.UserRoles_Updating(e);
            }
            private static void __UserRoles_Updated(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UserRole e)
            {
                d.UserRoles_Updated(e);
            }
            private static void __UserRoles_Deleting(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UserRole e)
            {
                d.UserRoles_Deleting(e);
            }
            private static void __UserRoles_Deleted(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UserRole e)
            {
                d.UserRoles_Deleted(e);
            }
            private static void __UserRoles_Validate(global::LightSwitchApplication.OrderManagerDBDataService d, global::LightSwitchApplication.UserRole e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserRoles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserRole, bool>> __UserRoles_Filter(global::LightSwitchApplication.OrderManagerDBDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserRole, bool>> filter = null;
                d.UserRoles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.OrderManagerDBDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.OrderManagerDBDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.OrderManagerDBDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.OrderManagerDBDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.OrderManagerDBDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.OrderManagerDBDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.OrderManagerDBDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.OrderManagerDBDataService>(
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.OrderManagerDBDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.OrderManagerDBDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.OrderManagerDBDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.OrderManagerDBDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
