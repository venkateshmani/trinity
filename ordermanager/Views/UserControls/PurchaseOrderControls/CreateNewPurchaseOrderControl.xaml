<UserControl x:Class="ordermanager.Views.UserControls.PurchaseOrderControls.CreateNewPurchaseOrderControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:Converters="clr-namespace:ordermanager.ValueConverters"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:DataProviders="clr-namespace:ordermanager.ViewModel"
             d:DesignHeight="500" d:DesignWidth="1000">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Metro.Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="HideHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
            <Style x:Key="ProductsListContentStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="18" />
            </Style>
            <Style x:Key="ProductInfoStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
            </Style>
            <Converters:IndexToNumberConverter x:Key="IndexToNumber"/>
            <Converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
            <Converters:FlipBoolValueConverter x:Key="FlipBoolValueConverter"/>
            <Converters:Subractor x:Key="subractor"/>
            <Converters:HasErrorToVisibilityConverter x:Key="hasErrorToVisibilityConverter" />
            <Converters:ReadOnlyToVisibilityConverter x:Key="readOnlyToVisibilityConverter" />
            <DataProviders:DataProvider x:Key="DataProvider" />
            <Style x:Key="inLineTextBlockStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style x:Key="headerStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="5" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Margin="5">
      <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Background="White" Margin="5" CornerRadius="10">
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="Supplier :"  Style="{StaticResource inLineTextBlockStyle}" Grid.Row="0" Grid.Column="0" />
                <StackPanel  Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <ComboBox x:Name="supplierComboBox" Width="200" Margin="5" 
                              ItemsSource="{Binding Suppliers, Source={StaticResource DataProvider}}"
                              DisplayMemberPath="Name"
                              IsEditable="True"
                              SelectedItem="{Binding PurchaseOrder.Supplier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                              SelectionChanged="supplierComboBox_SelectionChanged_1"
                              IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}"
                              IsReadOnly="{Binding IsReadOnly}" />

                    <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="editExistingSupplier"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        ToolTip="Edit Supplier Details" Click="editExistingSupplier_Click_1"
                        Visibility="Collapsed">
                        <Rectangle Width="10" Height="10">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>

                    <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="addNewSupplierBtn"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        ToolTip="Add New Supplier" Click="addNewSupplierBtn_Click_1"
                        >
                        <Rectangle Width="10" Height="10">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                </StackPanel>

                <TextBlock Text="Purchase Order Date :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="1" />
                <TextBlock Text="{Binding  PurchaseOrder.PurchaseOrderDateWrapper, StringFormat=dd/MM/yy}" Margin="5" 
                                    Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left"/>

                <TextBlock Text="Purchase Order No. :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="2" />
                <TextBlock Text="{Binding PurchaseOrder.PurchaseOrderNumberWrapper}" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" />
                
                <TextBlock Text="Quotation Date :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="3" />
                    <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="5">
                        <DatePicker x:Name="quoteDate" VerticalAlignment="Center" Width="100" IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}" SelectedDate="{Binding PurchaseOrder.QuotationDateWrapper}" />
                        <TextBlock  Text="no." Margin="5,0,0,0" VerticalAlignment="Center" />
                        <TextBox Text="{Binding PurchaseOrder.QuotationNumberWrapper}" Width="50" Margin="5,0,0,0"
                    		HorizontalAlignment="Left"  IsReadOnly="{Binding IsReadOnly}"/>
                    </StackPanel>

                    <TextBlock Text="Price Terms :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="4" />
                    <TextBox Text="{Binding PurchaseOrder.PriceTerms}" Width="200" Margin="5,5,0,5"
                         Height="55" TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}"/>

                <TextBlock Text="Freigt :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="5" />
                <TextBox Text="{Binding PurchaseOrder.Freigt}" Width="200" Margin="5,5,0,5"
                         Height="55" TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}" />

                <TextBlock Text="Payment Terms :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="6" />
                <TextBox Text="{Binding PurchaseOrder.PaymentTerms}" Width="200" Margin="5,5,0,5"
                         Height="5" TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Grid.Row="6" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}" />

                <TextBlock Text="Delivery Date :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="7" />
                <TextBox Text="{Binding PurchaseOrder.DeliveryDate}" Width="200" Margin="5,5,0,5"
                         Height="55" TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Grid.Row="7" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}" />


                <TextBlock Text="Quality Specifications :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="8" />
                <TextBox Text="{Binding PurchaseOrder.QualitySpecifications}" Width="200" Margin="5,5,0,5"
                         Height="55" TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Grid.Row="8" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}" />

                <TextBlock Text="Quantity Allowance :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="9" />
                <TextBox Text="{Binding PurchaseOrder.QuantityAllowance}" Width="200" Margin="5,5,0,5"
                         Height="55" TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Grid.Row="9" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}" />


            </Grid>
            </Border>
            <Grid Grid.Row="0" Grid.Column="1" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Button Content="Choose Items" x:Name="btnChooseItems" Width="125" Height="30" Foreground="White" Margin="10,5,5,5" ToolTip="Choose Items" HorizontalAlignment="Left"
                           Click="btnChooseItems_Click_1">
                        <Button.Background>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </Button.Background>
                    </Button>
                    
                    <TextBlock Margin="20,0,0,0" Text="Currency: " VerticalAlignment="Center" />
                    <ComboBox x:Name="poCurrencySelection" Grid.Column="0"
                                                                      IsEditable="True"
                                                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                                      Height="20"
                                                                      ItemsSource="{Binding Currencies, Source={StaticResource DataProvider}}"
                                                                      DisplayMemberPath="Symbol"
                                                                      SelectedItem="{Binding POCurrency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                                      SelectionChanged="poCurrencySelection_SelectionChanged_1" />
                </StackPanel>
                <Border Grid.Row="1" BorderThickness="1" BorderBrush="Gray">
                    <DataGrid x:Name="gridDetails" Grid.Row="1" FontSize="{StaticResource NormalFontSize}" FontWeight="Normal" SelectionMode="Single" SelectionUnit="FullRow" 
                                HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray"
                                GridLinesVisibility="All" AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeColumns="True" 
                                HeadersVisibility="All"
                                ItemsSource="{Binding SelectedItems}" Background="WhiteSmoke">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="subMaterialColumn" Header="Item Name" Width="0.3*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding SubMaterial.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                        IsReadOnly="True" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="aliasColumn" Header="Alias" Width="0.15*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsReadOnly="True" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="quantityColumn" Header="QTY" Width="0.15*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding QuantityWrapper, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                         IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="unitOfMeasurementColumn" Header="UOM" Width="0.1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding UnitsOfMeasurementWrapper.Units, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                       IsReadOnly="True" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn x:Name="costPerUnitColumn" Header="Cost" Width="0.15*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding CostWrapper, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsHitTestVisible="{Binding CanEditCostAndTax}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="currencyColumn" Header="Currency" Width="0.16*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Currency.Symbol, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="taxPerUnitINR" Header="Tax" Width="0.13*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding TaxPerUnitWrapper, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                 IsHitTestVisible="{Binding CanEditCostAndTax}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="totalValue" Header="Total" Width="0.2*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding ItemCostInItemCurrency, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="actualInINR" Width="0.15*">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid  VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="Actual" Grid.Row="0"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <TextBlock Text="(INR)" Grid.Row="2" HorizontalAlignment="Center" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding ActualInINR, StringFormat={}{0:#0.####}, Mode=OneWay}"
                                                         IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="BudgetValueInINR" Header="Bugdet Value In INR" Width="0.15*">
                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid  VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="BUDGET" Grid.Row="0"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <TextBlock Text="(INR)" Grid.Row="2" HorizontalAlignment="Center" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding BudgetInINR, StringFormat={}{0:#0.####}, Mode=OneWay}"
                                                         IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="2" Margin="10">
                    <TextBlock Text="TOTAL PO VALUE: "  VerticalAlignment="Center" FontSize="18"/>
                    <TextBlock Text="{Binding TotalPOValue, StringFormat=n2}" VerticalAlignment="Center" FontSize="18">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </TextBlock.Foreground>
                    </TextBlock>
                    <TextBlock Text="{Binding POCurrency.Symbol}" VerticalAlignment="Center" FontSize="18" Margin="2,0,0,0">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </TextBlock.Foreground>
                    </TextBlock>
                </StackPanel>
            </Grid>
            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.ColumnSpan="3" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="3">
                <Button Content="Comments" x:Name="commentsBtn" Width="100" Height="30" Foreground="White" Margin="5" ToolTip="Generate Purchase Order" HorizontalAlignment="Left" Click="commentsBtn_Click_1">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Button Content="Generate" x:Name="positiveBtn" Width="100" Height="30" Foreground="White" Margin="5" ToolTip="Generate Purchase Order" HorizontalAlignment="Left" Click="positiveBtn_Click_1">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Button Content="Discard" x:Name="negativeBtn" Width="100" Height="30" Margin="5" Foreground="White"  ToolTip="Discard Invoice" HorizontalAlignment="Left" Click="negativeBtn_Click_1">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource ValidationColor5}" />
                    </Button.Background>
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
