<UserControl x:Class="ordermanager.Views.UserControls.PurchaseOrderControls.CreateNewPurchaseOrderControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:Converters="clr-namespace:ordermanager.ValueConverters"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:DataProviders="clr-namespace:ordermanager.ViewModel"
             d:DesignHeight="500" d:DesignWidth="1000">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Metro.Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="HideHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
            <Style x:Key="ProductsListContentStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="18" />
            </Style>
            <Style x:Key="ProductInfoStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
            </Style>
            <Converters:IndexToNumberConverter x:Key="IndexToNumber"/>
            <Converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
            <Converters:FlipBoolValueConverter x:Key="FlipBoolValueConverter"/>
            <Converters:Subractor x:Key="subractor"/>
            <Converters:HasErrorToVisibilityConverter x:Key="hasErrorToVisibilityConverter" />
            <DataProviders:DataProvider x:Key="DataProvider" />
            <Style x:Key="inLineTextBlockStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style x:Key="headerStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="5" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Margin="5">
      <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Text="Customer :"  Style="{StaticResource inLineTextBlockStyle}" Grid.Row="0" Grid.Column="0" />
                <StackPanel  Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <ComboBox x:Name="supplierComboBox" Width="300" Margin="5" 
                              ItemsSource="{Binding Suppliers, Source={StaticResource DataProvider}}"
                              DisplayMemberPath="Name"
                              IsEditable="True"
                              SelectedItem="{Binding Order.Customer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                              SelectionChanged="supplierComboBox_SelectionChanged_1"
                              IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}" />

                    <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="editExistingSupplier"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        ToolTip="Edit Customer Details" Click="editExistingSupplier_Click_1"
                        Visibility="Collapsed">
                        <Rectangle Width="10" Height="10">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>

                    <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="addNewSupplierBtn"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        ToolTip="Add New Customer" Click="addNewSupplierBtn_Click_1"
                        >
                        <Rectangle Width="10" Height="10">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Button>
                </StackPanel>

                <TextBlock Text="Purchase Order Date :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="1" />
                <DatePicker x:Name="poDate" Width="150" 
                                    Margin="5" 
                                    Grid.Row="1" Grid.Column="1"
                                    SelectedDate="{Binding PurchaseOrder.PurchaseOrderDate, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                    HorizontalAlignment="Left"
                                    Controls:TextboxHelper.Watermark="Select a date"
                                    IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}" Height="26" VerticalAlignment="Bottom" />

                <TextBlock Text="Purchase Order No. :" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="2" />
                <TextBlock Text="###" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button Content="Choose Items" x:Name="btnChooseItems" Width="125" Height="30" Foreground="White" Margin="10,5,5,5" ToolTip="Choose Items" HorizontalAlignment="Left"
                       Click="btnChooseItems_Click_1" >
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Border Grid.Row="1" BorderThickness="1" BorderBrush="Gray">
                    <DataGrid x:Name="gridDetails" FontSize="{StaticResource NormalFontSize}" FontWeight="Normal" SelectionMode="Single" SelectionUnit="FullRow" 
                            GridLinesVisibility="None" AutoGenerateColumns="False" CanUserDeleteRows="True" CanUserAddRows="False" CanUserResizeColumns="True" 
                            HeadersVisibility="All"
                            DataContext="{Binding SelectedMaterial}" ItemsSource="{Binding ProductMaterialItemsWrapper}" Background="WhiteSmoke">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="subMaterialColumn" Header="Item Name" Width="0.3*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                    IsReadOnly="True" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="aliasColumn" Header="Alias" Width="0.15*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                     IsReadOnly="True" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="quantityColumn" Header="Quantity" Width="0.15*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding QuantityWrapper, StringFormat=n4, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                     IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="unitOfMeasurementColumn" Header="UOM" Width="0.1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding QuantityWrapper, StringFormat=n4, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                   IsReadOnly="True" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn x:Name="costPerUnitColumn" Header="Cost" Width="0.15*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding CostWrapper, StringFormat=n4, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                     IsHitTestVisible="{Binding IsEditable}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="currencyColumn" Header="Currency" Width="0.16*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding CostWrapper, StringFormat=n4, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                     IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="totalValue" Header="Total Value" Width="0.2*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding CostWrapper, StringFormat=n4, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                     IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </Grid>
            <StackPanel Orientation="Horizontal" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="3">
                <Button Content="Generate" x:Name="btnGeneratePO" IsEnabled="False"  Width="100" Height="30" Foreground="White" Margin="5" ToolTip="Generate Purchase Order" HorizontalAlignment="Left" Click="btnGeneratePO_Click_1">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Button Content="Discard" x:Name="btnDiscard" Width="100" Height="30" Margin="5" Foreground="White"  ToolTip="Discard Invoice" HorizontalAlignment="Left" Click="btnDiscard_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource ValidationColor5}" />
                    </Button.Background>
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
