<Controls:MetroWindow  x:Class="ordermanager.Views.UserControls.PurchaseOrderControls.BillOfMaterialBrowser"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Converters="clr-namespace:ordermanager.ValueConverters"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:DataProviders="clr-namespace:ordermanager.ViewModel"
        WindowStartupLocation="CenterScreen"    
        Title="Bill Of Materials Browser" Height="500" Width="950">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Metro.Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="HideHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
            <Style x:Key="ProductsListContentStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="18" />
            </Style>
            <Style x:Key="ProductInfoStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
            </Style>
            <Converters:IndexToNumberConverter x:Key="IndexToNumber"/>
            <Converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
            <Converters:FlipBoolValueConverter x:Key="FlipBoolValueConverter"/>
            <Converters:Subractor x:Key="subractor"/>
            <Converters:HasErrorToVisibilityConverter x:Key="hasErrorToVisibilityConverter" />
            <DataProviders:DataProvider x:Key="DataProvider" />
        </ResourceDictionary>
    </Window.Resources>

    <Controls:MetroWindow.GlowBrush>
        <SolidColorBrush Color="{DynamicResource AccentColor}" />
    </Controls:MetroWindow.GlowBrush>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1">
            <DataGrid x:Name="gridDetails" Grid.Row="1" FontSize="{StaticResource NormalFontSize}" FontWeight="Normal" SelectionMode="Single" SelectionUnit="FullRow" 
                                HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray"
                                GridLinesVisibility="All" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserResizeColumns="True" 
                                HeadersVisibility="All"
                                ItemsSource="{Binding PurchasableMaterials}" Background="WhiteSmoke">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="  " Width="0.1*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelectedToGeneratePO, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                   
                    <DataGridTemplateColumn x:Name="subMaterialColumn" Header="Item Name" Width="0.3*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding SubMaterial.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                        IsReadOnly="True" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="aliasColumn" Header="Alias" Width="0.15*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsReadOnly="True" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="quantityColumn" Header="Quantity" Width="0.15*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding QuantityWrapper, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                         IsReadOnly="True"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="unitOfMeasurementColumn" Header="UOM" Width="0.1*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding UnitsOfMeasurementWrapper.Units, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                       IsReadOnly="True" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn x:Name="costPerUnitColumn" Header="Cost" Width="0.15*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding CostWrapper, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsHitTestVisible="{Binding IsEditable}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="currencyColumn" Header="Currency" Width="0.16*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Currency.Symbol, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsReadOnly="True"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="taxPerUnitINR" Header="Tax" Width="0.13*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding TaxPerUnitWrapper, StringFormat={}{0:#0.####}}"
                                                 IsReadOnly="True" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="totalValue" Header="Total Value" Width="0.2*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding ItemCostWrapper, StringFormat={}{0:#0.####}, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                         IsReadOnly="True"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
        <StackPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
            <Button x:Name="positiveDecisionBtn" Content="OK" Width="100" Height="35" Foreground="White" Margin="3"
                       Click="positiveDecisionBtn_Click"  >
                <Button.Background>
                    <SolidColorBrush Color="{StaticResource AccentColor}" />
                </Button.Background>
            </Button>
            <Button x:Name="cancelBtn" Content="Cancel" Width="100" Height="35" Foreground="White" Margin="5,3,8,3"
                        Click="cancelBtn_Click"  Visibility="Collapsed">
                <Button.Background>
                    <SolidColorBrush Color="{StaticResource AccentColor}" />
                </Button.Background>
            </Button>
        </StackPanel>
    </Grid>
</Controls:MetroWindow> 
