<UserControl x:Class="ordermanager.Views.UserControls.GRNControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:ordermanager.Views.UserControls"
             xmlns:DataProviders="clr-namespace:ordermanager.ViewModel"
             xmlns:Converters="clr-namespace:ordermanager.ValueConverters"
             mc:Ignorable="d"  d:DesignHeight="506" d:DesignWidth="1288.284">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Metro.Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <Style x:Key="HideHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
            <Style x:Key="ProductsListContentStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="18" />
            </Style>
            <Style x:Key="ProductInfoStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
            </Style>
            <Converters:IndexToNumberConverter x:Key="IndexToNumber"/>
            <DataProviders:DataProvider x:Key="DataProvider" />
            <Converters:Subractor x:Key="subractor"/>
            <Converters:FlipBoolValueConverter x:Key="FlipBoolValueConverter"/>
            <Converters:HasErrorToVisibilityConverter x:Key="hasErrorToVisibilityConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="29.851" />
            <RowDefinition Height="9.149"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.30*"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        
        
        <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="2">
            <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="WhiteSmoke">
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="Suppliers and PO's" Margin="4" Style="{StaticResource DescriptionHeaderStyle}" />
            </Border>
        </Grid>
        <TreeView x:Name="tvProducts" Grid.Row="2" Grid.Column="0" ItemsSource="{Binding Path=Suppliers}" Background="White" Margin="2"
                 SelectedItemChanged="tvProducts_SelectedItemChanged" >
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding PurchaseOrders}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="{Binding ElementName=tvProducts, Path=ActualWidth, Converter={StaticResource subractor}, ConverterParameter=20}" Height="30">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Converter={StaticResource IndexToNumber}}"  FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center"  Style="{StaticResource ProductsListContentStyle}"/>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text=". " FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center"  Style="{StaticResource ProductsListContentStyle}" />
                        <Viewbox PresentationTraceSources.TraceLevel="High" Margin="3,0,3,0" Grid.Column="2" Width="25" Height="25" StretchDirection="Both"  Visibility="{Binding Path=HasErrors, Converter={StaticResource hasErrorToVisibilityConverter}}">
                            <Canvas Grid.Column="2" Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                <Path Width="22.7614" Height="28.2798" Canvas.Left="12.4886" Canvas.Top="10.9702" Stretch="Fill" Data="F1 M 24.25,39.25C 24.25,35.25 26,31.5 26,32.5C 26,33.5 28,29.5 29,27.5C 30,25.5 31,22.75 31,22.75L 35,23C 35,23 36,14.25 34,13.25C 32,12.25 29.9174,13.6505 28,12.5C 23,9.5 15,11.5 16,13.5C 16,13.5 12,15.5 13,16.5C 13,16.5 12,18 13.25,19.5C 12,21 12.5,22.5 13.25,23.5C 12.5,25 12,26.5 15,27.5C 16.8974,28.1325 22,25.75 22,28.5C 22,29.5 20,32.5 20,34.5C 20,38.5 24.25,39.25 24.25,39.25 Z ">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{StaticResource ValidationColor5}" />
                                    </Path.Fill>
                                </Path>
                            </Canvas>
                        </Viewbox>
                        <TextBlock Grid.Column="3" HorizontalAlignment="Left" TextAlignment="Left" Text="{Binding Path=Name}"   FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center" Style="{StaticResource ProductsListContentStyle}"/>
                    </Grid>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="25" Margin="10,2,0,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Viewbox Margin="3,0,3,0" Grid.Column="0" Width="20" Height="20" StretchDirection="Both"  Visibility="{Binding Path=HasErrors, Converter={StaticResource hasErrorToVisibilityConverter}}">
                                    <Canvas Grid.Column="2" Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                        <Path Width="22.7614" Height="28.2798" Canvas.Left="12.4886" Canvas.Top="10.9702" Stretch="Fill" Data="F1 M 24.25,39.25C 24.25,35.25 26,31.5 26,32.5C 26,33.5 28,29.5 29,27.5C 30,25.5 31,22.75 31,22.75L 35,23C 35,23 36,14.25 34,13.25C 32,12.25 29.9174,13.6505 28,12.5C 23,9.5 15,11.5 16,13.5C 16,13.5 12,15.5 13,16.5C 13,16.5 12,18 13.25,19.5C 12,21 12.5,22.5 13.25,23.5C 12.5,25 12,26.5 15,27.5C 16.8974,28.1325 22,25.75 22,28.5C 22,29.5 20,32.5 20,34.5C 20,38.5 24.25,39.25 24.25,39.25 Z ">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{StaticResource ValidationColor5}" />
                                            </Path.Fill>
                                        </Path>
                                    </Canvas>
                                </Viewbox>
                                <TextBlock TextAlignment="Left"  Grid.Column="1" Text="{Binding Path=PurchaseOrderNumber}" Margin="2,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource ProductsListContentStyle}"  FontFamily="{StaticResource ContentFontFamily}" FontSize="16" />
                            </Grid>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <Grid Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
            <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="WhiteSmoke">
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="GRN Details" Margin="4" Style="{StaticResource DescriptionHeaderStyle}" />
            </Border>
        </Grid>
        <TextBlock x:Name="supplierSelectedInfo" Text="Select a purchase order under the supplier" Grid.Row="2" Grid.Column="2"
                   VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden"></TextBlock>

        <Grid Grid.Row="2" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5">
            <TabControl x:Name="grnDetailsControl" SelectionChanged="grnDetailsControl_SelectionChanged_1">
                <TabItem x:Name="tabMaterialsReceipt" Header="  Materials Receipt  ">
                    <Border BorderBrush="Gray" BorderThickness="1" Margin="5,5,5,5" Grid.Row="1">
                        <DataGrid x:Name="materialsReciptGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SelectionMode="Single" 
                                              GridLinesVisibility="None" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="True" CanUserResizeColumns="True"
                                              HorizontalGridLinesBrush="Gainsboro" VerticalGridLinesBrush="Gainsboro"
                                              RowHeaderWidth="25"
                                              HeadersVisibility="Column"
                                              IsReadOnly="{Binding IsMaterialsReceiptReadOnly}"  >
                        <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Material" Width="0.1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding SubMaterial.Name}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="UOM" Width="0.1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding UnitsOfMeasurement.Units}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="ORD. Qty" Width="0.1*" ToolTipService.ToolTip="Ordered Quantity">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True"  Text="{Binding Quantity, StringFormat=n4}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Invc. #" Width="0.1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding InvoiceNumber, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                     IsReadOnly="{Binding DataContext.IsMaterialsReceiptReadOnly,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Invc. Dt" Width="0.12*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding InvoicedDateWrapper, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                        IsHitTestVisible="{Binding DataContext.IsMaterialsReceiptReadOnly, Converter={StaticResource FlipBoolValueConverter},RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Recv. Date" Width="0.12*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding RecievedDateWrapper, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                        IsHitTestVisible="{Binding DataContext.IsMaterialsReceiptReadOnly,Converter={StaticResource FlipBoolValueConverter},RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                                <DataGridTemplateColumn Header="Invc. Qty" Width="0.1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding InvoicedQuantityWrapper, StringFormat=n4, UpdateSourceTrigger=LostFocus, NotifyOnSourceUpdated=True, ValidatesOnNotifyDataErrors=True}" 
                                                     IsReadOnly="{Binding DataContext.IsMaterialsReceiptReadOnly,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Recv. Qty" Width="0.1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding RecievedInHandWrapper, StringFormat=n4, UpdateSourceTrigger=LostFocus,  NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                     IsReadOnly="{Binding DataContext.IsMaterialsReceiptReadOnly,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                               
                                <DataGridTemplateColumn Header="Exc. Qty" Width="0.1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True"  Text="{Binding ExcessiveQuantityWrapper, StringFormat=n4}"/> 
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                              
                                <DataGridTemplateColumn Header="Extra (INR)" Width="0.1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding OtherChargesInINR}"
                                                     IsReadOnly="{Binding DataContext.IsMaterialsReceiptReadOnly,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                            </DataGrid.Columns>
                    </DataGrid>
                  </Border>
                </TabItem>
                <TabItem x:Name="tabQualityTab" Header="  Quality  ">
                    <Border BorderBrush="Gray" BorderThickness="1" Margin="10,5,10,10" Grid.Row="1">
                        <DataGrid x:Name="qualityGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SelectionMode="Single" 
                                              GridLinesVisibility="None" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="True" CanUserResizeColumns="True"
                                              HorizontalGridLinesBrush="Gainsboro" VerticalGridLinesBrush="Gainsboro" ItemsSource="{Binding ProductMaterialsWrapper, UpdateSourceTrigger=PropertyChanged}"
                                              RowHeaderWidth="25"
                                              HeadersVisibility="All"
                                              IsReadOnly="{Binding IsQualityReadOnly}">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Material" Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True" Text="{Binding SubMaterial.Name}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="UOM"  Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True"  Text="{Binding UnitsOfMeasurement.Units}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Recv. Qty"  Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox IsReadOnly="True"  Text="{Binding RecievedInHand, StringFormat=N4}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Passed Qty"  Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding QualityPassedQuantityWrapper, StringFormat=n4, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                                      IsReadOnly="{Binding DataContext.IsQualityReadOnly,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Failed Qty"  Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding QualityFailedQuantityWrapper, StringFormat=n4}" IsReadOnly="True" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="Supplier"  Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding QualityFailedQuantityWrapper, StringFormat=n4}" IsReadOnly="True" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn  Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button x:Name="generatePO" Content="Generate PO"  Margin="5" Width="150" Height="35" Foreground="White"
                                              ToolTip="Generate Purchase Order" Click="generatePO_Click">
                                                <Button.Background>
                                                    <SolidColorBrush Color="{StaticResource AccentColor}" />
                                                </Button.Background>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                </TabItem>
            </TabControl>
        </Grid>
        <GridSplitter Grid.Row="0" Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      Background="LightGray" 
                      ShowsPreview="True"
                      Width="5" Grid.RowSpan="3" />

        <Grid Grid.Row="3" Grid.ColumnSpan="3">
            <Rectangle Height="1" Fill="Gray" VerticalAlignment="Top" />
        </Grid>

        <Grid Grid.Row="3" Grid.ColumnSpan="3" x:Name="gridButtons">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="saveBtn" Content="Save"  Margin="5" Width="150" Height="35" Foreground="White"
                                        ToolTip="Save Changes" Click="Save_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Button x:Name="submitBtn" Content="Submit" Margin="5" Width="150" Height="35" Foreground="White"
                                        ToolTip="Submit to next level" Click="Submit_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
