<UserControl x:Class="ordermanager.Views.UserControls.ProductMaterialsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:ordermanager.Views.UserControls"
             xmlns:Converters="clr-namespace:ordermanager.ValueConverters"
             xmlns:DataProviders="clr-namespace:ordermanager.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000" DataContextChanged="UserControl_DataContextChanged" x:Name="This">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Metro.Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <Style x:Key="HideHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
            <Style x:Key="ProductsListContentStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="18" />
            </Style>
            <Style x:Key="ProductInfoStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
            </Style>
            <Converters:IndexToNumberConverter x:Key="IndexToNumber"/>
            <Converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
            <Converters:FlipBoolValueConverter x:Key="FlipBoolValueConverter"/>
            <Converters:Subractor x:Key="subractor"/>
            <Converters:HasErrorToVisibilityConverter x:Key="hasErrorToVisibilityConverter" />
            <DataProviders:DataProvider x:Key="DataProvider" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.28*"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0">
            <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="WhiteSmoke">
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="Products" Margin="4" Style="{StaticResource DescriptionHeaderStyle}" />
            </Border>
        </Grid>

        <ListView x:Name="productsList" Grid.Row="1" Grid.Column="0" BorderBrush="Transparent" Margin="2" ItemsSource="{Binding Path=Products}" SelectedIndex="{Binding Path=SelectedIndex, Mode=OneWay}" SelectionChanged="productsList_SelectionChanged">
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{StaticResource HideHeaderStyle}">
                    <GridViewColumn x:Name="productColumn" Header="Product" Width="{Binding ActualWidth, ElementName=productsList, Converter={StaticResource subractor}, ConverterParameter=5}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexToNumber}}"  FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center"  Style="{StaticResource ProductsListContentStyle}"/>
                                    <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text=".  "   FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center"  Style="{StaticResource ProductsListContentStyle}" />
                                    <Viewbox Margin="3,0,3,0" Grid.Column="2" Visibility="{Binding Path=HasErrorsInProductMaterials, Converter={StaticResource hasErrorToVisibilityConverter}}" Width="25" Height="25" StretchDirection="Both">
                                        <Canvas Grid.Column="2" Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                            <Path Width="22.7614" Height="28.2798" Canvas.Left="12.4886" Canvas.Top="10.9702" Stretch="Fill" Data="F1 M 24.25,39.25C 24.25,35.25 26,31.5 26,32.5C 26,33.5 28,29.5 29,27.5C 30,25.5 31,22.75 31,22.75L 35,23C 35,23 36,14.25 34,13.25C 32,12.25 29.9174,13.6505 28,12.5C 23,9.5 15,11.5 16,13.5C 16,13.5 12,15.5 13,16.5C 13,16.5 12,18 13.25,19.5C 12,21 12.5,22.5 13.25,23.5C 12.5,25 12,26.5 15,27.5C 16.8974,28.1325 22,25.75 22,28.5C 22,29.5 20,32.5 20,34.5C 20,38.5 24.25,39.25 24.25,39.25 Z ">
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{StaticResource ValidationColor5}" />
                                                </Path.Fill>
                                            </Path>
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock Grid.Column="3" HorizontalAlignment="Left" TextAlignment="Left" DataContext="{Binding Path=ProductName}" Text="{Binding Path=Name}"   FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center" Style="{StaticResource ProductsListContentStyle}"/>
                                    <Border Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <TextBlock HorizontalAlignment="Right" TextAlignment="Right" Text="{Binding Path=ExpectedQuantity, StringFormat=n}"  FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center" Style="{StaticResource ProductsListContentStyle}"/>
                                            <TextBlock HorizontalAlignment="Right" TextAlignment="Right" Text="{Binding Path=UnitsOfMeasurement.Units}"  FontFamily="{StaticResource ContentFontFamily}" VerticalAlignment="Center" Style="{StaticResource ProductsListContentStyle}" Margin="6,0,0,0"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Grid Grid.Row="0" Grid.Column="2">
            <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="WhiteSmoke">
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="Materials"  Margin="4" Grid.Row="0" Style="{StaticResource DescriptionHeaderStyle}" />
            </Border>
        </Grid>

        <Grid x:Name="productDetailsGrid"  Grid.Row="1" Grid.Column="2" DataContext="{Binding ElementName=productsList, Path=SelectedItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <TextBlock Text="Product Name:" Style="{StaticResource ProductInfoStyle}" Foreground="Gray"/>
                <TextBlock Text="{Binding Path = ProductName.Name}"  Style="{StaticResource ProductInfoStyle}" FontWeight="Bold">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </TextBlock.Foreground>
                </TextBlock>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Center">
                <TextBlock Text="Quantity:" Style="{StaticResource ProductInfoStyle}" Foreground="Gray"/>
                <TextBlock Text="{Binding Path = ExpectedQuantity, StringFormat=n}" Style="{StaticResource ProductInfoStyle}" FontWeight="Bold">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </TextBlock.Foreground>
                </TextBlock>
                <TextBlock Text="{Binding Path = UnitsOfMeasurement.Units}" Style="{StaticResource ProductInfoStyle}" FontWeight="Bold">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </TextBlock.Foreground>
                </TextBlock>
            </StackPanel>

            <Grid  VerticalAlignment="Bottom" Grid.Row="0" HorizontalAlignment="Right" Height="62">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Per Unit Order Value:" Grid.Row="0" Grid.Column="0" Style="{StaticResource ProductInfoStyle}" Foreground="Gray" HorizontalAlignment="Right"/>
                <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Orientation="Horizontal">
                    <TextBlock Text="{Binding Path =PerUnitOrderValue,StringFormat=n}" Style="{StaticResource ProductInfoStyle}" FontWeight="Bold" Margin="5,0,0,0" HorizontalAlignment="Left" >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </TextBlock.Foreground>
                    </TextBlock>
                    <TextBlock Style="{StaticResource ProductInfoStyle}" FontWeight="Bold" Text="INR">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </TextBlock.Foreground>
                    </TextBlock>
                </StackPanel>
                <TextBlock Text="Per Unit Total Consumption Cost:" Grid.Row="1" Grid.Column="0" Style="{StaticResource ProductInfoStyle}" Foreground="Gray" HorizontalAlignment="Right"/>
                <StackPanel Grid.Row="1" Grid.Column="2" VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Text="{Binding Path=PerUnitTotalProductMaterialsCost, StringFormat=n}" Style="{StaticResource ProductInfoStyle}" FontWeight="Bold" Margin="5,0,0,0" HorizontalAlignment="Left" >
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </TextBlock.Foreground>
                    </TextBlock>
                    <TextBlock Style="{StaticResource ProductInfoStyle}" FontWeight="Bold" Text="INR">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </TextBlock.Foreground>
                    </TextBlock>
                </StackPanel>
            </Grid>

            <Grid x:Name="gridDetails" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel x:Name="spAddDeleteButtons" Grid.Row="0" Margin="10,10,5,0" Orientation="Horizontal"  Visibility="{Binding Path= DataContext.NewItemAddBtnVisibility,ElementName=This}">
                    <Button x:Name="btnAddNewItem"  Content="New Item"  Width="100" Height="25" Foreground="White"  ToolTip="Add New Item" HorizontalAlignment="Left" Click="AddNewItem_Click">
                        <Button.Background>
                            <SolidColorBrush Color="{StaticResource AccentColor}" />
                        </Button.Background>
                    </Button>
                    <Button x:Name="btnDeleteItem"  Content="Delete"  Width="100" Height="25" Margin="10,0,0,0" Foreground="White" ToolTip="Delete Selected Item" HorizontalAlignment="Left" Click="DeleteItem_Click" Visibility="Hidden">
                        <Button.Background>
                            <SolidColorBrush Color="{StaticResource ValidationColor5}" />
                        </Button.Background>
                    </Button>
                </StackPanel>
                <Border BorderBrush="Gray" BorderThickness="1" Margin="10,5,10,10" Grid.Row="1">
                    <DataGrid x:Name="materialsGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SelectionMode="Single" 
                                              GridLinesVisibility="None" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="True" CanUserResizeColumns="True"
                                              HorizontalGridLinesBrush="Gainsboro" VerticalGridLinesBrush="Gainsboro" ItemsSource="{Binding ProductMaterialsWrapper, UpdateSourceTrigger=PropertyChanged}"
                                              RowHeaderWidth="25"
                                              HeadersVisibility="All">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="materialColumn" Header="Material Name" Width="0.3*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ComboBox x:Name="materialsComboBox" Grid.Column="0" 
                                                      IsReadOnly="{Binding Path=DataContext.CanEditMaterials, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                                      IsEditable="{Binding Path=DataContext.CanEditMaterials,ElementName=This}"
                                                      IsHitTestVisible="{Binding RelativeSource={RelativeSource Mode=Self}, Path= IsEditable}"
                                                      IsTabStop="{Binding RelativeSource={RelativeSource Mode=Self}, Path= IsEditable}"                   
                                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch"                                                                
                                                      ItemsSource="{Binding AvailableMaterials, Source={StaticResource DataProvider}}"         
                                                      DisplayMemberPath="Name" SelectedItem="{Binding MaterialNameWrapper, Mode=TwoWay,                 
                                                      UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                      TextBoxBase.TextChanged="comboBox_TextChanged"
                                                      Height="20" />
                                            <Button  x:Name="addBtn" Width="28"  Grid.Row="0" Grid.Column="1" Height="28" Margin="0, 2, 0, 0" HorizontalAlignment="Left" 
                                                     Cursor="Hand" Click="AddNewMaterial"  Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="Add New Material"
                                                     Visibility="Collapsed" >
                                                <Rectangle Width="10" Height="10">
                                                    <Rectangle.Fill>
                                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="costPerUnitColumn" Header="Cost Per Unit" Width="0.15*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding CostPerUnitWrapper, StringFormat=n, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                 IsReadOnly="{Binding Path=DataContext.CanEditMaterialsCost, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                                 IsHitTestVisible="{Binding Path=DataContext.CanEditMaterialsCost, ElementName=This}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="currencyColumn" Header="Currency" Width="0.12*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ComboBox x:Name="currencyComboBox" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                      Height="20" ItemsSource="{Binding Currencies, Source={StaticResource DataProvider}}" DisplayMemberPath="Symbol"
                                                      SelectedItem="{Binding CurrencyWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                      IsReadOnly="{Binding Path=DataContext.CanEditMaterialsCost, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                                      IsEditable="{Binding Path=DataContext.CanEditMaterialsCost,ElementName=This}"
                                                      IsHitTestVisible="{Binding RelativeSource={RelativeSource Mode=Self}, Path= IsEditable}"
                                                      IsTabStop="{Binding RelativeSource={RelativeSource Mode=Self}, Path= IsEditable}"  />
                                            <Button  x:Name="btnAddCurrency" Width="28"   Grid.Row="0" Grid.Column="1" Height="28" Margin="0, 2, 0, 0" HorizontalAlignment="Left"  
                                                     Cursor="Hand" Visibility="Collapsed" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="Add New Currency">
                                                <Rectangle Width="10" Height="10">
                                                    <Rectangle.Fill>
                                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="currencyValueInINR" Header="Currency Value In INR" Width="0.22*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding CurrencyValueInINR, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, StringFormat=n}"
                                                 IsReadOnly="{Binding Path=DataContext.CanEditMaterialsCost, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                                 IsHitTestVisible="{Binding Path=DataContext.CanEditMaterialsCost,ElementName=This}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="unitOfMeasurementColumn" Header="UOM" Width="0.1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ComboBox x:Name="uomComboBox" Grid.Column="0"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                      Height="20" ItemsSource="{Binding UOMs, Source={StaticResource DataProvider}}" DisplayMemberPath="Units"
                                                      SelectedItem="{Binding  UnitsOfMeasurementWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                      IsReadOnly="{Binding Path=DataContext.CanEditMaterialsCost, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                                      IsEditable="{Binding Path=DataContext.CanEditMaterialsCost,ElementName=This}"
                                                      IsHitTestVisible="{Binding RelativeSource={RelativeSource Mode=Self}, Path= IsEditable}"
                                                      IsTabStop="{Binding RelativeSource={RelativeSource Mode=Self}, Path= IsEditable}"  />
                                            <Button  x:Name="btnAddUOM" Width="28" Grid.Row="0" Grid.Column="1" Height="28" Margin="0, 2, 0, 0" HorizontalAlignment="Left" 
                                                     Cursor="Hand" Visibility="Collapsed" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="Add New UOM">
                                                <Rectangle Width="10" Height="10">
                                                    <Rectangle.Fill>
                                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="consumptionColumn" Header="Consumption" Width="0.16*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding ConsumptionWrapper, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                                 IsReadOnly="{Binding Path=DataContext.CanEditConsumption, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                                 IsHitTestVisible="{Binding Path=DataContext.CanEditConsumption,ElementName=This}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="consumptionCostColumn" Header="Consumption Cost" Width="0.2*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding ConsumptionCostWrapper, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, StringFormat=n}" FontWeight="Bold" IsReadOnly="True"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
                <Grid Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="2,2,2,10">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Stretch">
                        <TextBlock Text="Other Cost:" Style="{StaticResource ProductInfoStyle}" Foreground="Gray"/>
                        <TextBox Text="{Binding OtherCost.CostWrapper,StringFormat=n, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}"
                                 IsReadOnly="{Binding Path=DataContext.CanEditExtraCost, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                 IsHitTestVisible="{Binding Path=DataContext.CanEditExtraCost,ElementName=This}"
                                 VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Width="100" Height="20" Foreground="Gray" Margin="10,0,0,0"/>
                        <TextBlock Text="INR" Style="{StaticResource ProductInfoStyle}" Foreground="Gray" Margin="3,0,0,0"/>
                        <TextBox Text="{Binding OtherCost.DescriptionWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" 
                                 IsReadOnly="{Binding Path=DataContext.CanEditExtraCost, Converter={StaticResource FlipBoolValueConverter},ElementName=This}"
                                 IsHitTestVisible="{Binding Path=DataContext.CanEditExtraCost,ElementName=This}"
                                 VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="400" Height="20" Foreground="Gray" Margin="40,0,0,0" Controls:TextboxHelper.Watermark=" Enter reason for other cost here"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>

        <GridSplitter Grid.Row="0" Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      Background="LightGray" 
                      ShowsPreview="True"
                      Width="5" Grid.RowSpan="2" />

        <Grid Grid.Row="2" Grid.ColumnSpan="3">
            <Rectangle Height="1" Fill="Gray" />
        </Grid>

        <Grid x:Name="gridButtons" Grid.Row="3" Grid.ColumnSpan="3">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Button x:Name="sendBackBtn" Content="Send Back"  Margin="5" Width="150" Height="35" Foreground="White"
                                        ToolTip="Send back to previous level" Visibility="Hidden">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Visibility="{Binding Path=DataContext.ActionButtonsVisibility, ElementName=This}">
                <Button x:Name="saveBtn" Content="Save"  Margin="5" Width="150" Height="35" Foreground="White"
                                        ToolTip="Save Changes" Click="Save_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Button x:Name="submitBtn" Content="Submit" Margin="5" Width="150" Height="35" Foreground="White"
                                        ToolTip="Submit to next level" Click="submitBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Button x:Name="discardBtn" Content="Discard Changes" Margin="5" Width="150" Height="35" Foreground="White"
                                        ToolTip="Discard the Changes"
                                        Click="discardBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource ValidationColor5}"/>
                    </Button.Background>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
