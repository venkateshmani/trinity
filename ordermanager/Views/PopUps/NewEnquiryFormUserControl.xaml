<UserControl xmlns:CommonControls="clr-namespace:ordermanager.Views.CommonControls" 
             x:Class="ordermanager.Views.PopUps.NewEnquiryFormUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:DataProviders="clr-namespace:ordermanager.ViewModel"
             xmlns:Converters="clr-namespace:ordermanager.ValueConverters"
             xmlns:my="clr-namespace:ordermanager.Views.PopUps"
             mc:Ignorable="d" d:DesignHeight="619" d:DesignWidth="1068" Background="White">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Metro.Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
                <Setter Property="FontSize" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <Style x:Key="TextBlockHeaderStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="22" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="inLineTextBlockStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <DataProviders:DataProvider x:Key="DataProvider" />
            <Converters:FlipBoolValueConverter x:Key="FlipBoolValueConverter"/>
            <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <Converters:BoolToHighlighter x:Key="BoolToHighlighter" />
        </ResourceDictionary>


    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>



        <Grid  x:Name="rootLayout" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*" />
                <ColumnDefinition Width="0.3*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ColumnSpan="2">
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Customer"  Style="{StaticResource inLineTextBlockStyle}" Grid.Row="0" Grid.Column="0" />
                    <StackPanel  Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                        <ComboBox x:Name="customerComboBox" Width="300" Margin="5" 
                              ItemsSource="{Binding DBResources.Customers}"
                              DisplayMemberPath="Name"
                              IsEditable="True"
                              SelectedItem="{Binding Order.Customer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                              SelectionChanged="customerComboBox_SelectionChanged"
                              IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}" />

                        <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="editExistingCustomerBtn"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        ToolTip="Edit Customer Details" Click="editExistingCustomerBtn_Click"
                        Visibility="Collapsed">
                            <Rectangle Width="10" Height="10">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>

                        <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="addNewCustomerBtn"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        ToolTip="Add New Customer" Click="addNewCustomerBtn_Click"
                        >
                            <Rectangle Width="10" Height="10">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                    </StackPanel>

                    <TextBlock Text="Order Date" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="1" />
                    <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Orientation="Horizontal">
                        <DatePicker x:Name="orderDate" Width="150" 
                                    SelectedDate="{Binding Order.OrderDate}"
                                    HorizontalAlignment="Left"
                                    Controls:TextboxHelper.Watermark="Select a date" Margin="5"
                                    IsEnabled="False"
                                    SelectedDateChanged="orderDate_SelectedDateChanged"
                                />

                        <TextBlock Text="Expected Delivery Date" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="2" Margin="10,0,0,0"/>
                        <StackPanel Grid.Row="3" Grid.Column="1" Margin="5" Orientation="Horizontal">
                            <DatePicker x:Name="expectedDeliveryDate" Width="150" 
                                    SelectedDate="{Binding Order.ExpectedDeliveryDateWrapper, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                    HorizontalAlignment="Left"
                                    Controls:TextboxHelper.Watermark="Select a date"
                                    SelectedDateChanged="expectedDeliveryDate_SelectedDateChanged"
                                    IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}" Height="26" VerticalAlignment="Bottom" />
                            <TextBlock x:Name="numberOfDays" Foreground="Gray" Text="##" Style="{StaticResource inLineTextBlockStyle}" Margin="5,0,5,0" VerticalAlignment="Center" 
                                   FontWeight="Bold" />
                            <TextBlock Text="Days" VerticalAlignment="Center" Foreground="Gray" />
                            <Rectangle HorizontalAlignment="Stretch" Width="2" Fill="Gray" Margin="5,0,0,0" />
                            <TextBlock Text="Internal Delivery Date" Style="{StaticResource inLineTextBlockStyle}" Margin="7,0,5,0"/>
                            <DatePicker x:Name="internalDeliveryDate" Width="150" 
                                    SelectedDate="{Binding Order.InternalDeliveryDateWrapper, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                    HorizontalAlignment="Left"
                                    Controls:TextboxHelper.Watermark="Select a date"
                                    SelectedDateChanged="internalDeliveryDate_SelectedDateChanged"
                                    IsHitTestVisible="{Binding CanUpdateEnquiry}" />
                            <TextBlock x:Name="internalDeliveryDateSpan" Foreground="Gray" Text="##" Style="{StaticResource inLineTextBlockStyle}" Margin="5,0,5,0" VerticalAlignment="Center" 
                                   FontWeight="Bold" />
                            
                            <TextBlock Text="Days" VerticalAlignment="Center" Foreground="Gray" />
                        </StackPanel>

                    </StackPanel>

                    <TextBlock Text="Order By" Style="{StaticResource inLineTextBlockStyle}" Grid.Row="2"/>
                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <ComboBox x:Name="agentComboxBox" Width="200" Margin="5"
                              ItemsSource="{Binding DBResources.Agents}"
                              DisplayMemberPath="Name"
                              IsEditable="True"
                              SelectedItem="{Binding Order.Agent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectionChanged="agentComboxBox_SelectionChanged"
                              IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}" />

                        <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="editExistingAgentBtn"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                        ToolTip="Edit Agent Details"  Click="editExistingAgentBtn_Click"
                        Visibility="Collapsed">
                            <Rectangle Width="10" Height="10">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>

                        <Button Width="28"
                        Height="28"
                        Margin="0, 2, 0, 0"
                        HorizontalAlignment="Left"
                        Grid.Row="0"
                        Cursor="Hand"
                        x:Name="addNewAgentBtn"
                        Style="{DynamicResource MetroCircleButtonStyle}"
                            Click="addNewAgentBtn_Click"
                        ToolTip="Add New Agent"
                        >
                            <Rectangle Width="10" Height="10">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                        <TextBlock Text="through" Style="{StaticResource inLineTextBlockStyle}" Margin="10,5,5,5" />
                        <ComboBox Width="100" Margin="5"
                             ItemsSource="{Binding DBResources.OrderThroughs}"
                             DisplayMemberPath="Mode"
                             SelectedItem="{Binding Order.OrderThroughWrapper, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}"
                             IsEditable="True" 
                             IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}"/>
                        <StackPanel x:Name="commisionInfo" Grid.Row="5" Grid.Column="1" Orientation="Horizontal" Margin="5">
                            <TextBlock Text="and commision is" Grid.Row="5" Style="{StaticResource inLineTextBlockStyle}"/>
                            <TextBox Width="60" BorderBrush="LightGray"
                                 HorizontalContentAlignment="Right" 
                                 VerticalContentAlignment="Center"
                                 Controls:TextboxHelper.Watermark="0" Text="{Binding Order.CommissionValueWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, StringFormat=n4}"
                                 PreviewTextInput="TextBox_PreviewTextInput"
                                 DataObject.Pasting="PastingHandler" 
                                 IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}"
                                 />
                            <ComboBox Width="73" Margin="5,0,0,0"
                                  ItemsSource="{Binding DBResources.CommissionValueTypes}"
                                  DisplayMemberPath="Type"
                                  SelectedItem="{Binding Order.CommissionValueTypeWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                  IsHitTestVisible="{Binding IsReadOnly, Converter={StaticResource FlipBoolValueConverter}}"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>

            <Grid Grid.Row="1" Margin="10" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Button x:Name="addNewItemBtn" Grid.Row="0" Content="New Item"  Margin="5" Width="100" Height="25" Foreground="White"
                                        ToolTip="Add New Item" HorizontalAlignment="Left" PreviewMouseLeftButtonUp="addNewItemBtn_PreviewMouseLeftButtonUp"
                                        Visibility="{Binding CanAddNewItem, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <DataGrid x:Name="productsRequired"  Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  AutoGenerateColumns="False" BorderBrush="Gray" BorderThickness="1"
                      CanUserAddRows="False" CanUserDeleteRows="True" CanUserResizeRows="True"  CanUserSortColumns="True" GridLinesVisibility="Horizontal"
                      ColumnWidth="Auto" ItemsSource="{Binding OrderProducts}" HorizontalGridLinesBrush="Gray" VerticalGridLinesBrush="Gray"
                      HeadersVisibility="All"  RowHeaderWidth="25"
                      IsReadOnly="{Binding IsReadOnly}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn x:Name="productColumn" Header="Product" Width="0.2*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid x:Name="productGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <ComboBox x:Name="comboBox"   Grid.Column="0"
                                                                      IsEditable="True"
                                                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                                      ItemsSource="{Binding AvailableProducts, Source={StaticResource DataProvider}}"
                                                                      DisplayMemberPath="Name"
                                                                      SelectedItem="{Binding ProductNameWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                                      TextBoxBase.TextChanged="comboBox_TextChanged"
                                                                      Height="20"
                                                                      PresentationTraceSources.TraceLevel="High"
                                                                      IsHitTestVisible="{Binding IsReadOnly, ElementName=productsRequired, Converter={StaticResource FlipBoolValueConverter}}"/>
                                        <Button Width="28"
                                            Grid.Column="1"
                                            Height="28"
                                            Margin="0, 2, 0, 0"
                                            HorizontalAlignment="Left"
                                            Grid.Row="0"
                                            Cursor="Hand"
                                            x:Name="addBtn"
                                            Click="addNewProductBtn_Click"
                                            Style="{DynamicResource MetroCircleButtonStyle}"
                                            ToolTip="Add New Product"
                                            Visibility="Collapsed"
                                            >
                                            <Rectangle Width="10" Height="10">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Button>


                                        <Button Width="28"
                                                Height="28"
                                                Margin="0, 2, 0, 0"
                                                HorizontalAlignment="Left"
                                                Grid.Column="1"
                                                Cursor="Hand"
                                                x:Name="editBtn"
                                                Style="{DynamicResource MetroCircleButtonStyle}"
                                                ToolTip="Edit Style ID" 
                                                Click="editStyleID_Click"
                                                Visibility="Collapsed">
                                            <Rectangle Width="10" Height="10">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_edit}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        
                        <DataGridTemplateColumn x:Name="styleIDColumn" Header="Style ID" Width="0.16*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding ProductNameWrapper.StyleID}" IsReadOnly="True" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        
                        <DataGridTemplateColumn x:Name="quantityColumn" Header="Quantity" Width="0.16*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding ExpectedQuantityWrapper, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, StringFormat=n4}"
                                            PreviewTextInput="TextBox_PreviewTextInput"
                                            DataObject.Pasting="PastingHandler"
                                            IsHitTestVisible="{Binding DataContext.CanUpdateEnquiry,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn x:Name="unitOfMeasurementColumn" Header="UOM" Width="0.1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ComboBox x:Name="uomComboBox" Grid.Column="0"
                                                                      IsEditable="True"
                                                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                                      Height="20"
                                                                      ItemsSource="{Binding UOMs, Source={StaticResource DataProvider}}"
                                                                      DisplayMemberPath="Units"
                                                                      SelectedItem="{Binding  UnitsOfMeasurementWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                                      IsHitTestVisible="{Binding IsReadOnly, ElementName=productsRequired, Converter={StaticResource FlipBoolValueConverter}}"/>
                                        <Button Width="28"
                                            Grid.Column="1"
                                            Height="28"
                                            Margin="0, 2, 0, 0"
                                            HorizontalAlignment="Left"
                                            Grid.Row="0"
                                            Cursor="Hand"
                                            x:Name="addBtn"
                                            Visibility="Collapsed"
                                            Style="{DynamicResource MetroCircleButtonStyle}"
                                            ToolTip="Add New UOM"
                                            >
                                            <Rectangle Width="10" Height="10">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="currencyColumn" Header="Currency" Width="0.10*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ComboBox x:Name="currencyComboBox" Grid.Column="0"
                                                                      IsEditable="True"
                                                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                                      Height="20"
                                                                      ItemsSource="{Binding Currencies, Source={StaticResource DataProvider}}"
                                                                      DisplayMemberPath="Symbol"
                                                                      SelectedItem="{Binding CurrencyWrapper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}"
                                                                      SelectionChanged="currencyComboBox_SelectionChanged"
                                                                      IsHitTestVisible="{Binding IsReadOnly, ElementName=productsRequired, Converter={StaticResource FlipBoolValueConverter}}" />
                                        <Button Width="28"
                                            Grid.Column="1"
                                            Height="28"
                                            Margin="0, 2, 0, 0"
                                            HorizontalAlignment="Left"
                                            Grid.Row="0"
                                            Cursor="Hand"
                                            x:Name="addBtn"
                                            Visibility="Collapsed"
                                            Style="{DynamicResource MetroCircleButtonStyle}"
                                            ToolTip="Add New Currency"
                                            >
                                            <Rectangle Width="10" Height="10">
                                                <Rectangle.Fill>
                                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn x:Name="currencyValueInINR" Header="Currency Value In INR" Width="0.19*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding CurrencyValueInINR, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, StringFormat=n4}"
                                            PreviewTextInput="TextBox_PreviewTextInput"
                                            DataObject.Pasting="PastingHandler"
                                            IsHitTestVisible="{Binding IsReadOnly, ElementName=productsRequired, Converter={StaticResource FlipBoolValueConverter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn x:Name="buyerTargetPriceColumn" Header="Buyer Target Price" Width="0.18*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding CustomerTargetPriceWrapper, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, StringFormat=n4}" 
                                            PreviewTextInput="TextBox_PreviewTextInput"
                                            DataObject.Pasting="PastingHandler" 
                                            IsHitTestVisible="{Binding DataContext.CanUpdateEnquiry,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTemplateColumn x:Name="ourPriceColumn" Header="Our Price" Width="0.18*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding OurCostInProductCurrenyValue, Mode=OneWay, StringFormat=n4}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0,3,3,3" 
                                             IsHitTestVisible="False"
                                             Foreground="{Binding IsOurCostHigherThanQuoted, Converter={StaticResource BoolToHighlighter}}"
                                             />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn x:Name="profitLoss" Header="Profit/Loss" Width="0.18*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding ProfitOrLossAmount, Mode=OneWay, StringFormat=n4}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0,0,3,0"
                                             IsHitTestVisible="False"
                                             Foreground="{Binding IsOurCostHigherThanQuoted, Converter={StaticResource BoolToHighlighter}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn x:Name="orderValueColumn" Header="Order Value" Width="0.16*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Right" Orientation="Horizontal">
                                        <TextBlock Text="{Binding OrderValueWrapper, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, StringFormat=n4}" HorizontalAlignment="Right" FontSize="16" FontWeight="Bold" />
                                        <TextBlock Text=" INR" FontSize="16" FontWeight="Bold" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <Grid Grid.Row="2" Margin="5" Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <Label Content="Total Order Value : "  Style="{StaticResource DescriptionHeaderStyle}"/>
                    <TextBlock x:Name="totalNumberOfItems" Text="{Binding TotalOrderValue, StringFormat=n4}"  Style="{StaticResource TextBlockHeaderStyle}" FontWeight="Bold"/>
                    <TextBlock  Text="INR"  Style="{StaticResource TextBlockHeaderStyle}" Margin="5,0,0,0"/>
                </StackPanel>
            </Grid>

        </Grid>
        <Grid Grid.Row="1">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal" Margin="5,5,10,10">
                <Button x:Name="positiveDecisionBtn" Content="Create" Width="150" Height="35" Foreground="White"
                        ToolTip="Create Enquiry" Click="positiveDecisionBtn_Click" >
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource AccentColor}" />
                    </Button.Background>
                </Button>
                <Button x:Name="negativeDecisionBtn" Content="Discard" Width="125" Height="35" Margin="15,0,0,0" Foreground="White"
                        ToolTip="Discard Enquiry" Click="negativeDecisionBtn_Click">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource ValidationColor5}"/>
                    </Button.Background>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
